/*
 * MoveAction.h
 *
 *  Created on: 2016/11/11
 *      Author: kerikun11
 */

#ifndef MOVEACTION_H_
#define MOVEACTION_H_

#include "mbed.h"
#include "config.h"
#include <vector>
#include <queue>

#define MOVE_ACTION_PERIOD			1000
#define WALL_ATTACH_ENABLED			false
#define WALL_AVOID_ENABLED			false

#define LOOK_AHEAD_UNIT				8
#define TRAJECTORY_PROP_GAIN		40
#define TRAJECTORY_INT_GAIN			0

class Trajectory {
public:
	Trajectory() {
		reset();
	}
	virtual ~Trajectory() {
	}
	void reset() {
		last_index = 0;
	}
	Position getNextDir(const Position &cur, float velocity) {
		int index_cur = getNextIndex(cur);
		int look_ahead = LOOK_AHEAD_UNIT * (1.0f + pow(velocity / 600, 2));
		Position dir = (getPosition(index_cur + look_ahead) - cur).rotate(-cur.theta);
		dir.theta = atan2f(dir.y, dir.x);
		return dir;
	}
	float getRemain() const {
		return (getSize() - last_index) * interval;
	}
	Position getEndPosition() {
		return getPosition(getSize());
	}
protected:
	int last_index;
	const float interval = 1.0f;
	virtual int size() const {
		return 180;
	}
	virtual Position position(int index) const {
		return Position(index * interval, 0, 0);
	}
	virtual void cache(int index) {
	}
	int getSize() const {
		return size();
	}
	Position getPosition(const int index) {
		return position(index);
	}
	int getNextIndex(const Position& pos) {
		for (int i = last_index;; i++) {
			Position target = getPosition(i);
			Position dir = (target - pos).rotate(-target.theta);
			if (dir.x > 0) {
				last_index = i;
				cache(last_index);
				return last_index;
			}
		}
		return last_index;
	}
};

class Curve90: public Trajectory {
public:
	Curve90(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
private:
	bool mirror;
	virtual int size() const {
		return 158;
	}
	virtual Position position(int index) const {
		static const float data[158 + 1][3] =
				{ { 0, 0, 0 }, { 1, 0, 0 }, { 2, 0, 0 }, { 3, 0, 0 }, { 4, 0, 0 }, { 5, 0, 0 }, { 6, 0, 0 }, { 7, 0, 0 }, { 8, 0, 0 }, { 9, 0, 0 }, { 10, 0, 0 }, { 11, 0, 0 }, { 12, 0, 0 }, { 13, 0, 0 }, { 14, 0, 0 }, { 15, 0, 0 }, { 16, 0, 0 }, { 17, 0, 0 }, { 18, 0, 0 }, { 19, 0, 0 }, { 20, 0, 0 }, { 21.002, 1.4543e-05, 7.5223e-05 }, { 22.002, 0.00030398, 0.00057718 }, { 23.002, 0.0013334, 0.0015505 }, { 24.002, 0.0035741, 0.0029951 }, { 25.002, 0.0074974, 0.004911 }, { 26.001, 0.013575, 0.0072982 }, { 27.001, 0.022277, 0.010157 }, { 28.001, 0.034076, 0.013487 }, { 29.001, 0.049442, 0.017288 }, { 30.001, 0.068847, 0.02156 }, { 31.001, 0.092762, 0.026304 }, { 32, 0.12166, 0.031519 }, { 33, 0.156, 0.037206 }, { 33.999, 0.19627, 0.043364 }, { 34.998, 0.24292, 0.049993 }, { 35.996, 0.29644, 0.057093 }, { 36.995, 0.35728, 0.064665 }, { 37.992, 0.42591, 0.072708 }, { 38.989, 0.5028, 0.081223 }, { 39.986, 0.58842, 0.090208 }, { 40.981, 0.68322, 0.099665 }, { 41.976, 0.78767, 0.10959 }, { 42.969, 0.90222, 0.11999 }, { 43.961, 1.0273, 0.13086 }, { 44.952, 1.1635, 0.14221 }, { 45.941, 1.3111, 0.15402 }, { 46.928, 1.4706, 0.16631 }, { 47.913, 1.6424, 0.17906 }, { 48.896, 1.827, 0.19229 }, { 49.876, 2.0249, 0.20599 }, { 50.854, 2.2364, 0.22016 }, { 51.828, 2.4619, 0.2348 }, { 52.799, 2.702, 0.24991 }, { 53.766, 2.9569, 0.2655 }, { 54.728, 3.227, 0.28155 }, { 55.687, 3.5128, 0.29808 }, { 56.64, 3.8147, 0.31508 }, { 57.588, 4.1329, 0.33255 }, { 58.53, 4.4679, 0.35049 }, { 59.466, 4.8199, 0.3689 }, { 60.395, 5.1893, 0.38778 }, { 61.317, 5.5764, 0.40714 }, { 62.232, 5.9816, 0.42696 }, { 63.138, 6.4049, 0.44726 }, { 64.035, 6.8468, 0.46803 }, { 64.922, 7.3075, 0.48927 }, { 65.8, 7.787, 0.51098 }, { 66.666, 8.2858, 0.53317 }, { 67.522, 8.8038, 0.55582 }, { 68.365, 9.3413, 0.57894 }, { 69.195, 9.8983, 0.60247 }, { 70.013, 10.475, 0.62604 }, { 70.816, 11.07, 0.64962 }, { 71.605, 11.685, 0.67319 }, { 72.379, 12.317, 0.69676 }, { 73.138, 12.968, 0.72034 }, { 73.882, 13.637, 0.74391 }, { 74.61, 14.323, 0.76748 }, { 75.321, 15.025, 0.79106 }, { 76.016, 15.745, 0.81463 }, { 76.693, 16.48, 0.8382 }, { 77.353, 17.232, 0.86178 }, { 77.995, 17.998, 0.88535 }, { 78.619, 18.78, 0.90892 }, { 79.224, 19.576, 0.93249 }, { 79.81, 20.386, 0.95607 }, { 80.377, 21.21, 0.97964 }, { 80.925, 22.047, 1.003 }, { 81.452, 22.896, 1.0259 }, { 81.961, 23.757, 1.0483 }, { 82.45, 24.629, 1.0703 }, { 82.921, 25.511, 1.0918 }, { 83.372, 26.404, 1.1128 }, { 83.805, 27.305, 1.1333 }, { 84.219, 28.215, 1.1534 }, { 84.615, 29.133, 1.173 }, { 84.994, 30.059, 1.1921 }, { 85.355, 30.992, 1.2108 }, { 85.698, 31.931, 1.229 }, { 86.025, 32.876, 1.2467 }, { 86.335, 33.827, 1.2639 }, { 86.629, 34.782, 1.2807 }, { 86.907, 35.743, 1.297 }, { 87.17, 36.708, 1.3128 }, { 87.417, 37.677, 1.3282 }, { 87.65, 38.649, 1.3431 }, { 87.869, 39.625, 1.3575 }, { 88.074, 40.604, 1.3714 }, { 88.265, 41.585, 1.3849 }, { 88.443, 42.569, 1.3979 }, { 88.609, 43.555, 1.4104 }, { 88.763, 44.544, 1.4225 }, { 88.905, 45.533, 1.4341 }, { 89.035, 46.525, 1.4452 }, { 89.155, 47.518, 1.4559 }, { 89.265, 48.512, 1.466 }, { 89.364, 49.507, 1.4757 }, { 89.455, 50.503, 1.485 }, { 89.536, 51.499, 1.4937 }, { 89.609, 52.497, 1.502 }, { 89.673, 53.494, 1.5098 }, { 89.731, 54.493, 1.5172 }, { 89.781, 55.492, 1.524 }, { 89.824, 56.491, 1.5304 }, { 89.862, 57.49, 1.5364 }, { 89.893, 58.489, 1.5418 }, { 89.92, 59.489, 1.5468 }, { 89.941, 60.489, 1.5513 }, { 89.959, 61.489, 1.5554 }, { 89.972, 62.489, 1.559 }, { 89.982, 63.489, 1.5621 }, { 89.99, 64.489, 1.5647 }, { 89.995, 65.488, 1.5669 }, { 89.998, 66.488, 1.5686 }, { 89.999, 67.488, 1.5698 }, { 90, 68.488, 1.5705 }, { 90, 69.488, 1.5708 }, { 90, 70.478, 1.5708 }, { 90, 71.478, 1.5708 }, { 90, 72.478, 1.5708 }, { 90, 73.478, 1.5708 }, { 90, 74.478, 1.5708 }, { 90, 75.478, 1.5708 }, { 90, 76.478, 1.5708 }, { 90, 77.478, 1.5708 }, { 90, 78.478, 1.5708 }, { 90, 79.478, 1.5708 }, { 90, 80.478, 1.5708 }, { 90, 81.478, 1.5708 }, { 90, 82.478, 1.5708 }, { 90, 83.478, 1.5708 }, { 90, 84.478, 1.5708 }, { 90, 85.478, 1.5708 }, { 90, 86.478, 1.5708 }, { 90, 87.478, 1.5708 }, { 90, 88.478, 1.5708 }, { 90, 89.478, 1.5708 }, { 90, 90, 1.5708 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class C45: public Trajectory {
public:
	C45(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
//	const float velocity = 2089.04f;
	const float velocity = 1800.0f;
private:
	bool mirror;
	virtual int size() const {
		return 174;
	}
	virtual Position position(int index) const {
		static const float data[175][3] =
				{ { 0.00000000, 0.00000000, 0.00000000 }, { 1.00000000, 0.00000024, 0.00000096 }, { 2.00000000, 0.00000390, 0.00000778 }, { 3.00000000, 0.00001976, 0.00002630 }, { 4.00000000, 0.00006249, 0.00006239 }, { 4.99999999, 0.00015257, 0.00012187 }, { 5.99999998, 0.00031633, 0.00021055 }, { 6.99999994, 0.00058585, 0.00033418 }, { 7.99999986, 0.00099897, 0.00049848 }, { 8.99999968, 0.00159920, 0.00070911 }, { 9.99999932, 0.00243569, 0.00097168 }, { 10.99999868, 0.00356318, 0.00129172 }, { 11.99999758, 0.00504186, 0.00167468 }, { 12.99999578, 0.00693739, 0.00212595 }, { 13.99999293, 0.00932073, 0.00265081 }, { 14.99998857, 0.01226809, 0.00325446 }, { 15.99998209, 0.01586082, 0.00394198 }, { 16.99997272, 0.02018532, 0.00471837 }, { 17.99995944, 0.02533288, 0.00558847 }, { 18.99994100, 0.03139962, 0.00655704 }, { 19.99991584, 0.03848633, 0.00762869 }, { 20.99988206, 0.04669833, 0.00880790 }, { 21.99983737, 0.05614538, 0.01009902 }, { 22.99977900, 0.06694146, 0.01150622 }, { 23.99970371, 0.07920469, 0.01303357 }, { 24.99960765, 0.09305714, 0.01468494 }, { 25.99948633, 0.10862467, 0.01646407 }, { 26.99933458, 0.12603676, 0.01837450 }, { 27.99914641, 0.14542636, 0.02041964 }, { 28.99891499, 0.16692970, 0.02260268 }, { 29.99863254, 0.19068608, 0.02492667 }, { 30.99829027, 0.21683773, 0.02739445 }, { 31.99787829, 0.24552958, 0.03000869 }, { 32.99738552, 0.27690909, 0.03277185 }, { 33.99679959, 0.31112603, 0.03568622 }, { 34.99610681, 0.34833228, 0.03875387 }, { 35.99529201, 0.38868164, 0.04197669 }, { 36.99433850, 0.43232958, 0.04535635 }, { 37.99322800, 0.47943305, 0.04889432 }, { 38.99194048, 0.53015025, 0.05259188 }, { 39.99045417, 0.58464043, 0.05645009 }, { 40.98874540, 0.64306361, 0.06046980 }, { 41.98678858, 0.70558041, 0.06465164 }, { 42.98455609, 0.77235178, 0.06899605 }, { 43.98201823, 0.84353881, 0.07350324 }, { 44.97914313, 0.91930241, 0.07817322 }, { 45.97589670, 0.99980319, 0.08300579 }, { 46.97224258, 1.08520112, 0.08800053 }, { 47.96814208, 1.17565533, 0.09315679 }, { 48.96355414, 1.27132390, 0.09847376 }, { 49.95843528, 1.37236356, 0.10395037 }, { 50.95273959, 1.47892951, 0.10958538 }, { 51.94641867, 1.59117512, 0.11537731 }, { 52.93942168, 1.70925174, 0.12132450 }, { 53.93169524, 1.83330846, 0.12742508 }, { 54.92318353, 1.96349183, 0.13367698 }, { 55.91382824, 2.09994569, 0.14007793 }, { 56.90356859, 2.24281089, 0.14662547 }, { 57.89234140, 2.39222507, 0.15331696 }, { 58.88008110, 2.54832249, 0.16014954 }, { 59.86671977, 2.71123372, 0.16712020 }, { 60.85218726, 2.88108551, 0.17422574 }, { 61.83641117, 3.05800053, 0.18146277 }, { 62.81931701, 3.24209719, 0.18882775 }, { 63.80082826, 3.43348944, 0.19631695 }, { 64.78086646, 3.63228657, 0.20392651 }, { 65.75935135, 3.83859304, 0.21165238 }, { 66.73620095, 4.05250830, 0.21949038 }, { 67.71133174, 4.27412661, 0.22743617 }, { 68.68465877, 4.50353693, 0.23548529 }, { 69.65609581, 4.74082271, 0.24363313 }, { 70.62555552, 4.98606178, 0.25187494 }, { 71.59294962, 5.23932625, 0.26020587 }, { 72.55818902, 5.50068232, 0.26862095 }, { 73.52118406, 5.77019027, 0.27711508 }, { 74.48184467, 6.04790427, 0.28568309 }, { 75.44008057, 6.33387237, 0.29431969 }, { 76.39580144, 6.62813637, 0.30301951 }, { 77.34891718, 6.93073182, 0.31177709 }, { 78.29933805, 7.24168792, 0.32058690 }, { 79.24697495, 7.56102751, 0.32944334 }, { 80.19173958, 7.88876704, 0.33834075 }, { 81.13354467, 8.22491659, 0.34727343 }, { 82.07230422, 8.56947981, 0.35623560 }, { 83.00793368, 8.92245400, 0.36522148 }, { 83.94035020, 9.28383010, 0.37422524 }, { 84.86947279, 9.65359277, 0.38324102 }, { 85.79522261, 10.03172037, 0.39226297 }, { 86.71752312, 10.41818512, 0.40128519 }, { 87.63630027, 10.81295310, 0.41030183 }, { 88.55148279, 11.21598438, 0.41930700 }, { 89.46300226, 11.62723311, 0.42829487 }, { 90.37079341, 12.04664762, 0.43725959 }, { 91.27479423, 12.47417056, 0.44619537 }, { 92.17494617, 12.90973901, 0.45509644 }, { 93.07119430, 13.35328466, 0.46395709 }, { 93.96348748, 13.80473391, 0.47277165 }, { 94.85177846, 14.26400804, 0.48153452 }, { 95.73602408, 14.73102342, 0.49024016 }, { 96.61618536, 15.20569161, 0.49888311 }, { 97.49222761, 15.68791962, 0.50745798 }, { 98.36412055, 16.17761002, 0.51595949 }, { 99.23183838, 16.67466118, 0.52438243 }, { 100.09535988, 17.17896746, 0.53272172 }, { 100.95466848, 17.69041937, 0.54097236 }, { 101.80975228, 18.20890384, 0.54912948 }, { 102.66060414, 18.73430436, 0.55718835 }, { 103.50722165, 19.26650123, 0.56514433 }, { 104.34960720, 19.80537177, 0.57299294 }, { 105.18776795, 20.35079048, 0.58072983 }, { 106.02171582, 20.90262932, 0.58835081 }, { 106.85146749, 21.46075787, 0.59585182 }, { 107.67704434, 22.02504355, 0.60322897 }, { 108.49847240, 22.59535186, 0.61047853 }, { 109.31578229, 23.17154654, 0.61759693 }, { 110.12900919, 23.75348980, 0.62458077 }, { 110.93819268, 24.34104250, 0.63142684 }, { 111.74337669, 24.93406438, 0.63813209 }, { 112.54460941, 25.53241424, 0.64469366 }, { 113.34194310, 26.13595012, 0.65110890 }, { 114.13543404, 26.74452949, 0.65737531 }, { 114.92514235, 27.35800945, 0.66349061 }, { 115.71113186, 27.97624689, 0.66945271 }, { 116.49346994, 28.59909866, 0.67525973 }, { 117.27222733, 29.22642175, 0.68090997 }, { 118.04747801, 29.85807345, 0.68640195 }, { 118.81929896, 30.49391153, 0.69173440 }, { 119.58777002, 31.13379432, 0.69690624 }, { 120.35297370, 31.77758097, 0.70191662 }, { 121.11499495, 32.42513148, 0.70676488 }, { 121.87392097, 33.07630692, 0.71145060 }, { 122.62984105, 33.73096952, 0.71597353 }, { 123.38284630, 34.38898284, 0.72033367 }, { 124.13302945, 35.05021182, 0.72453121 }, { 124.88048468, 35.71452298, 0.72856656 }, { 125.62530736, 36.38178449, 0.73244035 }, { 126.36759384, 37.05186630, 0.73615340 }, { 127.10744126, 37.72464022, 0.73970675 }, { 127.84494729, 38.39998005, 0.74310165 }, { 128.58020996, 39.07776168, 0.74633956 }, { 129.31332740, 39.75786317, 0.74942213 }, { 130.04439766, 40.44016483, 0.75235122 }, { 130.77351849, 41.12454936, 0.75512891 }, { 131.50078710, 41.81090188, 0.75775744 }, { 132.22630001, 42.49911006, 0.76023926 }, { 132.95015280, 43.18906418, 0.76257703 }, { 133.67243993, 43.88065719, 0.76477357 }, { 134.39325455, 44.57378484, 0.76683190 }, { 135.11268829, 45.26834570, 0.76875521 }, { 135.83083109, 45.96424127, 0.77054687 }, { 136.54777103, 46.66137605, 0.77221044 }, { 137.26359414, 47.35965757, 0.77374960 }, { 137.97838421, 48.05899653, 0.77516825 }, { 138.69222270, 48.75930680, 0.77647041 }, { 139.40518851, 49.46050552, 0.77766025 }, { 140.11735785, 50.16251316, 0.77874210 }, { 140.82880413, 50.86525358, 0.77972044 }, { 141.53959780, 51.56865410, 0.78059986 }, { 142.24980622, 52.27264555, 0.78138509 }, { 142.95949354, 52.97716231, 0.78208099 }, { 143.66872061, 53.68214241, 0.78269252 }, { 144.37754482, 54.38752755, 0.78322478 }, { 145.08602009, 55.09326319, 0.78368293 }, { 145.79419667, 55.79929854, 0.78407226 }, { 146.50212116, 56.50558666, 0.78439814 }, { 147.20983636, 57.21208449, 0.78466602 }, { 147.91738123, 57.91875290, 0.78488143 }, { 148.62479085, 58.62555672, 0.78504997 }, { 149.33209632, 59.33246476, 0.78517728 }, { 150.03932473, 60.03944988, 0.78526909 }, { 150.74649915, 60.74648902, 0.78533114 }, { 151.45363855, 61.45356318, 0.78536924 }, { 152.16075779, 62.16065750, 0.78538920 }, { 152.86786763, 62.86776123, 0.78539689 }, { 153.6386142631709, 63.6385073760759, 0.7853981633974 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class C4545: public Trajectory {
public:
	C4545(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
	const float velocity = 1383.38f;
private:
	bool mirror;
	virtual int size() const {
		return 217;
	}
	virtual Position position(int index) const {
		static const float data[218][3] =
				{ { 0.00000000, 0.00000000, 0.00000000 }, { 1.00000000, 0.00000027, 0.00000106 }, { 2.00000000, 0.00000430, 0.00000857 }, { 3.00000000, 0.00002179, 0.00002901 }, { 4.00000000, 0.00006892, 0.00006882 }, { 4.99999999, 0.00016830, 0.00013445 }, { 5.99999998, 0.00034898, 0.00023233 }, { 6.99999993, 0.00064641, 0.00036883 }, { 7.99999983, 0.00110242, 0.00055031 }, { 8.99999960, 0.00176517, 0.00078308 }, { 9.99999917, 0.00268907, 0.00107339 }, { 10.99999839, 0.00393481, 0.00142745 }, { 11.99999705, 0.00556921, 0.00185140 }, { 12.99999484, 0.00766524, 0.00235133 }, { 13.99999135, 0.01030189, 0.00293322 }, { 14.99998601, 0.01356411, 0.00360302 }, { 15.99997807, 0.01754275, 0.00436656 }, { 16.99996656, 0.02233443, 0.00522960 }, { 17.99995024, 0.02804152, 0.00619779 }, { 18.99992754, 0.03477196, 0.00727670 }, { 19.99989653, 0.04263921, 0.00847179 }, { 20.99985485, 0.05176211, 0.00978838 }, { 21.99979960, 0.06226480, 0.01123172 }, { 22.99972736, 0.07427657, 0.01280691 }, { 23.99963400, 0.08793173, 0.01451893 }, { 24.99951469, 0.10336952, 0.01637263 }, { 25.99936375, 0.12073393, 0.01837273 }, { 26.99917459, 0.14017358, 0.02052380 }, { 27.99893959, 0.16184156, 0.02283029 }, { 28.99865000, 0.18589530, 0.02529648 }, { 29.99829584, 0.21249640, 0.02792650 }, { 30.99786576, 0.24181046, 0.03072433 }, { 31.99734696, 0.27400692, 0.03369380 }, { 32.99672500, 0.30925887, 0.03683854 }, { 33.99598375, 0.34774293, 0.04016207 }, { 34.99510522, 0.38963897, 0.04366768 }, { 35.99406939, 0.43513002, 0.04735854 }, { 36.99285416, 0.48440199, 0.05123761 }, { 37.99143514, 0.53764356, 0.05530767 }, { 38.98978550, 0.59504587, 0.05957134 }, { 39.98787592, 0.65680241, 0.06403105 }, { 40.98567432, 0.72310875, 0.06868903 }, { 41.98314584, 0.79416231, 0.07354733 }, { 42.98025260, 0.87016218, 0.07860781 }, { 43.97695361, 0.95130885, 0.08387214 }, { 44.97320463, 1.03780400, 0.08934179 }, { 45.96895801, 1.12985024, 0.09501804 }, { 46.96416259, 1.22765088, 0.10090196 }, { 47.95876353, 1.33140966, 0.10699445 }, { 48.95270221, 1.44133052, 0.11329618 }, { 49.94591610, 1.55761732, 0.11980765 }, { 50.93833868, 1.68047361, 0.12652914 }, { 51.92989926, 1.81010230, 0.13346074 }, { 52.92052297, 1.94670546, 0.14060233 }, { 53.91013058, 2.09048399, 0.14795361 }, { 54.89863850, 2.24163737, 0.15551405 }, { 55.88595862, 2.40036340, 0.16328295 }, { 56.87199832, 2.56685785, 0.17125941 }, { 57.85666039, 2.74131423, 0.17944230 }, { 58.83984297, 2.92392352, 0.18783033 }, { 59.82143954, 3.11487380, 0.19642201 }, { 60.80133892, 3.31435004, 0.20521563 }, { 61.77942520, 3.52253379, 0.21420932 }, { 62.75557784, 3.73960287, 0.22340100 }, { 63.72967162, 3.96573110, 0.23278841 }, { 64.70157669, 4.20108801, 0.24236910 }, { 65.67115867, 4.44583857, 0.25214043 }, { 66.63827865, 4.70014287, 0.26209960 }, { 67.60279331, 4.96415591, 0.27224360 }, { 68.56455503, 5.23802726, 0.28256928 }, { 69.52341195, 5.52190084, 0.29307329 }, { 70.47920816, 5.81591461, 0.30375212 }, { 71.43178381, 6.12020038, 0.31460208 }, { 72.38097526, 6.43488351, 0.32561936 }, { 73.32661529, 6.76008270, 0.33679993 }, { 74.26853326, 7.09590976, 0.34813965 }, { 75.20655535, 7.44246937, 0.35963422 }, { 76.14050472, 7.79985888, 0.37127917 }, { 77.07020183, 8.16816812, 0.38306992 }, { 77.99546461, 8.54747925, 0.39500172 }, { 78.91610876, 8.93786649, 0.40706972 }, { 79.83194804, 9.33939608, 0.41926891 }, { 80.74279453, 9.75212605, 0.43159416 }, { 81.64845891, 10.17610613, 0.44404024 }, { 82.54875084, 10.61137765, 0.45660178 }, { 83.44347921, 11.05797340, 0.46927333 }, { 84.33245250, 11.51591760, 0.48204929 }, { 85.21547911, 11.98522580, 0.49492402 }, { 86.09236771, 12.46590486, 0.50789173 }, { 86.96292759, 12.95795293, 0.52094657 }, { 87.82696899, 13.46135940, 0.53408261 }, { 88.68430349, 13.97610498, 0.54729383 }, { 89.53474436, 14.50216167, 0.56057414 }, { 90.37810690, 15.03949283, 0.57391740 }, { 91.21420886, 15.58805326, 0.58731740 }, { 92.04287074, 16.14778929, 0.60076786 }, { 92.86391617, 16.71863886, 0.61426247 }, { 93.67717228, 17.30053166, 0.62779488 }, { 94.48247006, 17.89338928, 0.64135870 }, { 95.27964467, 18.49712536, 0.65494751 }, { 96.06853581, 19.11164578, 0.66855485 }, { 96.84898803, 19.73684883, 0.68217427 }, { 97.62085140, 20.37262512, 0.69579603 }, { 98.38398237, 21.01885700, 0.70942176 }, { 99.13823740, 21.67542679, 0.72304748 }, { 99.88347644, 22.34221258, 0.73667321 }, { 100.61956115, 23.01909058, 0.75029893 }, { 101.34635487, 23.70593513, 0.76392466 }, { 102.06372264, 24.40261870, 0.77755038 }, { 102.77153130, 25.10901195, 0.79117611 }, { 103.46964944, 25.82498374, 0.80480184 }, { 104.15794743, 26.55040114, 0.81842756 }, { 104.83629750, 27.28512946, 0.83205329 }, { 105.50457370, 28.02903231, 0.84567901 }, { 106.16265197, 28.78197157, 0.85930474 }, { 106.81041011, 29.54380745, 0.87293046 }, { 107.44775121, 30.31437930, 0.88651365 }, { 108.07454489, 31.09355465, 0.90013436 }, { 108.69067180, 31.88119175, 0.91374399 }, { 109.29602912, 32.67713591, 0.92733609 }, { 109.89052160, 33.48122755, 0.94090419 }, { 110.47406168, 34.29330248, 0.95444188 }, { 111.04656976, 35.11319229, 0.96794276 }, { 111.60797431, 35.94072467, 0.98140047 }, { 112.15821203, 36.77572376, 0.99480869 }, { 112.69722798, 37.61801050, 1.00816114 }, { 113.22497568, 38.46740301, 1.02145160 }, { 113.74141721, 39.32371696, 1.03467391 }, { 114.24652327, 40.18676589, 1.04782198 }, { 114.74027327, 41.05636161, 1.06088978 }, { 115.22265529, 41.93231455, 1.07387136 }, { 115.69366617, 42.81443410, 1.08676085 }, { 116.15331147, 43.70252901, 1.09955247 }, { 116.60160544, 44.59640769, 1.11224055 }, { 117.03857100, 45.49587860, 1.12481947 }, { 117.46423967, 46.40075054, 1.13728377 }, { 117.87865150, 47.31083303, 1.14962807 }, { 118.28185496, 48.22593659, 1.16184711 }, { 118.67390687, 49.14587307, 1.17393574 }, { 119.05487223, 50.07045595, 1.18588894 }, { 119.42482408, 50.99950061, 1.19770183 }, { 119.78384340, 51.93282467, 1.20936965 }, { 120.13201888, 52.87024815, 1.22088779 }, { 120.46944676, 53.81159381, 1.23225176 }, { 120.79623064, 54.75668737, 1.24345724 }, { 121.11248128, 55.70535769, 1.25450005 }, { 121.41831634, 56.65743702, 1.26537616 }, { 121.71386021, 57.61276119, 1.27608172 }, { 121.99924375, 58.57116977, 1.28661302 }, { 122.27460401, 59.53250623, 1.29696652 }, { 122.54008405, 60.49661812, 1.30713885 }, { 122.79583260, 61.46335715, 1.31712682 }, { 123.04200386, 62.43257937, 1.32692741 }, { 123.27875718, 63.40414520, 1.33653778 }, { 123.50625682, 64.37791958, 1.34595527 }, { 123.72467163, 65.35377196, 1.35517739 }, { 123.93417483, 66.33157646, 1.36420186 }, { 124.13494364, 67.31121179, 1.37302658 }, { 124.32715908, 68.29256139, 1.38164962 }, { 124.51100561, 69.27551334, 1.39006927 }, { 124.68667089, 70.25996044, 1.39828401 }, { 124.85434546, 71.24580013, 1.40629248 }, { 125.01422247, 72.23293450, 1.41409357 }, { 125.16649739, 73.22127025, 1.42168633 }, { 125.31136772, 74.21071860, 1.42907001 }, { 125.44903271, 75.20119529, 1.43624408 }, { 125.57969306, 76.19262044, 1.44320819 }, { 125.70355068, 77.18491852, 1.44996219 }, { 125.82080839, 78.17801825, 1.45650615 }, { 125.93166964, 79.17185246, 1.46284032 }, { 126.03633827, 80.16635804, 1.46896515 }, { 126.13501822, 81.16147580, 1.47488130 }, { 126.22791329, 82.15715034, 1.48058962 }, { 126.31522685, 83.15332995, 1.48609116 }, { 126.39716165, 84.14996647, 1.49138718 }, { 126.47391951, 85.14701515, 1.49647910 }, { 126.54570112, 86.14443453, 1.50136857 }, { 126.61270579, 87.14218627, 1.50605743 }, { 126.67513121, 88.14023506, 1.51054768 }, { 126.73317324, 89.13854843, 1.51484153 }, { 126.78702569, 90.13709663, 1.51894140 }, { 126.83688008, 91.13585249, 1.52284984 }, { 126.88292546, 92.13479127, 1.52656964 }, { 126.92534816, 93.13389050, 1.53010372 }, { 126.96433167, 94.13312988, 1.53345521 }, { 127.00005634, 95.13249113, 1.53662740 }, { 127.03269928, 96.13195784, 1.53962376 }, { 127.06243413, 97.13151533, 1.54244790 }, { 127.08943088, 98.13115055, 1.54510364 }, { 127.11385573, 99.13085196, 1.54759492 }, { 127.13587088, 100.13060938, 1.54992584 }, { 127.15563439, 101.13041386, 1.55210069 }, { 127.17330001, 102.13025764, 1.55412386 }, { 127.18901705, 103.13013397, 1.55599991 }, { 127.20293020, 104.13003706, 1.55773354 }, { 127.21517941, 105.12996193, 1.55932958 }, { 127.22589974, 106.12990437, 1.56079299 }, { 127.23522125, 107.12986085, 1.56212886 }, { 127.24326885, 108.12982841, 1.56334240 }, { 127.25016218, 109.12980460, 1.56443894 }, { 127.25601552, 110.12978743, 1.56542391 }, { 127.26093765, 111.12977528, 1.56630285 }, { 127.26503175, 112.12976688, 1.56708142 }, { 127.26839534, 113.12976120, 1.56776534 }, { 127.27112012, 114.12975747, 1.56836046 }, { 127.27329193, 115.12975510, 1.56887268 }, { 127.27499068, 116.12975365, 1.56930799 }, { 127.27629022, 117.12975280, 1.56967247 }, { 127.27725831, 118.12975233, 1.56997224 }, { 127.27795654, 119.12975208, 1.57021351 }, { 127.27844030, 120.12975196, 1.57040251 }, { 127.27875866, 121.12975191, 1.57054556 }, { 127.27895441, 122.12975189, 1.57064900 }, { 127.27906396, 123.12975189, 1.57071920 }, { 127.27911732, 124.12975189, 1.57076259 }, { 127.27913806, 125.12975189, 1.57078560 }, { 127.27914333, 126.12975189, 1.57079469 }, { 127.2791438010288, 127.2747518858855, 1.5707963267948 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class C90: public Trajectory {
public:
	C90(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
	const float velocity = 978.16f;
private:
	bool mirror;
	virtual int size() const {
		return 153;
	}
	virtual Position position(int index) const {
		static const float data[154][3] =
				{ { 0.00000000, 0.00000000, 0.00000000 }, { 1.00000000, 0.00000076, 0.00000301 }, { 2.00000000, 0.00001216, 0.00002425 }, { 3.00000000, 0.00006163, 0.00008201 }, { 3.99999999, 0.00019486, 0.00019452 }, { 4.99999995, 0.00047570, 0.00037988 }, { 5.99999981, 0.00098605, 0.00065607 }, { 6.99999946, 0.00182570, 0.00104090 }, { 7.99999862, 0.00311217, 0.00155196 }, { 8.99999685, 0.00498041, 0.00220662 }, { 9.99999344, 0.00758264, 0.00302195 }, { 10.99998726, 0.01108799, 0.00401474 }, { 11.99997664, 0.01568218, 0.00520142 }, { 12.99995925, 0.02156723, 0.00659807 }, { 13.99993180, 0.02896098, 0.00822036 }, { 14.99988993, 0.03809676, 0.01008353 }, { 15.99982784, 0.04922287, 0.01220237 }, { 16.99973810, 0.06260213, 0.01459118 }, { 17.99961124, 0.07851138, 0.01726373 }, { 18.99943546, 0.09724093, 0.02023329 }, { 19.99919620, 0.11909397, 0.02351252 }, { 20.99887577, 0.14438598, 0.02711353 }, { 21.99845285, 0.17344413, 0.03104778 }, { 22.99790206, 0.20660656, 0.03532612 }, { 23.99719346, 0.24422173, 0.03995875 }, { 24.99629203, 0.28664771, 0.04495518 }, { 25.99515713, 0.33425138, 0.05032423 }, { 26.99374196, 0.38740769, 0.05607402 }, { 27.99199297, 0.44649886, 0.06221195 }, { 28.98984936, 0.51191348, 0.06874466 }, { 29.98724243, 0.58404571, 0.07567806 }, { 30.98409506, 0.66329436, 0.08301728 }, { 31.98032113, 0.75006192, 0.09076670 }, { 32.97582498, 0.84475367, 0.09892991 }, { 33.97050087, 0.94777668, 0.10750969 }, { 34.96423247, 1.05953874, 0.11650807 }, { 35.95689238, 1.18044743, 0.12592624 }, { 36.94834168, 1.31090898, 0.13576463 }, { 37.93842953, 1.45132721, 0.14602285 }, { 38.92699279, 1.60210245, 0.15669971 }, { 39.91385573, 1.76363042, 0.16779324 }, { 40.89882975, 1.93630105, 0.17930065 }, { 41.88171319, 2.12049742, 0.19121838 }, { 42.86229121, 2.31659453, 0.20354210 }, { 43.84033574, 2.52495819, 0.21626669 }, { 44.81560544, 2.74594385, 0.22938627 }, { 45.78784586, 2.97989546, 0.24289421 }, { 46.75678958, 3.22714433, 0.25678315 }, { 47.72215645, 3.48800798, 0.27104500 }, { 48.68365399, 3.76278908, 0.28567094 }, { 49.64097777, 4.05177434, 0.30065150 }, { 50.59381194, 4.35523351, 0.31597649 }, { 51.54182986, 4.67341833, 0.33163510 }, { 52.48469479, 5.00656160, 0.34761587 }, { 53.42206066, 5.35487628, 0.36390672 }, { 54.35357294, 5.71855464, 0.38049500 }, { 55.27886959, 6.09776747, 0.39736748 }, { 56.19758212, 6.49266340, 0.41451038 }, { 57.10933664, 6.90336825, 0.43190943 }, { 58.01375505, 7.32998448, 0.44954986 }, { 58.91045627, 7.77259075, 0.46741645 }, { 59.79905755, 8.23124154, 0.48549352 }, { 60.67917575, 8.70596686, 0.50376502 }, { 61.55042876, 9.19677213, 0.52221452 }, { 62.41243691, 9.70363808, 0.54082526 }, { 63.26482436, 10.22652079, 0.55958016 }, { 64.10722057, 10.76535184, 0.57846187 }, { 64.93926178, 11.32003858, 0.59745280 }, { 65.76059239, 11.89046445, 0.61653515 }, { 66.57086646, 12.47648950, 0.63569095 }, { 67.36974907, 13.07795091, 0.65490210 }, { 68.15691772, 13.69466368, 0.67415036 }, { 68.93206366, 14.32642141, 0.69341747 }, { 69.69491735, 14.97296864, 0.71264887 }, { 70.44517158, 15.63409469, 0.73191929 }, { 71.18254711, 16.30955481, 0.75118971 }, { 71.90677015, 16.99909817, 0.77046013 }, { 72.61757174, 17.70246874, 0.78973056 }, { 73.31468796, 18.41940530, 0.80900098 }, { 73.99785992, 19.14964165, 0.82827140 }, { 74.66683396, 19.89290661, 0.84754182 }, { 75.32136164, 20.64892418, 0.86681224 }, { 75.96123308, 21.41738629, 0.88599289 }, { 76.58621701, 22.19800411, 0.90525384 }, { 77.19606008, 22.99050685, 0.92448777 }, { 77.79056547, 23.79457940, 0.94367642 }, { 78.36955811, 24.60989347, 0.96280162 }, { 78.93288544, 25.43610900, 0.98184531 }, { 79.48041803, 26.27287549, 1.00078961 }, { 80.01205006, 27.11983348, 1.01961679 }, { 80.52769981, 27.97661597, 1.03830937 }, { 81.02730989, 28.84284984, 1.05685013 }, { 81.51084753, 29.71815734, 1.07522211 }, { 81.97830462, 30.60215752, 1.09340871 }, { 82.42969769, 31.49446763, 1.11139365 }, { 82.86506786, 32.39470455, 1.12916104 }, { 83.28448057, 33.30248611, 1.14669543 }, { 83.68802530, 34.21743242, 1.16398177 }, { 84.07581511, 35.13916715, 1.18100553 }, { 84.44798622, 36.06731870, 1.19775263 }, { 84.80469736, 37.00152135, 1.21420955 }, { 85.14612911, 37.94141635, 1.23036332 }, { 85.47248320, 38.88665289, 1.24620153 }, { 85.78398167, 39.83688899, 1.26171238 }, { 86.08086600, 40.79179240, 1.27688470 }, { 86.36339618, 41.75104127, 1.29170796 }, { 86.63184975, 42.71432484, 1.30617227 }, { 86.88652078, 43.68134403, 1.32026846 }, { 87.12771877, 44.65181188, 1.33398805 }, { 87.35576764, 45.62545396, 1.34732325 }, { 87.57100453, 46.60200868, 1.36026703 }, { 87.77377873, 47.58122750, 1.37281310 }, { 87.96445052, 48.56287509, 1.38495592 }, { 88.14339002, 49.54672934, 1.39669072 }, { 88.31097601, 50.53258138, 1.40801351 }, { 88.46759481, 51.52023549, 1.41892107 }, { 88.61363911, 52.50950891, 1.42941099 }, { 88.74950686, 53.50023163, 1.43948163 }, { 88.87560009, 54.49224611, 1.44913217 }, { 88.99232387, 55.48540696, 1.45836259 }, { 89.10008514, 56.47958050, 1.46717365 }, { 89.19929173, 57.47464441, 1.47556691 }, { 89.29035122, 58.47048720, 1.48354475 }, { 89.37366999, 59.46700776, 1.49111032 }, { 89.44965219, 60.46411479, 1.49826754 }, { 89.51869877, 61.46172632, 1.50502114 }, { 89.58120652, 62.45976912, 1.51137660 }, { 89.63756722, 63.45817811, 1.51734015 }, { 89.68816668, 64.45689583, 1.52291879 }, { 89.73338393, 65.45587188, 1.52812022 }, { 89.77359038, 66.45506230, 1.53295289 }, { 89.80914902, 67.45442906, 1.53742593 }, { 89.84041365, 68.45393950, 1.54154916 }, { 89.86772818, 69.45356579, 1.54533306 }, { 89.89142585, 70.45328446, 1.54878877 }, { 89.91182864, 71.45307589, 1.55192804 }, { 89.92924656, 72.45292385, 1.55476322 }, { 89.94397703, 73.45281508, 1.55730727 }, { 89.95630435, 74.45273889, 1.55957366 }, { 89.96649909, 75.45268675, 1.56157641 }, { 89.97481757, 76.45265202, 1.56333005 }, { 89.98150137, 77.45262959, 1.56484956 }, { 89.98677688, 78.45261561, 1.56615038 }, { 89.99085483, 79.45260724, 1.56724838 }, { 89.99392993, 80.45260248, 1.56815979 }, { 89.99618044, 81.45259992, 1.56890120 }, { 89.99776788, 82.45259865, 1.56948954 }, { 89.99883671, 83.45259807, 1.56994201 }, { 89.99951401, 84.45259783, 1.57027609 }, { 89.99990933, 85.45259775, 1.57050947 }, { 90.00011438, 86.45259773, 1.57066003 }, { 90.00020292, 87.45259773, 1.57074582 }, { 90.00023062, 88.45259773, 1.57078500 }, { 90, 90, 1.570796326794816 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class C135: public Trajectory {
public:
	C135(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
	const float velocity = 1056.21f;
private:
	bool mirror;
	virtual int size() const {
		return 209;
	}
	virtual Position position(int index) const {
		static const float data[210][3] =
				{ { 0.00000000, 0.00000000, 0.00000000 }, { 1.00000000, 0.00000060, 0.00000239 }, { 2.00000000, 0.00000966, 0.00001926 }, { 3.00000000, 0.00004896, 0.00006515 }, { 3.99999999, 0.00015480, 0.00015454 }, { 4.99999997, 0.00037793, 0.00030183 }, { 5.99999988, 0.00078346, 0.00052136 }, { 6.99999966, 0.00145078, 0.00082732 }, { 7.99999913, 0.00247339, 0.00123378 }, { 8.99999801, 0.00395878, 0.00175462 }, { 9.99999585, 0.00602825, 0.00240356 }, { 10.99999194, 0.00881669, 0.00319409 }, { 11.99998522, 0.01247239, 0.00413950 }, { 12.99997420, 0.01715677, 0.00525278 }, { 13.99995680, 0.02304413, 0.00654670 }, { 14.99993022, 0.03032138, 0.00803369 }, { 15.99989080, 0.03918768, 0.00972588 }, { 16.99983376, 0.04985417, 0.01163509 }, { 17.99975305, 0.06254358, 0.01377274 }, { 18.99964112, 0.07748988, 0.01614992 }, { 19.99948860, 0.09493788, 0.01877729 }, { 20.99928411, 0.11514281, 0.02166515 }, { 21.99901391, 0.13836992, 0.02482332 }, { 22.99866159, 0.16489397, 0.02826122 }, { 23.99820776, 0.19499882, 0.03198780 }, { 24.99762966, 0.22897688, 0.03601154 }, { 25.99690084, 0.26712865, 0.04034043 }, { 26.99599072, 0.30976213, 0.04498197 }, { 27.99486425, 0.35719232, 0.04994314 }, { 28.99348147, 0.40974061, 0.05523040 }, { 29.99179710, 0.46773417, 0.06084970 }, { 30.98976017, 0.53150540, 0.06680642 }, { 31.98731350, 0.60139123, 0.07310540 }, { 32.98439341, 0.67773247, 0.07975092 }, { 33.98092918, 0.76087320, 0.08674671 }, { 34.97684273, 0.85115998, 0.09409589 }, { 35.97204817, 0.94894123, 0.10180105 }, { 36.96645146, 1.05456642, 0.10986417 }, { 37.95994999, 1.16838537, 0.11828665 }, { 38.95243228, 1.29074746, 0.12706931 }, { 39.94377762, 1.42200086, 0.13621238 }, { 40.93385579, 1.56249175, 0.14571551 }, { 41.92252680, 1.71256344, 0.15557773 }, { 42.90964067, 1.87255565, 0.16579753 }, { 43.89503720, 2.04280358, 0.17637278 }, { 44.87854585, 2.22363715, 0.18730080 }, { 45.85998563, 2.41538010, 0.19857830 }, { 46.83916503, 2.61834916, 0.21020146 }, { 47.81588203, 2.83285319, 0.22216586 }, { 48.78992410, 3.05919238, 0.23446654 }, { 49.76106836, 3.29765732, 0.24709799 }, { 50.72908168, 3.54852826, 0.26005416 }, { 51.69372091, 3.81207420, 0.27332847 }, { 52.65473317, 4.08855217, 0.28691382 }, { 53.61185613, 4.37820638, 0.30080260 }, { 54.56481845, 4.68126749, 0.31498672 }, { 55.51334023, 4.99795186, 0.32945758 }, { 56.45713347, 5.32846084, 0.34420614 }, { 57.39590270, 5.67298012, 0.35922290 }, { 58.32934558, 6.03167911, 0.37449790 }, { 59.25715355, 6.40471030, 0.39002079 }, { 60.17901266, 6.79220881, 0.40578079 }, { 61.09460425, 7.19429180, 0.42176676 }, { 62.00360588, 7.61105814, 0.43796717 }, { 62.90569213, 8.04258795, 0.45437014 }, { 63.80053558, 8.48894234, 0.47096347 }, { 64.68780776, 8.95016316, 0.48773465 }, { 65.56718010, 9.42627278, 0.50467088 }, { 66.43832500, 9.91727404, 0.52175906 }, { 67.30091682, 10.42315014, 0.53898590 }, { 68.15463295, 10.94386471, 0.55633783 }, { 68.99915491, 11.47936191, 0.57380110 }, { 69.83416934, 12.02956661, 0.59136179 }, { 70.65936913, 12.59438459, 0.60900579 }, { 71.47445446, 13.17370295, 0.62671889 }, { 72.27913384, 13.76739040, 0.64448672 }, { 73.07312512, 14.37529781, 0.66229488 }, { 73.85615651, 14.99725869, 0.68012885 }, { 74.62796787, 15.63308940, 0.69797200 }, { 75.38831083, 16.28259079, 0.71581841 }, { 76.13694206, 16.94555741, 0.73366482 }, { 76.87362312, 17.62177813, 0.75151123 }, { 77.59811941, 18.31103758, 0.76935764 }, { 78.31020017, 19.01311625, 0.78720405 }, { 79.00963862, 19.72779052, 0.80505046 }, { 79.69621200, 20.45483279, 0.82289687 }, { 80.36970163, 21.19401150, 0.84074328 }, { 81.02989304, 21.94509123, 0.85858968 }, { 81.67657595, 22.70783278, 0.87643609 }, { 82.30954440, 23.48199323, 0.89428250 }, { 82.92859681, 24.26732601, 0.91212891 }, { 83.53353601, 25.06358101, 0.92997532 }, { 84.12416934, 25.87050463, 0.94782173 }, { 84.70030870, 26.68783987, 0.96566814 }, { 85.26177058, 27.51532644, 0.98351455 }, { 85.80837617, 28.35270078, 1.00136096 }, { 86.33995139, 29.19969620, 1.01920737 }, { 86.85632693, 30.05604295, 1.03705378 }, { 87.35733834, 30.92146830, 1.05490019 }, { 87.84282606, 31.79569661, 1.07274660 }, { 88.31263545, 32.67844946, 1.09059301 }, { 88.76661690, 33.56944570, 1.10843941 }, { 89.20462581, 34.46840157, 1.12628582 }, { 89.62652270, 35.37503075, 1.14413223 }, { 90.03217318, 36.28904451, 1.16197864 }, { 90.42144807, 37.21015173, 1.17982505 }, { 90.79422338, 38.13805907, 1.19767146 }, { 91.15038040, 39.07247099, 1.21551787 }, { 91.48980569, 40.01308990, 1.23336428 }, { 91.81239115, 40.95961622, 1.25121069 }, { 92.11803404, 41.91174851, 1.26905710 }, { 92.40663702, 42.86918351, 1.28690351 }, { 92.67810817, 43.83161630, 1.30474992 }, { 92.93236103, 44.79874035, 1.32259633 }, { 93.16931463, 45.77024766, 1.34044273 }, { 93.38889350, 46.74582881, 1.35828914 }, { 93.59102771, 47.72517309, 1.37613555 }, { 93.77565288, 48.70796860, 1.39398196 }, { 93.94271020, 49.69390232, 1.41182837 }, { 94.09214649, 50.68266026, 1.42967478 }, { 94.22391413, 51.67392750, 1.44752119 }, { 94.33797117, 52.66738835, 1.46536760 }, { 94.43428128, 53.66272639, 1.48321401 }, { 94.51281378, 54.65962464, 1.50106042 }, { 94.57354367, 55.65776558, 1.51890683 }, { 94.61645160, 56.65683133, 1.53675324 }, { 94.64152391, 57.65650369, 1.55459965 }, { 94.64875261, 58.65646430, 1.57244606 }, { 94.63813540, 59.65639466, 1.59029246 }, { 94.60967567, 60.65597632, 1.60813887 }, { 94.56338246, 61.65489094, 1.62598528 }, { 94.49927054, 62.65282035, 1.64383169 }, { 94.41736032, 63.64944675, 1.66167810 }, { 94.31774094, 64.64445905, 1.67945753 }, { 94.20039088, 65.63753632, 1.69728772 }, { 94.06536668, 66.62836530, 1.71508932 }, { 93.91274665, 67.61663694, 1.73284786 }, { 93.74262862, 68.60204739, 1.75054892 }, { 93.55512959, 69.58429899, 1.76817817 }, { 93.35038535, 70.56310140, 1.78572142 }, { 93.12855000, 71.53817254, 1.80316459 }, { 92.88979537, 72.50923958, 1.82049379 }, { 92.63431051, 73.47603989, 1.83769530 }, { 92.36230099, 74.43832184, 1.85475562 }, { 92.07398822, 75.39584570, 1.87166146 }, { 91.76960875, 76.34838430, 1.88839981 }, { 91.44941348, 77.29572381, 1.90495790 }, { 91.11366683, 78.23766429, 1.92132329 }, { 90.76264596, 79.17402031, 1.93748384 }, { 90.39663987, 80.10462138, 1.95342772 }, { 90.01594853, 81.02931242, 1.96914349 }, { 89.62088203, 81.94795409, 1.98462007 }, { 89.21175963, 82.86042301, 1.99984676 }, { 88.78890888, 83.76661205, 2.01481328 }, { 88.35266473, 84.66643039, 2.02950976 }, { 87.90336860, 85.55980359, 2.04392679 }, { 87.44136756, 86.44667359, 2.05805541 }, { 86.96701336, 87.32699862, 2.07188711 }, { 86.48066167, 88.20075304, 2.08541390 }, { 85.98267118, 89.06792714, 2.09862825 }, { 85.47340283, 89.92852687, 2.11152318 }, { 84.95321899, 90.78257348, 2.12409219 }, { 84.42248275, 91.63010316, 2.13632934 }, { 83.88155714, 92.47116659, 2.14822923 }, { 83.33080449, 93.30582843, 2.15978699 }, { 82.77058574, 94.13416682, 2.17099833 }, { 82.20125984, 94.95627276, 2.18185951 }, { 81.62318313, 95.77224955, 2.19236738 }, { 81.03670883, 96.58221209, 2.20251934 }, { 80.44218650, 97.38628621, 2.21231339 }, { 79.83996155, 98.18460801, 2.22174812 }, { 79.23037482, 98.97732307, 2.23082268 }, { 78.61376216, 99.76458573, 2.23953683 }, { 77.99045403, 100.54655834, 2.24789090 }, { 77.36077517, 101.32341046, 2.25588584 }, { 76.72504430, 102.09531809, 2.26352315 }, { 76.08357378, 102.86246290, 2.27080494 }, { 75.43666939, 103.62503139, 2.27773387 }, { 74.78463006, 104.38321416, 2.28431320 }, { 74.12774767, 105.13720507, 2.29054677 }, { 73.46630686, 105.88720051, 2.29643895 }, { 72.80058480, 106.63339858, 2.30199469 }, { 72.13085110, 107.37599840, 2.30721948 }, { 71.45736759, 108.11519930, 2.31211937 }, { 70.78038825, 108.85120013, 2.31670091 }, { 70.10015901, 109.58419854, 2.32097119 }, { 69.41691770, 110.31439029, 2.32493781 }, { 68.73089388, 111.04196860, 2.32860884 }, { 68.04230878, 111.76712349, 2.33199285 }, { 67.35137517, 112.49004115, 2.33509890 }, { 66.65829726, 113.21090337, 2.33793646 }, { 65.96327064, 113.92988698, 2.34051546 }, { 65.26648211, 114.64716329, 2.34284627 }, { 64.56810967, 115.36289757, 2.34493962 }, { 63.86832235, 116.07724862, 2.34680668 }, { 63.16728015, 116.79036825, 2.34845894 }, { 62.46513394, 117.50240093, 2.34990828 }, { 61.76202537, 118.21348334, 2.35116688 }, { 61.05808672, 118.92374405, 2.35224726 }, { 60.35344087, 119.63330318, 2.35316221 }, { 59.64820115, 120.34227208, 2.35392480 }, { 58.94247128, 121.05075306, 2.35454834 }, { 58.23634523, 121.75883921, 2.35504637 }, { 57.52990719, 122.46661408, 2.35543264 }, { 56.82323141, 123.17415160, 2.35572109 }, { 56.11638217, 123.88151583, 2.35592578 }, { 55.40941370, 124.58876089, 2.35606097 }, { 54.70237008, 125.29593083, 2.35614097 }, { 53.99528522, 126.00305953, 2.35618023 }, { 52.7224975411232, 127.2758562643776, 2.35619322 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class C180: public Trajectory {
public:
	C180(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
	const float velocity = 1623.31f;
private:
	bool mirror;
	virtual int size() const {
		return 390;
	}
	virtual Position position(int index) const {
		static const float data[391][3] =
				{ { 0.00000000, 0.00000000, 0.00000000 }, { 1.00000000, 0.00000017, 0.00000066 }, { 2.00000000, 0.00000266, 0.00000531 }, { 3.00000000, 0.00001349, 0.00001795 }, { 4.00000000, 0.00004266, 0.00004260 }, { 5.00000000, 0.00010418, 0.00008324 }, { 5.99999999, 0.00021605, 0.00014385 }, { 6.99999997, 0.00040023, 0.00022841 }, { 7.99999993, 0.00068267, 0.00034087 }, { 8.99999985, 0.00109323, 0.00048516 }, { 9.99999968, 0.00166571, 0.00066519 }, { 10.99999938, 0.00243781, 0.00088484 }, { 11.99999887, 0.00345109, 0.00114798 }, { 12.99999802, 0.00475098, 0.00145844 }, { 13.99999667, 0.00638669, 0.00182001 }, { 14.99999462, 0.00841122, 0.00223645 }, { 15.99999156, 0.01088134, 0.00271148 }, { 16.99998712, 0.01385747, 0.00324880 }, { 17.99998081, 0.01740374, 0.00385203 }, { 18.99997204, 0.02158787, 0.00452477 }, { 19.99996005, 0.02648115, 0.00527057 }, { 20.99994390, 0.03215840, 0.00609292 }, { 21.99992249, 0.03869790, 0.00699527 }, { 22.99989444, 0.04618135, 0.00798100 }, { 23.99985816, 0.05469379, 0.00905345 }, { 24.99981174, 0.06432357, 0.01021587 }, { 25.99975293, 0.07516228, 0.01147149 }, { 26.99967914, 0.08730467, 0.01282344 }, { 27.99958733, 0.10084859, 0.01427480 }, { 28.99947402, 0.11589494, 0.01582858 }, { 29.99933524, 0.13254756, 0.01748771 }, { 30.99916645, 0.15091320, 0.01925507 }, { 31.99896250, 0.17110140, 0.02113343 }, { 32.99871759, 0.19322446, 0.02312552 }, { 33.99842520, 0.21739731, 0.02523396 }, { 34.99807803, 0.24373745, 0.02746132 }, { 35.99766795, 0.27236488, 0.02981006 }, { 36.99718593, 0.30340198, 0.03228258 }, { 37.99662197, 0.33697343, 0.03488116 }, { 38.99596504, 0.37320612, 0.03760804 }, { 39.99520301, 0.41222908, 0.04046534 }, { 40.99432259, 0.45417332, 0.04345509 }, { 41.99330924, 0.49917180, 0.04657924 }, { 42.99214711, 0.54735927, 0.04983964 }, { 43.99081895, 0.59887220, 0.05323805 }, { 44.98930608, 0.65384868, 0.05677614 }, { 45.98758826, 0.71242826, 0.06045547 }, { 46.98564364, 0.77475189, 0.06427750 }, { 47.98344870, 0.84096179, 0.06824362 }, { 48.98097815, 0.91120133, 0.07235509 }, { 49.97820486, 0.98561489, 0.07661307 }, { 50.97509979, 1.06434779, 0.08101865 }, { 51.97163193, 1.14754613, 0.08557279 }, { 52.96776820, 1.23535665, 0.09027635 }, { 53.96347340, 1.32792664, 0.09513009 }, { 54.95871011, 1.42540381, 0.10013467 }, { 55.95343867, 1.52793610, 0.10529065 }, { 56.94761708, 1.63567163, 0.11059848 }, { 57.94120094, 1.74875850, 0.11605849 }, { 58.93414338, 1.86734466, 0.12167093 }, { 59.92639504, 1.99157781, 0.12743593 }, { 60.91790397, 2.12160521, 0.13335352 }, { 61.90861560, 2.25757357, 0.13942363 }, { 62.89847269, 2.39962889, 0.14564606 }, { 63.88741528, 2.54791631, 0.15202053 }, { 64.87538067, 2.70257997, 0.15854665 }, { 65.86230334, 2.86376287, 0.16522393 }, { 66.84811496, 3.03160670, 0.17205175 }, { 67.83274437, 3.20625170, 0.17902942 }, { 68.81611751, 3.38783651, 0.18615612 }, { 69.79815744, 3.57649801, 0.19343094 }, { 70.77878433, 3.77237119, 0.20085287 }, { 71.75791546, 3.97558895, 0.20842080 }, { 72.73546519, 4.18628201, 0.21613349 }, { 73.71134501, 4.40457871, 0.22398964 }, { 74.68546350, 4.63060488, 0.23198783 }, { 75.65772642, 4.86448368, 0.24012655 }, { 76.62803668, 5.10633547, 0.24840418 }, { 77.59629440, 5.35627763, 0.25681902 }, { 78.56239695, 5.61442443, 0.26536926 }, { 79.52623899, 5.88088689, 0.27405301 }, { 80.48771251, 6.15577265, 0.28286828 }, { 81.44670695, 6.43918579, 0.29181299 }, { 82.40310918, 6.73122673, 0.30088498 }, { 83.35680366, 7.03199206, 0.31008198 }, { 84.30767248, 7.34157446, 0.31940166 }, { 85.25559543, 7.66006251, 0.32884159 }, { 86.20045017, 7.98754064, 0.33839925 }, { 87.14211223, 8.32408894, 0.34807206 }, { 88.08045523, 8.66978308, 0.35785734 }, { 89.01535091, 9.02469421, 0.36775235 }, { 89.94666930, 9.38888883, 0.37775426 }, { 90.87427883, 9.76242871, 0.38786017 }, { 91.79804648, 10.14537080, 0.39806711 }, { 92.71783792, 10.53776710, 0.40837204 }, { 93.63351763, 10.93966467, 0.41877185 }, { 94.54494910, 11.35110544, 0.42926338 }, { 95.45199494, 11.77212623, 0.43984338 }, { 96.35451709, 12.20275868, 0.45050855 }, { 97.25237693, 12.64302914, 0.46125554 }, { 98.14543551, 13.09295869, 0.47208094 }, { 99.03355369, 13.55256308, 0.48298128 }, { 99.91659234, 14.02185267, 0.49395303 }, { 100.79441247, 14.50083247, 0.50499263 }, { 101.66687551, 14.98950207, 0.51609647 }, { 102.53384339, 15.48785566, 0.52726088 }, { 103.39517882, 15.99588204, 0.53848217 }, { 104.25074540, 16.51356460, 0.54975658 }, { 105.10040787, 17.04088139, 0.56108035 }, { 105.94403229, 17.57780510, 0.57244967 }, { 106.78148620, 18.12430312, 0.58386068 }, { 107.61263885, 18.68033761, 0.59530952 }, { 108.43736136, 19.24586550, 0.60679230 }, { 109.25552694, 19.82083858, 0.61830507 }, { 110.06701103, 20.40520359, 0.62984392 }, { 110.87169155, 20.99890228, 0.64140487 }, { 111.66944902, 21.60187147, 0.65298395 }, { 112.46016677, 22.21404320, 0.66457717 }, { 113.24373112, 22.83534481, 0.67618053 }, { 114.02003154, 23.46569902, 0.68779004 }, { 114.78897458, 24.10500763, 0.69935605 }, { 115.55045808, 24.75318326, 0.71096785 }, { 116.30436392, 25.41015719, 0.72257965 }, { 117.05059046, 26.07584083, 0.73419146 }, { 117.78903708, 26.75014444, 0.74580326 }, { 118.51960421, 27.43297710, 0.75741506 }, { 119.24219335, 28.12424673, 0.76902687 }, { 119.95670706, 28.82386013, 0.78063867 }, { 120.66304902, 29.53172298, 0.79225047 }, { 121.36112398, 30.24773982, 0.80386227 }, { 122.05083781, 30.97181412, 0.81547408 }, { 122.73209753, 31.70384824, 0.82708588 }, { 123.40481128, 32.44374349, 0.83869768 }, { 124.06888835, 33.19140010, 0.85030949 }, { 124.72423920, 33.94671727, 0.86192129 }, { 125.37077548, 34.70959315, 0.87353309 }, { 126.00841000, 35.47992488, 0.88514490 }, { 126.63705680, 36.25760860, 0.89675670 }, { 127.25663111, 37.04253945, 0.90836850 }, { 127.86704939, 37.83461160, 0.91998030 }, { 128.46822934, 38.63371824, 0.93159211 }, { 129.06008990, 39.43975164, 0.94320391 }, { 129.64255127, 40.25260312, 0.95481571 }, { 130.21553491, 41.07216306, 0.96642752 }, { 130.77896357, 41.89832098, 0.97803932 }, { 131.33276128, 42.73096548, 0.98965112 }, { 131.87685337, 43.56998429, 1.00126293 }, { 132.41116647, 44.41526429, 1.01287473 }, { 132.93562855, 45.26669150, 1.02448653 }, { 133.45016889, 46.12415112, 1.03609833 }, { 133.95471811, 46.98752755, 1.04771014 }, { 134.44920818, 47.85670436, 1.05932194 }, { 134.93357244, 48.73156436, 1.07093374 }, { 135.40774557, 49.61198961, 1.08254555 }, { 135.87166363, 50.49786138, 1.09415735 }, { 136.32526408, 51.38906023, 1.10576915 }, { 136.76848576, 52.28546600, 1.11738096 }, { 137.20126891, 53.18695783, 1.12899276 }, { 137.62355517, 54.09341416, 1.14060456 }, { 138.03528760, 55.00471277, 1.15221636 }, { 138.43641070, 55.92073080, 1.16382817 }, { 138.82687037, 56.84134473, 1.17543997 }, { 139.20661397, 57.76643044, 1.18705177 }, { 139.57559030, 58.69586319, 1.19866358 }, { 139.93374960, 59.62951766, 1.21027538 }, { 140.28104359, 60.56726797, 1.22188718 }, { 140.61742544, 61.50898768, 1.23349899 }, { 140.94284980, 62.45454982, 1.24511079 }, { 141.25727278, 63.40382689, 1.25672259 }, { 141.56065199, 64.35669090, 1.26833439 }, { 141.85294653, 65.31301337, 1.27994620 }, { 142.13411699, 66.27266535, 1.29155800 }, { 142.40412545, 67.23551747, 1.30316980 }, { 142.66293551, 68.20143989, 1.31478161 }, { 142.91051228, 69.17030237, 1.32639341 }, { 143.14682236, 70.14197428, 1.33800521 }, { 143.37183391, 71.11632461, 1.34961702 }, { 143.58551658, 72.09322199, 1.36122882 }, { 143.78784155, 73.07253469, 1.37284062 }, { 143.97878156, 74.05413068, 1.38445242 }, { 144.15831085, 75.03787759, 1.39606423 }, { 144.32640521, 76.02364280, 1.40767603 }, { 144.48304200, 77.01129339, 1.41928783 }, { 144.62820007, 78.00069619, 1.43089964 }, { 144.76185987, 78.99171779, 1.44251144 }, { 144.88400337, 79.98422459, 1.45412324 }, { 144.99461409, 80.97808274, 1.46573505 }, { 145.09367714, 81.97315825, 1.47734685 }, { 145.18117914, 82.96931696, 1.48895865 }, { 145.25710831, 83.96642454, 1.50057045 }, { 145.32145441, 84.96434655, 1.51218226 }, { 145.37420875, 85.96294844, 1.52379406 }, { 145.41536422, 86.96209558, 1.53540586 }, { 145.44491529, 87.96165323, 1.54701767 }, { 145.46285795, 88.96148663, 1.55862947 }, { 145.46918980, 89.96146096, 1.57024127 }, { 145.46390998, 90.96144141, 1.58185308 }, { 145.44701920, 91.96129313, 1.59346488 }, { 145.41851973, 92.96088131, 1.60507668 }, { 145.37841543, 93.96007119, 1.61668848 }, { 145.32671170, 94.95872803, 1.62830029 }, { 145.26341550, 95.95671719, 1.63991209 }, { 145.18853538, 96.95390410, 1.65152389 }, { 145.10208143, 97.95015431, 1.66313570 }, { 145.00406531, 98.94533349, 1.67474750 }, { 144.89450023, 99.93930746, 1.68635930 }, { 144.77340097, 100.93194220, 1.69797111 }, { 144.64078385, 101.92310388, 1.70958291 }, { 144.49666676, 102.91265884, 1.72119471 }, { 144.34106912, 103.90047367, 1.73280651 }, { 144.17401192, 104.88641518, 1.74441832 }, { 143.99551768, 105.87035043, 1.75603012 }, { 143.80561047, 106.85214675, 1.76764192 }, { 143.60431589, 107.83167176, 1.77925373 }, { 143.39166108, 108.80879340, 1.79086553 }, { 143.16767473, 109.78337992, 1.80247733 }, { 142.93238702, 110.75529990, 1.81408914 }, { 142.68582968, 111.72442231, 1.82570094 }, { 142.42803596, 112.69061648, 1.83731274 }, { 142.15904062, 113.65375212, 1.84892454 }, { 141.87887992, 114.61369938, 1.86053635 }, { 141.58759164, 115.57032883, 1.87214815 }, { 141.28521505, 116.52351148, 1.88375995 }, { 140.97179093, 117.47311881, 1.89537176 }, { 140.64736153, 118.41902279, 1.90698356 }, { 140.31197060, 119.36109587, 1.91859536 }, { 139.96566336, 120.29921103, 1.93020717 }, { 139.60848651, 121.23324179, 1.94181897 }, { 139.24048819, 122.16306221, 1.95343077 }, { 138.86171804, 123.08854691, 1.96504257 }, { 138.47222711, 124.00957111, 1.97665438 }, { 138.07206794, 124.92601064, 1.98826618 }, { 137.66129446, 125.83774191, 1.99987798 }, { 137.23996207, 126.74464200, 2.01148979 }, { 136.80812758, 127.64658864, 2.02310159 }, { 136.36584921, 128.54346021, 2.03471339 }, { 135.91318659, 129.43513578, 2.04632520 }, { 135.45020077, 130.32149512, 2.05793700 }, { 134.97695415, 131.20241873, 2.06954880 }, { 134.49351056, 132.07778783, 2.08116060 }, { 133.99993518, 132.94748439, 2.09277241 }, { 133.49629455, 133.81139114, 2.10438421 }, { 132.98265659, 134.66939161, 2.11599601 }, { 132.45909054, 135.52137011, 2.12760782 }, { 131.92566701, 136.36721176, 2.13921962 }, { 131.38245791, 137.20680252, 2.15083142 }, { 130.82953649, 138.04002918, 2.16244323 }, { 130.26697731, 138.86677940, 2.17405503 }, { 129.69485620, 139.68694170, 2.18566683 }, { 129.11325031, 140.50040550, 2.19727863 }, { 128.52223806, 141.30706112, 2.20889044 }, { 127.92189914, 142.10679980, 2.22050224 }, { 127.31231450, 142.89951370, 2.23211404 }, { 126.69356632, 143.68509593, 2.24372585 }, { 126.06573803, 144.46344059, 2.25533765 }, { 125.42891429, 145.23444272, 2.26694945 }, { 124.78318095, 145.99799837, 2.27856126 }, { 124.12862509, 146.75400458, 2.29017306 }, { 123.46533496, 147.50235942, 2.30178486 }, { 122.79339999, 148.24296199, 2.31339666 }, { 122.11291079, 148.97571242, 2.32500847 }, { 121.42395909, 149.70051193, 2.33662027 }, { 120.72663781, 150.41726279, 2.34823207 }, { 120.02104095, 151.12586835, 2.35984388 }, { 119.30726366, 151.82623307, 2.37145568 }, { 118.58540217, 152.51826251, 2.38306748 }, { 117.85555382, 153.20186338, 2.39467929 }, { 117.11781701, 153.87694350, 2.40629109 }, { 116.37229122, 154.54341185, 2.41790289 }, { 115.61907696, 155.20117856, 2.42951469 }, { 114.85827579, 155.85015495, 2.44112650 }, { 114.09000464, 156.49027082, 2.45268717 }, { 113.31437109, 157.12144542, 2.46429706 }, { 112.53146370, 157.74357466, 2.47590119 }, { 111.74139271, 158.35658089, 2.48749555 }, { 110.94427153, 158.96039099, 2.49907617 }, { 110.14021655, 159.55493658, 2.51063903 }, { 109.32934701, 160.14015405, 2.52218017 }, { 108.51178476, 160.71598469, 2.53369562 }, { 107.68765414, 161.28237477, 2.54518145 }, { 106.85708175, 161.83927564, 2.55663372 }, { 106.02019628, 162.38664375, 2.56804854 }, { 105.17712832, 162.92444077, 2.57942202 }, { 104.32801018, 163.45263362, 2.59075034 }, { 103.47297568, 163.97119451, 2.60202966 }, { 102.61215997, 164.48010099, 2.61325621 }, { 101.74569933, 164.97933598, 2.62442625 }, { 100.87373101, 165.46888777, 2.63553606 }, { 99.99639298, 165.94875007, 2.64658200 }, { 99.11382382, 166.41892198, 2.65756042 }, { 98.22616245, 166.87940800, 2.66846777 }, { 97.33354800, 167.33021802, 2.67930052 }, { 96.43611963, 167.77136730, 2.69005519 }, { 95.53401632, 168.20287641, 2.70072837 }, { 94.62737670, 168.62477127, 2.71131670 }, { 93.71633891, 169.03708299, 2.72181686 }, { 92.80104040, 169.43984795, 2.73222563 }, { 91.88161778, 169.83310762, 2.74253981 }, { 90.95820664, 170.21690857, 2.75275630 }, { 90.03094144, 170.59130238, 2.76287204 }, { 89.09995533, 170.95634554, 2.77288407 }, { 88.16538001, 171.31209939, 2.78278947 }, { 87.22734561, 171.65863000, 2.79258541 }, { 86.28598053, 171.99600810, 2.80226914 }, { 85.34141136, 172.32430895, 2.81183798 }, { 84.39376272, 172.64361226, 2.82128933 }, { 83.44315716, 172.95400204, 2.83062066 }, { 82.48971508, 173.25556653, 2.83982956 }, { 81.53355461, 173.54839801, 2.84891365 }, { 80.57479152, 173.83259274, 2.85787069 }, { 79.61353913, 174.10825079, 2.86669848 }, { 78.64990828, 174.37547592, 2.87539496 }, { 77.68400718, 174.63437544, 2.88395811 }, { 76.71594143, 174.88506007, 2.89238603 }, { 75.74581391, 175.12764380, 2.90067692 }, { 74.77372475, 175.36224372, 2.90882905 }, { 73.79977129, 175.58897994, 2.91684081 }, { 72.82404804, 175.80797535, 2.92471067 }, { 71.84664668, 176.01935556, 2.93243720 }, { 70.86765597, 176.22324869, 2.94001909 }, { 69.88716182, 176.41978523, 2.94745509 }, { 68.90524722, 176.60909790, 2.95474409 }, { 67.92199226, 176.79132151, 2.96188507 }, { 66.93747415, 176.96659277, 2.96887709 }, { 65.95176719, 177.13505017, 2.97571934 }, { 64.96494283, 177.29683380, 2.98241110 }, { 63.97706965, 177.45208524, 2.98895177 }, { 62.98821340, 177.60094736, 2.99534083 }, { 61.99843707, 177.74356421, 3.00157788 }, { 61.00780085, 177.88008085, 3.00766263 }, { 60.01636223, 178.01064321, 3.01359487 }, { 59.02417602, 178.13539792, 3.01937453 }, { 58.03129440, 178.25449222, 3.02500162 }, { 57.03776698, 178.36807376, 3.03047627 }, { 56.04364084, 178.47629048, 3.03579870 }, { 55.04896060, 178.57929048, 3.04096925 }, { 54.05376848, 178.67722186, 3.04598836 }, { 53.05810437, 178.77023261, 3.05085656 }, { 52.06200587, 178.85847045, 3.05557452 }, { 51.06550838, 178.94208271, 3.06014297 }, { 50.06864516, 179.02121619, 3.06456278 }, { 49.07144744, 179.09601707, 3.06883490 }, { 48.07394441, 179.16663072, 3.07296040 }, { 47.07616337, 179.23320163, 3.07694042 }, { 46.07812978, 179.29587327, 3.08077624 }, { 45.07986733, 179.35478794, 3.08446922 }, { 44.08139801, 179.41008674, 3.08802080 }, { 43.08274219, 179.46190934, 3.09143256 }, { 42.08391871, 179.51039398, 3.09470615 }, { 41.08494493, 179.55567725, 3.09784331 }, { 40.08583683, 179.59789410, 3.10084589 }, { 39.08660907, 179.63717763, 3.10371582 }, { 38.08727505, 179.67365905, 3.10645514 }, { 37.08784701, 179.70746756, 3.10906596 }, { 36.08833606, 179.73873025, 3.11155048 }, { 35.08875231, 179.76757202, 3.11391101 }, { 34.08910485, 179.79411545, 3.11614992 }, { 33.08940192, 179.81848076, 3.11826968 }, { 32.08965087, 179.84078569, 3.12027283 }, { 31.08985830, 179.86114540, 3.12216201 }, { 30.09003007, 179.87967244, 3.12393990 }, { 29.09017139, 179.89647659, 3.12560931 }, { 28.09028684, 179.91166487, 3.12717308 }, { 27.09038046, 179.92534139, 3.12863415 }, { 26.09045576, 179.93760732, 3.12999552 }, { 25.09051582, 179.94856078, 3.13126026 }, { 24.09056327, 179.95829681, 3.13243150 }, { 23.09060039, 179.96690730, 3.13351244 }, { 22.09062912, 179.97448088, 3.13450636 }, { 21.09065108, 179.98110291, 3.13541657 }, { 20.09066765, 179.98685539, 3.13624646 }, { 19.09067998, 179.99181691, 3.13699947 }, { 18.09068901, 179.99606261, 3.13767907 }, { 17.09069552, 179.99966411, 3.13828883 }, { 16.09070010, 180.00268946, 3.13883232 }, { 15.09070327, 180.00520310, 3.13931317 }, { 14.09070541, 180.00726581, 3.13973508 }, { 13.09070681, 180.00893468, 3.14010176 }, { 12.09070769, 180.01026305, 3.14041696 }, { 11.09070823, 180.01130049, 3.14068448 }, { 10.09070855, 180.01209278, 3.14090815 }, { 9.09070872, 180.01268182, 3.14109182 }, { 8.09070881, 180.01310567, 3.14123937 }, { 7.09070886, 180.01339847, 3.14135471 }, { 6.09070888, 180.01359047, 3.14144178 }, { 5.09070888, 180.01370795, 3.14150452 }, { 4.09070889, 180.01377326, 3.14154691 }, { 3.09070889, 180.01380473, 3.14157292 }, { 2.09070889, 180.01381676, 3.14158654 }, { 1.09070889, 180.01381970, 3.14159179 }, { 0, 180, 3.14159265 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class MoveAction {
public:
	MoveAction(Buzzer *bz, Motor *mt, Encoders *enc, MPU6500 *mpu, Reflector *rfl, WallDetector *wd,
			SpeedController *sc) :
			bz(bz), mt(mt), enc(enc), mpu(mpu), rfl(rfl), wd(wd), sc(sc), thread(
			PRIORITY_MOVE_ACTION, STACK_SIZE_MOVE_ACTION) {
		set_params(600);
		ticker.attach_us(this, &MoveAction::isr, MOVE_ACTION_PERIOD);
	}
	enum ACTION {
		START_STEP, START_INIT, GO_STRAIGHT, TURN_LEFT_90, TURN_RIGHT_90, RETURN, STOP,
	};
	enum FAST_ACTION {
		FAST_GO_STRAIGHT,
		FAST_GO_HALF,
		FAST_GO_DIAGONAL,
		FAST_TURN_LEFT_45,
		FAST_TURN_RIGHT_45,
		FAST_TURN_LEFT_45R,
		FAST_TURN_RIGHT_45R,
		FAST_TURN_LEFT_45_45,
		FAST_TURN_RIGHT_45_45,
		FAST_TURN_LEFT_90,
		FAST_TURN_RIGHT_90,
		FAST_TURN_LEFT_135,
		FAST_TURN_RIGHT_135,
		FAST_TURN_LEFT_135R,
		FAST_TURN_RIGHT_135R,
		FAST_TURN_LEFT_180,
		FAST_TURN_RIGHT_180,
	};
	struct Operation {
		enum ACTION action;
		int num;
	};
	const char*
	action_string(enum ACTION action) {
		static const char name[][32] =
				{ "start_step", "start_init", "go_straight", "turn_left_90", "turn_right_90", "return", "stop", };
		return name[action];
	}
	void enable() {
		rfl->enable();
		sc->enable();
		if (path.size() > 0) {
			thread.start(this, &MoveAction::fastRun);
		} else {
			thread.start(this, &MoveAction::searchRun);
		}
	}
	void disable() {
		thread.terminate();
		sc->disable();
		rfl->disable();
		while (q.size()) {
			q.pop();
		}
		path.clear();
	}
	void set_action(FAST_ACTION action) {
		path.push_back(action);
	}
	void set_action(std::vector<FAST_ACTION> actions) {
		path = actions;
	}
	void set_action(enum ACTION action, int num = 1) {
		struct Operation operation;
		operation.action = action;
		operation.num = num;
		q.push(operation);
	}
	void set_params(float fast_speed) {
		this->fast_speed = fast_speed;
	}
	void set_params_relative(float add) {
		this->fast_speed += add;
	}
	int actions() const {
		return q.size();
	}
	void printPosition(const char* name) {
		printf("%s\t", name);
//		printf("Ori:(%06.1f, %06.1f, %06.3f)\t", origin.x, origin.y, origin.theta);
//		printf("Abs:(%06.1f, %06.1f, %06.3f)\t", sc->getPosition().x, sc->getPosition().y,
//				sc->getPosition().theta);
		printf("Rel:(%06.1f, %06.1f, %06.3f)\t", getRelativePosition().x, getRelativePosition().y,
				getRelativePosition().theta);
		printf("\n");
	}
	Position getRelativePosition() {
		return (sc->getPosition() - origin).rotate(-origin.theta);
	}
	void updateOrigin(Position passed) {
		origin += passed.rotate(origin.theta);
	}
	void setPosition(Position pos = Position(90, 6 + 24, M_PI / 2)) {
		origin = pos;
		sc->getPosition() = pos;
	}
	void fixPosition(Position pos) {
		sc->getPosition() -= pos;
	}
private:
	Buzzer *bz;
	Motor *mt;
	Encoders *enc;
	MPU6500 *mpu;
	Reflector *rfl;
	WallDetector *wd;
	SpeedController *sc;
	Thread thread;
	Ticker ticker;
	Timer timer;
	float fast_speed;
	Position origin;
	std::queue<struct Operation> q;
	std::vector<FAST_ACTION> path;

	void isr() {
		thread.signal_set(0x01);
	}
	void wall_avoid() {
#if WALL_AVOID_ENABLED
		void wall_attach()
		{
			if (wd->wall().side[0])
			{
				sc->position.y -= wd->wall_difference().side[0] * 0.00001 * sc->actual().trans;
			}
			if (wd->wall().side[1])
			{
				sc->position.y += wd->wall_difference().side[1] * 0.00001 * sc->actual().trans;
			}
		}
#endif
	}
	void wall_attach() {
#if WALL_ATTACH_ENABLED
		if (wd->wall().flont[0] && wd->wall().flont[1])
		{
			while (1)
			{
				float trans = wd->wall_difference().flont[0] + wd->wall_difference().flont[1];
				float rot = wd->wall_difference().flont[1] - wd->wall_difference().flont[0];
				sc->set_target(trans * 100, rot * 10);
				if (fabs(trans) < 0.1f && fabs(rot) < 0.1f) break;
				Thread::wait(1);
			}
			sc->set_target(0, 0);
			fixPosition(Position(getRelativePosition().x, 0, 0).rotate(origin.theta));
		}
#endif
	}
	void turn(float target_angle, float speed) {
		const float accel = 64 * M_PI;
		timer.reset();
		timer.start();
		while (1) {
			Thread::signal_wait(0x01);
			if (fabs(sc->actual.rot) > speed)
				break;
			if (target_angle > 0) {
				sc->set_target(0, timer.read() * accel);
			} else {
				sc->set_target(0, -timer.read() * accel);
			}
		}
		while (1) {
			Thread::signal_wait(0x01);
			if (fabs(sc->actual.rot) < 0.2)
				break;
			float extra = target_angle - getRelativePosition().theta;
			float target_speed = sqrt(2 * accel * fabs(extra));
			target_speed = (target_speed > speed) ? speed : target_speed;
			if (extra > 0) {
				sc->set_target(0, target_speed);
			} else {
				sc->set_target(0, -target_speed);
			}
		}
		updateOrigin(Position(0, 0, target_angle));
	}
	void straight_x(const float distance, const float v_max, const float v_end) {
		const float accel = 6000;
		const float decel = 3000;
		Trajectory st;
		timer.reset();
		timer.start();
		float v_start = sc->actual.trans;
		bool isAccel = true;
		while (1) {
			if (getRelativePosition().x > distance - 10.0f)
				break;
			if (v_end < 1.0f && sc->actual.trans < 1.0f)
				break;
			Thread::signal_wait(0x01);
			float extra = distance - getRelativePosition().x;
			float velocity = sqrt(2 * decel * fabs(extra) + v_end * v_end);
			if (extra < 0)
				velocity = -velocity;
			if (velocity < sc->actual.trans)
				isAccel = false;
			if (isAccel)
				velocity = v_start + timer.read() * accel;
			if (velocity > v_max)
				velocity = v_max;
			Position dir = st.getNextDir(getRelativePosition(), velocity);
			sc->set_target(velocity, dir.theta * TRAJECTORY_PROP_GAIN);
			wall_avoid();
		}
		sc->set_target(v_end, 0);
//		printPosition("Straight");
		updateOrigin(Position(distance, 0, 0));
	}
	template<class C>
	void trace(C tr, const float velocity) {
		int cnt = 0;
		float integral = 0;
		while (1) {
			if (tr.getRemain() < 5.0f)
				break;
			Thread::signal_wait(0x01);
			Position dir = tr.getNextDir(getRelativePosition(), velocity);
			integral += dir.theta * TRAJECTORY_INT_GAIN * MOVE_ACTION_PERIOD / 1000000;
			sc->set_target(velocity, (dir.theta + integral) * TRAJECTORY_PROP_GAIN);
			if (cnt++ % 20 == 0) {
//				printf("%.1f\t%.3f\n", dir.x, dir.theta);
			}
		}
		sc->set_target(velocity, 0);
		updateOrigin(tr.getEndPosition());
	}
	void searchRun() {
		const float velocity = 600;
		const float omega = 4 * M_PI;
		while (1) {
			float integral = 0;
			while (q.empty()) {
				Thread::signal_wait(0x01);
				Position cur = getRelativePosition();
				int look_ahead = 30;
				Position dir = (Position(cur.x + look_ahead) - cur).rotate(-cur.theta);
				dir.theta = atan2f(dir.y, dir.x);
				dir *= velocity / look_ahead;
				integral += dir.theta * TRAJECTORY_INT_GAIN * MOVE_ACTION_PERIOD / 1000000;
				sc->set_target(dir.x, (dir.theta + integral) * TRAJECTORY_PROP_GAIN);
			}
			struct Operation operation = q.front();
			enum ACTION action = operation.action;
			int num = operation.num;
			printf("%s: %d\n", action_string(action), num);
			printPosition("Start");
			switch (action) {
			case START_STEP:
				setPosition();
				straight_x(180 - 24 - 6, velocity, velocity);
				break;
			case START_INIT:
				straight_x(90, velocity, 0);
				wall_attach();
				turn(M_PI / 2, omega);
				wall_attach();
				turn(M_PI / 2, omega);
				for (int i = 0; i < 100; i++) {
					sc->set_target(-i, 0);
					Thread::wait(1);
				}
				Thread::wait(200);
				sc->disable();
				mt->drive(-60, -60);
				Thread::wait(400);
				mt->drive(0, 0);
				disable();
				break;
			case GO_STRAIGHT:
				straight_x(180 * num, velocity, velocity);
				break;
			case TURN_LEFT_90:
				for (int i = 0; i < num; i++) {
					Curve90 tr(false);
					trace(tr, velocity);
				}
				break;
			case TURN_RIGHT_90:
				for (int i = 0; i < num; i++) {
					Curve90 tr(true);
					trace(tr, velocity);
				}
				break;
			case RETURN:
				straight_x(90, velocity, 0);
				if (mpu->angle.z > 0) {
					wall_attach();
					turn(-M_PI / 2, omega);
					wall_attach();
					turn(-M_PI / 2, omega);
				} else {
					wall_attach();
					turn(M_PI / 2, omega);
					wall_attach();
					turn(M_PI / 2, omega);
				}
				straight_x(90, velocity, velocity);
				break;
			case STOP:
				straight_x(90, velocity, 0);
				wall_attach();
				disable();
				break;
			}
			q.pop();
			printPosition("End");
		}
	}
	void fastRun() {
		const float velocity = 600;
		const float v_max = 1800;
		const float curve_gain = 0.6f;
		setPosition();
		straight_x(180 - 24 - 6, velocity, velocity);
		printPosition("S");
		int path_index = 0;
		float straight = 0.0f;
		while (1) {
			if (path_index > (int) path.size() - 1)
				break;
			switch (path[path_index]) {
			case FAST_TURN_LEFT_45: {
				C45 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
				straight += 26.361385736829078;
			}
				break;
			case FAST_TURN_RIGHT_45: {
				C45 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
				straight += 26.361385736829078;
			}
				break;
			case FAST_TURN_LEFT_45R: {
				straight += 26.361385736829078;
				C45 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_RIGHT_45R: {
				straight += 26.361385736829078;
				C45 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_LEFT_45_45: {
				C4545 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_RIGHT_45_45: {
				C4545 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_LEFT_90: {
				C90 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_RIGHT_90: {
				C90 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_LEFT_135: {
				C135 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
				straight += 74.560731431502333;
			}
				break;
			case FAST_TURN_RIGHT_135: {
				C135 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
				straight += 74.560731431502333;
			}
				break;
			case FAST_TURN_LEFT_135R: {
				straight += 74.560731431502333;
				C135 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_RIGHT_135R: {
				straight += 74.560731431502333;
				C135 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_LEFT_180: {
				C180 tr(false);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_TURN_RIGHT_180: {
				C180 tr(true);
				if (straight > 1.0f) {
					straight_x(straight, v_max, tr.velocity * curve_gain);
					straight = 0;
				}
				trace(tr, tr.velocity * curve_gain);
			}
				break;
			case FAST_GO_STRAIGHT:
				straight += 180;
				break;
			case FAST_GO_HALF:
				straight += 90;
				break;
			case FAST_GO_DIAGONAL:
				straight += 63.639610306789280;
				break;
			}
			path_index++;
		}

		printPosition("E");
		straight += 90;
		if (straight > 1.0f) {
			straight_x(straight, v_max, velocity);
			straight = 0;
		}
		wall_attach();
		sc->set_target(0, 0);
		Thread::wait(100);
		disable();
	}
};

#endif /* MOVEACTION_H_ */
