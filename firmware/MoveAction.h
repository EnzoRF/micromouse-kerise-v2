/*
 * MoveAction.h
 *
 *  Created on: 2016/11/11
 *      Author: kerikun11
 */

#ifndef MOVEACTION_H_
#define MOVEACTION_H_

#include "mbed.h"
#include "config.h"
#include <vector>
#include <queue>

#define MOVE_ACTION_PERIOD			1000
#define WALL_ATTACH_ENABLED			false
#define WALL_AVOID_ENABLED			false

//#define LOOK_AHEAD_UNIT				10
//#define DETERMINE_VELOCITY_UNIT		10
#define TRAJECTORY_PROP_GAIN		20
#define TRAJECTORY_INT_GAIN			10

class Trajectory {
public:
	Trajectory(bool accel = false) :
			accel(accel) {
		reset();
	}
	virtual ~Trajectory() {
	}
	void reset() {
		last_index = 0;
	}
	Position getNextDir(const Position &cur, float velocity) {
		int index_cur = getNextIndex(cur);
		if (accel) {
//			float t1 = getPosition(index_cur + 0).theta;
//			float t2 = getPosition(index_cur + 20).theta;
//			float t3 = getPosition(index_cur + 40).theta;
//			float t4 = getPosition(index_cur + 60).theta;
//			float theta = fabs(t1 - t2) * 3 + fabs(t2 - t3) * 2 + fabs(t3 - t4);
//			velocity *= 1 / (1 + theta / 6);
		}
		int look_ahead = 30;
		Position dir = (getPosition(index_cur + look_ahead) - cur).rotate(-cur.theta);
		dir.theta = atan2f(dir.y, dir.x);
		dir *= velocity / look_ahead;
		return dir;
	}
	float getRemain() const {
		return (getSize() - last_index) * interval;
	}
	Position getEndPosition() {
		return getPosition(getSize());
	}
protected:
	int last_index;
	const float interval = 1.0f;
	bool accel;
	virtual int size() const {
		return 180;
	}
	virtual Position position(int index) const {
		return Position(index * interval, 0, 0);
	}
	virtual void cache(int index) {
	}
	int getSize() const {
		return size();
	}
	Position getPosition(const int index) {
		return position(index);
	}
	int getNextIndex(const Position& pos) {
		for (int i = last_index;; i++) {
			Position target = getPosition(i);
			Position dir = (target - pos).rotate(-target.theta);
			if (dir.x > 0) {
				last_index = i;
				cache(last_index);
				return last_index;
			}
		}
		return last_index;
	}
};

class FastTrajectory: public Trajectory {
public:
	enum FAST_ACTION {
		FAST_GO_STRAIGHT,
		FAST_GO_HALF,
		FAST_GO_DIAGONAL,
		FAST_TURN_LEFT_45,
		FAST_TURN_RIGHT_45,
		FAST_TURN_LEFT_45R,
		FAST_TURN_RIGHT_45R,
		FAST_TURN_LEFT_45_45,
		FAST_TURN_RIGHT_45_45,
		FAST_TURN_LEFT_45_S_45,
		FAST_TURN_RIGHT_45_S_45,
		FAST_TURN_LEFT_90,
		FAST_TURN_RIGHT_90,
		FAST_TURN_LEFT_135,
		FAST_TURN_RIGHT_135,
		FAST_TURN_LEFT_135R,
		FAST_TURN_RIGHT_135R,
		FAST_TURN_LEFT_180,
		FAST_TURN_RIGHT_180,
	};
	FastTrajectory(std::vector<enum FAST_ACTION> actions) :
			Trajectory(true), actions(actions) {
		point_index = 0;
		action_index = 0;
		cached_action_index = 0;
		cached_index = 0;
		sum = 0;
		for (int i = 0; i < (int) actions.size(); i++) {
			sum += point_size(actions[i]);
		}

//		for (int i = 0; i < (int) actions.size(); i++)
//			printf("%d, ", actions[i]);
//		printf("size:%d\n", size());
//		for (int i = 0; i < size() + 360; i++) {
//			Thread::wait(10);
//			printf("%f,%f,%f\n", position(i).x, position(i).y, position(i).theta);
//			cache(i);
//		}
	}
private:
	int point_index;
	int action_index;
	int cached_index;
	int cached_action_index;
	int sum;
	Position cached_position;
	std::vector<enum FAST_ACTION> actions;
	virtual int size() const {
		return sum;
	}
	virtual Position position(int index) const {
		Position ret = cached_position;
		index -= cached_index;
		for (int i = cached_action_index; i < (int) actions.size(); i++) {
			FAST_ACTION act = actions[i];
			if (index < point_size(act)) {
				ret += point(actions[i], index).rotate(ret.theta);
				return ret;
			}
			index -= point_size(act);
			ret += point(act, point_size(act)).rotate(ret.theta);
		}
		ret += point(FAST_GO_STRAIGHT, index).rotate(ret.theta);
		return ret;
	}
	virtual void cache(int index) {
		if (cached_action_index < (int) actions.size()) {
			FAST_ACTION act = actions[cached_action_index];
			if (index > cached_index + point_size(act)) {
				cached_position += point(act, point_size(act)).rotate(cached_position.theta);
				cached_index += point_size(act);
				cached_action_index++;
				printf("#: %d\n", cached_action_index);
			}
		}
	}
	int point_size(const enum FAST_ACTION action) const {
		switch (action) {
		case FAST_GO_STRAIGHT:
			return 180;
		case FAST_GO_HALF:
			return 90;
		case FAST_GO_DIAGONAL:
			return 90.0f * 1.41421356f / 2;
		case FAST_TURN_LEFT_45:
		case FAST_TURN_RIGHT_45:
		case FAST_TURN_LEFT_45R:
		case FAST_TURN_RIGHT_45R:
			return 211;
		case FAST_TURN_LEFT_45_45:
		case FAST_TURN_RIGHT_45_45:
			return 214;
		case FAST_TURN_LEFT_45_S_45:
		case FAST_TURN_RIGHT_45_S_45:
			return 428;
		case FAST_TURN_LEFT_90:
		case FAST_TURN_RIGHT_90:
			return 151;
		case FAST_TURN_LEFT_135:
		case FAST_TURN_RIGHT_135:
		case FAST_TURN_LEFT_135R:
		case FAST_TURN_RIGHT_135R:
			return 278;
		case FAST_TURN_LEFT_180:
		case FAST_TURN_RIGHT_180:
			return 459;
		default:
			return 180;
		}
	}
	Position point(const enum FAST_ACTION action, const int index) const {
		static const float data_45[211 + 1][3] = {
				{ 0, 0, 0 },
				{ 1.0053, 1.0686e-10, 1.0686e-08 },
				{ 2.0053, 1.8899e-05, 5.5045e-05 },
				{ 3.0053, 0.0001468, 0.00021694 },
				{ 4.0053, 0.00049056, 0.0004857 },
				{ 5.0053, 0.001157, 0.00086132 },
				{ 6.0053, 0.0022531, 0.0013438 },
				{ 7.0053, 0.0038856, 0.0019331 },
				{ 8.0053, 0.0061615, 0.0026294 },
				{ 9.0053, 0.0091875, 0.0034324 },
				{ 10.005, 0.01307, 0.0043424 },
				{ 11.005, 0.017917, 0.0053592 },
				{ 12.005, 0.023835, 0.0064828 },
				{ 13.005, 0.03093, 0.0077133 },
				{ 14.005, 0.03931, 0.0090507 },
				{ 15.005, 0.049081, 0.010495 },
				{ 16.005, 0.06035, 0.012046 },
				{ 17.005, 0.073224, 0.013704 },
				{ 18.005, 0.08781, 0.015469 },
				{ 19.005, 0.10421, 0.017341 },
				{ 20.005, 0.12254, 0.019319 },
				{ 21.004, 0.14291, 0.021405 },
				{ 22.004, 0.16541, 0.023597 },
				{ 23.004, 0.19015, 0.025896 },
				{ 24.003, 0.21725, 0.028302 },
				{ 25.003, 0.24681, 0.030815 },
				{ 26.002, 0.27893, 0.033435 },
				{ 27.002, 0.31373, 0.036161 },
				{ 28.001, 0.3513, 0.038995 },
				{ 29, 0.39176, 0.041935 },
				{ 29.999, 0.43521, 0.044982 },
				{ 30.998, 0.48176, 0.048136 },
				{ 31.997, 0.53152, 0.051397 },
				{ 32.996, 0.58458, 0.054765 },
				{ 33.994, 0.64106, 0.058239 },
				{ 34.992, 0.70106, 0.061821 },
				{ 35.99, 0.76469, 0.065509 },
				{ 36.988, 0.83206, 0.069304 },
				{ 37.985, 0.90327, 0.073207 },
				{ 38.983, 0.97842, 0.077215 },
				{ 39.979, 1.0576, 0.081331 },
				{ 40.976, 1.141, 0.085554 },
				{ 41.972, 1.2286, 0.089883 },
				{ 42.968, 1.3206, 0.09432 },
				{ 43.963, 1.417, 0.098863 },
				{ 44.958, 1.5181, 0.10351 },
				{ 45.953, 1.6238, 0.10827 },
				{ 46.946, 1.7343, 0.11313 },
				{ 47.94, 1.8496, 0.1181 },
				{ 48.932, 1.97, 0.12318 },
				{ 49.925, 2.0955, 0.12837 },
				{ 50.916, 2.2261, 0.13366 },
				{ 51.907, 2.3621, 0.13906 },
				{ 52.897, 2.5034, 0.14456 },
				{ 53.886, 2.6503, 0.15017 },
				{ 54.874, 2.8027, 0.15589 },
				{ 55.862, 2.9609, 0.16172 },
				{ 56.848, 3.1249, 0.16765 },
				{ 57.833, 3.2947, 0.17369 },
				{ 58.818, 3.4706, 0.17984 },
				{ 59.801, 3.6525, 0.18609 },
				{ 60.783, 3.8407, 0.19245 },
				{ 61.764, 4.0352, 0.19891 },
				{ 62.744, 4.236, 0.20549 },
				{ 63.722, 4.4434, 0.21217 },
				{ 64.699, 4.6573, 0.21896 },
				{ 65.674, 4.8779, 0.22585 },
				{ 66.648, 5.1052, 0.23285 },
				{ 67.62, 5.3395, 0.23996 },
				{ 68.591, 5.5807, 0.24717 },
				{ 69.559, 5.8289, 0.2545 },
				{ 70.526, 6.0843, 0.26192 },
				{ 71.491, 6.3469, 0.26946 },
				{ 72.454, 6.6168, 0.2771 },
				{ 73.415, 6.8941, 0.28485 },
				{ 74.373, 7.1789, 0.29271 },
				{ 75.33, 7.4713, 0.30067 },
				{ 76.284, 7.7714, 0.30874 },
				{ 77.235, 8.0792, 0.31692 },
				{ 78.184, 8.3948, 0.3252 },
				{ 79.13, 8.7183, 0.33359 },
				{ 80.074, 9.0497, 0.34209 },
				{ 81.014, 9.3893, 0.35069 },
				{ 81.952, 9.7369, 0.3594 },
				{ 82.886, 10.093, 0.36822 },
				{ 83.818, 10.457, 0.37714 },
				{ 84.746, 10.829, 0.38618 },
				{ 85.67, 11.21, 0.39531 },
				{ 86.592, 11.6, 0.40438 },
				{ 87.509, 11.997, 0.41335 },
				{ 88.423, 12.403, 0.42222 },
				{ 89.333, 12.817, 0.43097 },
				{ 90.24, 13.239, 0.43962 },
				{ 91.143, 13.668, 0.44817 },
				{ 92.043, 14.105, 0.4566 },
				{ 92.938, 14.55, 0.46493 },
				{ 93.83, 15.002, 0.47316 },
				{ 94.718, 15.461, 0.48127 },
				{ 95.603, 15.928, 0.48928 },
				{ 96.484, 16.401, 0.49718 },
				{ 97.361, 16.882, 0.50498 },
				{ 98.234, 17.369, 0.51267 },
				{ 99.104, 17.863, 0.52025 },
				{ 99.969, 18.363, 0.52772 },
				{ 100.83, 18.87, 0.53509 },
				{ 101.69, 19.383, 0.54235 },
				{ 102.54, 19.902, 0.5495 },
				{ 103.4, 20.428, 0.55655 },
				{ 104.24, 20.959, 0.56349 },
				{ 105.09, 21.496, 0.57032 },
				{ 105.93, 22.039, 0.57705 },
				{ 106.76, 22.587, 0.58367 },
				{ 107.59, 23.141, 0.59018 },
				{ 108.42, 23.7, 0.59659 },
				{ 109.25, 24.265, 0.60289 },
				{ 110.07, 24.834, 0.60908 },
				{ 110.89, 25.409, 0.61516 },
				{ 111.7, 25.988, 0.62114 },
				{ 112.52, 26.573, 0.62701 },
				{ 113.32, 27.162, 0.63278 },
				{ 114.13, 27.756, 0.63844 },
				{ 114.93, 28.354, 0.64399 },
				{ 115.73, 28.956, 0.64943 },
				{ 116.52, 29.563, 0.65477 },
				{ 117.31, 30.174, 0.66 },
				{ 118.1, 30.789, 0.66512 },
				{ 118.89, 31.409, 0.67014 },
				{ 119.67, 32.032, 0.67505 },
				{ 120.45, 32.658, 0.67985 },
				{ 121.23, 33.289, 0.68455 },
				{ 122, 33.923, 0.68914 },
				{ 122.77, 34.561, 0.69362 },
				{ 123.54, 35.202, 0.698 },
				{ 124.3, 35.846, 0.70226 },
				{ 125.06, 36.494, 0.70643 },
				{ 125.82, 37.144, 0.71048 },
				{ 126.58, 37.798, 0.71443 },
				{ 127.33, 38.455, 0.71827 },
				{ 128.09, 39.114, 0.722 },
				{ 128.83, 39.777, 0.72563 },
				{ 129.58, 40.441, 0.72915 },
				{ 130.33, 41.109, 0.73257 },
				{ 131.07, 41.779, 0.73587 },
				{ 131.81, 42.451, 0.73907 },
				{ 132.55, 43.126, 0.74217 },
				{ 133.28, 43.803, 0.74515 },
				{ 134.02, 44.482, 0.74803 },
				{ 134.75, 45.164, 0.7508 },
				{ 135.48, 45.847, 0.75347 },
				{ 136.21, 46.532, 0.75603 },
				{ 136.93, 47.219, 0.75848 },
				{ 137.66, 47.908, 0.76083 },
				{ 138.38, 48.598, 0.76306 },
				{ 139.1, 49.29, 0.7652 },
				{ 139.83, 49.983, 0.76722 },
				{ 140.54, 50.678, 0.76914 },
				{ 141.26, 51.374, 0.77095 },
				{ 141.98, 52.072, 0.77265 },
				{ 142.69, 52.77, 0.77425 },
				{ 143.41, 53.47, 0.77574 },
				{ 144.12, 54.171, 0.77712 },
				{ 144.83, 54.872, 0.7784 },
				{ 145.55, 55.575, 0.77957 },
				{ 146.26, 56.278, 0.78063 },
				{ 146.97, 56.983, 0.78159 },
				{ 147.68, 57.687, 0.78244 },
				{ 148.39, 58.393, 0.78318 },
				{ 149.09, 59.098, 0.78381 },
				{ 149.8, 59.804, 0.78434 },
				{ 150.51, 60.511, 0.78476 },
				{ 151.22, 61.218, 0.78508 },
				{ 151.92, 61.925, 0.78529 },
				{ 152.63, 62.632, 0.78539 },
				{ 153.33, 63.332, 0.7854 },
				{ 154.04, 64.039, 0.7854 },
				{ 154.75, 64.746, 0.7854 },
				{ 155.45, 65.453, 0.7854 },
				{ 156.16, 66.16, 0.7854 },
				{ 156.87, 66.867, 0.7854 },
				{ 157.57, 67.574, 0.7854 },
				{ 158.28, 68.282, 0.7854 },
				{ 158.99, 68.989, 0.7854 },
				{ 159.7, 69.696, 0.7854 },
				{ 160.4, 70.403, 0.7854 },
				{ 161.11, 71.11, 0.7854 },
				{ 161.82, 71.817, 0.7854 },
				{ 162.52, 72.524, 0.7854 },
				{ 163.23, 73.231, 0.7854 },
				{ 163.94, 73.938, 0.7854 },
				{ 164.65, 74.646, 0.7854 },
				{ 165.35, 75.353, 0.7854 },
				{ 166.06, 76.06, 0.7854 },
				{ 166.77, 76.767, 0.7854 },
				{ 167.47, 77.474, 0.7854 },
				{ 168.18, 78.181, 0.7854 },
				{ 168.89, 78.888, 0.7854 },
				{ 169.6, 79.595, 0.7854 },
				{ 170.3, 80.302, 0.7854 },
				{ 171.01, 81.009, 0.7854 },
				{ 171.72, 81.717, 0.7854 },
				{ 172.42, 82.424, 0.7854 },
				{ 173.13, 83.131, 0.7854 },
				{ 173.84, 83.838, 0.7854 },
				{ 174.55, 84.545, 0.7854 },
				{ 175.25, 85.252, 0.7854 },
				{ 175.96, 85.959, 0.7854 },
				{ 176.67, 86.666, 0.7854 },
				{ 177.37, 87.373, 0.7854 },
				{ 178.08, 88.081, 0.7854 },
				{ 178.79, 88.788, 0.7854 },
				{ 179.49, 89.495, 0.7854 },
				{ 180.00, 90.000, 0.7854 }, };
		static const float data_45_r[211 + 1][3] = {
				{ 0, 0, 0 },
				{ 1, 0, 0 },
				{ 2, 0, 0 },
				{ 3, 0, 0 },
				{ 4, 0, 0 },
				{ 5, 0, 0 },
				{ 6, 0, 0 },
				{ 7, 0, 0 },
				{ 8, 0, 0 },
				{ 9, 0, 0 },
				{ 10, 0, 0 },
				{ 11, 0, 0 },
				{ 12, 0, 0 },
				{ 13, 0, 0 },
				{ 14, 0, 0 },
				{ 15, 0, 0 },
				{ 16, 0, 0 },
				{ 17, 0, 0 },
				{ 18, 0, 0 },
				{ 19, 0, 0 },
				{ 20, 0, 0 },
				{ 21, 0, 0 },
				{ 22, 0, 0 },
				{ 23, 0, 0 },
				{ 24, 0, 0 },
				{ 25, 0, 0 },
				{ 26, 0, 0 },
				{ 27, 0, 0 },
				{ 28, 0, 0 },
				{ 29, 0, 0 },
				{ 30, 0, 0 },
				{ 31, 0, 0 },
				{ 32, 0, 0 },
				{ 33, 0, 0 },
				{ 34, 0, 0 },
				{ 35, 0, 0 },
				{ 36, 0, 0 },
				{ 37, 0, 0 },
				{ 38, 0, 0 },
				{ 39.005, 7.2159e-06, 2.8863e-05 },
				{ 40.005, 9.3822e-05, 0.00016084 },
				{ 41.005, 0.00036637, 0.00039968 },
				{ 42.005, 0.00093172, 0.00074537 },
				{ 43.005, 0.0018967, 0.0011979 },
				{ 44.005, 0.0033683, 0.0017574 },
				{ 45.005, 0.0054532, 0.0024236 },
				{ 46.005, 0.0082584, 0.0031968 },
				{ 47.004, 0.011891, 0.0040768 },
				{ 48.004, 0.016457, 0.0050637 },
				{ 49.004, 0.022064, 0.0061574 },
				{ 50.004, 0.028819, 0.007358 },
				{ 51.004, 0.036828, 0.0086655 },
				{ 52.004, 0.046199, 0.01008 },
				{ 53.004, 0.057038, 0.011601 },
				{ 54.004, 0.069451, 0.013229 },
				{ 55.004, 0.083547, 0.014964 },
				{ 56.004, 0.099432, 0.016806 },
				{ 57.004, 0.11721, 0.018754 },
				{ 58.004, 0.13699, 0.02081 },
				{ 59.003, 0.15888, 0.022972 },
				{ 60.003, 0.18299, 0.025241 },
				{ 61.003, 0.20942, 0.027617 },
				{ 62.002, 0.23828, 0.0301 },
				{ 63.002, 0.26967, 0.03269 },
				{ 64.001, 0.30371, 0.035387 },
				{ 65.001, 0.3405, 0.03819 },
				{ 66, 0.38014, 0.041101 },
				{ 66.999, 0.42274, 0.044118 },
				{ 67.998, 0.46841, 0.047242 },
				{ 68.997, 0.51726, 0.050473 },
				{ 69.995, 0.56938, 0.053811 },
				{ 70.994, 0.6249, 0.057256 },
				{ 71.992, 0.6839, 0.060807 },
				{ 72.99, 0.74651, 0.064466 },
				{ 73.988, 0.81282, 0.068231 },
				{ 74.985, 0.88294, 0.072103 },
				{ 75.983, 0.95697, 0.076082 },
				{ 76.98, 1.035, 0.080168 },
				{ 77.976, 1.1172, 0.084361 },
				{ 78.972, 1.2036, 0.08866 },
				{ 79.968, 1.2944, 0.093067 },
				{ 80.964, 1.3896, 0.09758 },
				{ 81.959, 1.4893, 0.1022 },
				{ 82.953, 1.5937, 0.10693 },
				{ 83.947, 1.7028, 0.11176 },
				{ 84.941, 1.8168, 0.1167 },
				{ 85.934, 1.9358, 0.12175 },
				{ 86.926, 2.0598, 0.1269 },
				{ 87.918, 2.189, 0.13217 },
				{ 88.909, 2.3235, 0.13753 },
				{ 89.899, 2.4633, 0.14301 },
				{ 90.888, 2.6086, 0.14859 },
				{ 91.877, 2.7595, 0.15428 },
				{ 92.864, 2.916, 0.16008 },
				{ 93.851, 3.0784, 0.16598 },
				{ 94.837, 3.2466, 0.17199 },
				{ 95.822, 3.4207, 0.1781 },
				{ 96.805, 3.601, 0.18433 },
				{ 97.788, 3.7874, 0.19066 },
				{ 98.769, 3.9801, 0.19709 },
				{ 99.749, 4.1791, 0.20364 },
				{ 100.73, 4.3846, 0.21029 },
				{ 101.7, 4.5967, 0.21705 },
				{ 102.68, 4.8154, 0.22391 },
				{ 103.65, 5.0409, 0.23088 },
				{ 104.63, 5.2732, 0.23796 },
				{ 105.6, 5.5124, 0.24514 },
				{ 106.57, 5.7587, 0.25244 },
				{ 107.54, 6.0121, 0.25983 },
				{ 108.5, 6.2726, 0.26734 },
				{ 109.46, 6.5405, 0.27495 },
				{ 110.43, 6.8157, 0.28267 },
				{ 111.38, 7.0984, 0.2905 },
				{ 112.34, 7.3887, 0.29843 },
				{ 113.3, 7.6866, 0.30647 },
				{ 114.25, 7.9922, 0.31462 },
				{ 115.2, 8.3056, 0.32287 },
				{ 116.14, 8.6269, 0.33123 },
				{ 117.09, 8.9561, 0.3397 },
				{ 118.03, 9.2934, 0.34827 },
				{ 118.97, 9.6388, 0.35695 },
				{ 119.9, 9.9923, 0.36574 },
				{ 120.84, 10.354, 0.37463 },
				{ 121.77, 10.724, 0.38364 },
				{ 122.69, 11.103, 0.39274 },
				{ 123.61, 11.49, 0.40185 },
				{ 124.53, 11.885, 0.41085 },
				{ 125.45, 12.289, 0.41975 },
				{ 126.36, 12.7, 0.42853 },
				{ 127.27, 13.12, 0.43721 },
				{ 128.17, 13.547, 0.44579 },
				{ 129.07, 13.982, 0.45425 },
				{ 129.97, 14.425, 0.46261 },
				{ 130.86, 14.875, 0.47086 },
				{ 131.75, 15.332, 0.47901 },
				{ 132.63, 15.797, 0.48705 },
				{ 133.52, 16.268, 0.49498 },
				{ 134.39, 16.747, 0.5028 },
				{ 135.27, 17.232, 0.51052 },
				{ 136.14, 17.724, 0.51813 },
				{ 137.01, 18.222, 0.52564 },
				{ 137.87, 18.727, 0.53304 },
				{ 138.73, 19.239, 0.54033 },
				{ 139.58, 19.756, 0.54751 },
				{ 140.44, 20.28, 0.55459 },
				{ 141.28, 20.81, 0.56156 },
				{ 142.13, 21.345, 0.56842 },
				{ 142.97, 21.886, 0.57518 },
				{ 143.81, 22.433, 0.58183 },
				{ 144.64, 22.985, 0.58837 },
				{ 145.47, 23.543, 0.59481 },
				{ 146.3, 24.106, 0.60113 },
				{ 147.12, 24.674, 0.60736 },
				{ 147.94, 25.247, 0.61347 },
				{ 148.76, 25.826, 0.61948 },
				{ 149.57, 26.409, 0.62538 },
				{ 150.38, 26.996, 0.63118 },
				{ 151.18, 27.589, 0.63686 },
				{ 151.99, 28.186, 0.64244 },
				{ 152.78, 28.787, 0.64792 },
				{ 153.58, 29.393, 0.65329 },
				{ 154.37, 30.003, 0.65855 },
				{ 155.16, 30.617, 0.6637 },
				{ 155.95, 31.235, 0.66875 },
				{ 156.73, 31.857, 0.67369 },
				{ 157.51, 32.483, 0.67852 },
				{ 158.29, 33.112, 0.68324 },
				{ 159.06, 33.745, 0.68786 },
				{ 159.83, 34.382, 0.69238 },
				{ 160.6, 35.022, 0.69678 },
				{ 161.37, 35.665, 0.70108 },
				{ 162.13, 36.312, 0.70527 },
				{ 162.89, 36.962, 0.70936 },
				{ 163.65, 37.615, 0.71333 },
				{ 164.4, 38.271, 0.71721 },
				{ 165.15, 38.929, 0.72097 },
				{ 165.9, 39.591, 0.72463 },
				{ 166.65, 40.255, 0.72818 },
				{ 167.4, 40.922, 0.73162 },
				{ 168.14, 41.591, 0.73496 },
				{ 168.88, 42.263, 0.73819 },
				{ 169.62, 42.937, 0.74131 },
				{ 170.36, 43.613, 0.74433 },
				{ 171.09, 44.292, 0.74724 },
				{ 171.82, 44.973, 0.75004 },
				{ 172.55, 45.655, 0.75273 },
				{ 173.28, 46.34, 0.75532 },
				{ 174.01, 47.026, 0.7578 },
				{ 174.74, 47.715, 0.76018 },
				{ 175.46, 48.404, 0.76245 },
				{ 176.18, 49.096, 0.76461 },
				{ 176.9, 49.789, 0.76666 },
				{ 177.62, 50.483, 0.76861 },
				{ 178.34, 51.179, 0.77045 },
				{ 179.06, 51.876, 0.77219 },
				{ 179.77, 52.575, 0.77381 },
				{ 180.49, 53.274, 0.77533 },
				{ 181.2, 53.974, 0.77675 },
				{ 181.91, 54.676, 0.77805 },
				{ 182.63, 55.378, 0.77925 },
				{ 183.34, 56.081, 0.78034 },
				{ 184.05, 56.785, 0.78133 },
				{ 184.76, 57.49, 0.78221 },
				{ 185.47, 58.195, 0.78298 },
				{ 186.18, 58.901, 0.78365 },
				{ 186.88, 59.607, 0.78421 },
				{ 187.59, 60.313, 0.78466 },
				{ 188.3, 61.02, 0.785 },
				{ 189.01, 61.727, 0.78524 },
				{ 189.71, 62.434, 0.78537 },
				{ 190.41, 63.134, 0.7854 },
				{ 190.9188, 63.6396, 0.7854 }, };
		static const float data_45_45[214 + 1][3] = {
				{ 0, 0, 0 },
				{ 1.0077, 8.0877e-06, 3.4173e-05 },
				{ 2.0077, 0.00011586, 0.00020327 },
				{ 3.0077, 0.0004642, 0.00051387 },
				{ 4.0077, 0.0011946, 0.00096598 },
				{ 5.0077, 0.0024485, 0.0015596 },
				{ 6.0077, 0.0043676, 0.0022947 },
				{ 7.0077, 0.0070932, 0.0031713 },
				{ 8.0076, 0.010767, 0.0041894 },
				{ 9.0076, 0.01553, 0.0053491 },
				{ 10.008, 0.021524, 0.0066502 },
				{ 11.008, 0.028891, 0.0080928 },
				{ 12.008, 0.037772, 0.009677 },
				{ 13.007, 0.048309, 0.011403 },
				{ 14.007, 0.060642, 0.01327 },
				{ 15.007, 0.074914, 0.015278 },
				{ 16.007, 0.091265, 0.017429 },
				{ 17.007, 0.10984, 0.01972 },
				{ 18.007, 0.13077, 0.022153 },
				{ 19.007, 0.15421, 0.024728 },
				{ 20.006, 0.1803, 0.027444 },
				{ 21.006, 0.20917, 0.030302 },
				{ 22.005, 0.24097, 0.033301 },
				{ 23.005, 0.27584, 0.036442 },
				{ 24.004, 0.31392, 0.039724 },
				{ 25.003, 0.35534, 0.043148 },
				{ 26.002, 0.40027, 0.046713 },
				{ 27.001, 0.44882, 0.050419 },
				{ 27.999, 0.50115, 0.054268 },
				{ 28.998, 0.55739, 0.058257 },
				{ 29.996, 0.61768, 0.062389 },
				{ 30.994, 0.68217, 0.066661 },
				{ 31.992, 0.751, 0.071075 },
				{ 32.989, 0.8243, 0.075631 },
				{ 33.986, 0.90221, 0.080328 },
				{ 34.982, 0.98487, 0.085167 },
				{ 35.979, 1.0724, 0.090147 },
				{ 36.974, 1.165, 0.095269 },
				{ 37.97, 1.2628, 0.10053 },
				{ 38.964, 1.3658, 0.10594 },
				{ 39.958, 1.4744, 0.11148 },
				{ 40.952, 1.5885, 0.11717 },
				{ 41.945, 1.7083, 0.123 },
				{ 42.937, 1.8339, 0.12897 },
				{ 43.928, 1.9656, 0.13508 },
				{ 44.918, 2.1034, 0.14134 },
				{ 45.908, 2.2474, 0.14773 },
				{ 46.897, 2.3979, 0.15427 },
				{ 47.884, 2.5549, 0.16095 },
				{ 48.871, 2.7185, 0.16777 },
				{ 49.856, 2.8889, 0.17473 },
				{ 50.84, 3.0663, 0.18183 },
				{ 51.823, 3.2507, 0.18908 },
				{ 52.805, 3.4423, 0.19646 },
				{ 53.785, 3.6412, 0.20399 },
				{ 54.763, 3.8476, 0.21166 },
				{ 55.74, 4.0615, 0.21947 },
				{ 56.715, 4.2831, 0.22742 },
				{ 57.688, 4.5126, 0.23551 },
				{ 58.66, 4.7499, 0.24375 },
				{ 59.629, 4.9954, 0.25212 },
				{ 60.596, 5.249, 0.26064 },
				{ 61.562, 5.5109, 0.2693 },
				{ 62.524, 5.7812, 0.2781 },
				{ 63.485, 6.0601, 0.28704 },
				{ 64.442, 6.3476, 0.29613 },
				{ 65.398, 6.6438, 0.30535 },
				{ 66.35, 6.949, 0.31472 },
				{ 67.299, 7.2631, 0.32423 },
				{ 68.246, 7.5862, 0.33388 },
				{ 69.189, 7.9186, 0.34367 },
				{ 70.129, 8.2603, 0.3536 },
				{ 71.065, 8.6113, 0.36368 },
				{ 71.998, 8.9718, 0.37389 },
				{ 72.927, 9.3419, 0.38425 },
				{ 73.852, 9.7217, 0.39475 },
				{ 74.773, 10.111, 0.40539 },
				{ 75.689, 10.511, 0.41617 },
				{ 76.602, 10.92, 0.4271 },
				{ 77.51, 11.339, 0.43816 },
				{ 78.413, 11.769, 0.44937 },
				{ 79.311, 12.208, 0.46071 },
				{ 80.204, 12.658, 0.4722 },
				{ 81.092, 13.118, 0.48383 },
				{ 81.975, 13.588, 0.49561 },
				{ 82.851, 14.069, 0.50752 },
				{ 83.722, 14.56, 0.51958 },
				{ 84.587, 15.062, 0.53177 },
				{ 85.446, 15.575, 0.54411 },
				{ 86.298, 16.098, 0.55659 },
				{ 87.144, 16.631, 0.56921 },
				{ 87.983, 17.176, 0.58198 },
				{ 88.815, 17.731, 0.59487 },
				{ 89.639, 18.297, 0.60778 },
				{ 90.456, 18.873, 0.62069 },
				{ 91.266, 19.46, 0.63361 },
				{ 92.068, 20.057, 0.64652 },
				{ 92.862, 20.665, 0.65943 },
				{ 93.649, 21.283, 0.67234 },
				{ 94.427, 21.911, 0.68526 },
				{ 95.197, 22.548, 0.69817 },
				{ 95.959, 23.196, 0.71108 },
				{ 96.712, 23.854, 0.724 },
				{ 97.457, 24.521, 0.73691 },
				{ 98.193, 25.198, 0.74982 },
				{ 98.92, 25.884, 0.76274 },
				{ 99.639, 26.58, 0.77565 },
				{ 100.35, 27.285, 0.78856 },
				{ 101.05, 27.998, 0.80147 },
				{ 101.74, 28.721, 0.81439 },
				{ 102.42, 29.453, 0.8273 },
				{ 103.09, 30.194, 0.84021 },
				{ 103.76, 30.943, 0.85313 },
				{ 104.41, 31.7, 0.86604 },
				{ 105.05, 32.466, 0.87895 },
				{ 105.68, 33.241, 0.89187 },
				{ 106.31, 34.023, 0.90478 },
				{ 106.92, 34.813, 0.91769 },
				{ 107.52, 35.611, 0.9306 },
				{ 108.11, 36.417, 0.94352 },
				{ 108.7, 37.231, 0.95643 },
				{ 109.27, 38.051, 0.96934 },
				{ 109.83, 38.88, 0.98226 },
				{ 110.38, 39.715, 0.99509 },
				{ 110.92, 40.557, 1.0078 },
				{ 111.44, 41.406, 1.0203 },
				{ 111.96, 42.262, 1.0327 },
				{ 112.47, 43.124, 1.045 },
				{ 112.97, 43.992, 1.0571 },
				{ 113.45, 44.866, 1.0691 },
				{ 113.93, 45.745, 1.081 },
				{ 114.39, 46.63, 1.0927 },
				{ 114.85, 47.521, 1.1042 },
				{ 115.29, 48.417, 1.1157 },
				{ 115.73, 49.317, 1.1269 },
				{ 116.15, 50.223, 1.1381 },
				{ 116.57, 51.133, 1.1491 },
				{ 116.97, 52.048, 1.1599 },
				{ 117.36, 52.967, 1.1706 },
				{ 117.75, 53.89, 1.1812 },
				{ 118.12, 54.817, 1.1916 },
				{ 118.49, 55.748, 1.2019 },
				{ 118.84, 56.682, 1.2121 },
				{ 119.19, 57.62, 1.2221 },
				{ 119.53, 58.562, 1.2319 },
				{ 119.86, 59.506, 1.2417 },
				{ 120.17, 60.454, 1.2512 },
				{ 120.48, 61.405, 1.2607 },
				{ 120.78, 62.359, 1.27 },
				{ 121.08, 63.315, 1.2791 },
				{ 121.36, 64.274, 1.2882 },
				{ 121.63, 65.236, 1.297 },
				{ 121.9, 66.2, 1.3058 },
				{ 122.16, 67.166, 1.3143 },
				{ 122.41, 68.135, 1.3228 },
				{ 122.65, 69.105, 1.3311 },
				{ 122.88, 70.077, 1.3393 },
				{ 123.11, 71.052, 1.3473 },
				{ 123.33, 72.028, 1.3552 },
				{ 123.54, 73.005, 1.3629 },
				{ 123.74, 73.984, 1.3705 },
				{ 123.93, 74.965, 1.378 },
				{ 124.12, 75.947, 1.3853 },
				{ 124.3, 76.931, 1.3925 },
				{ 124.48, 77.916, 1.3995 },
				{ 124.64, 78.902, 1.4064 },
				{ 124.8, 79.889, 1.4131 },
				{ 124.96, 80.877, 1.4197 },
				{ 125.1, 81.866, 1.4262 },
				{ 125.25, 82.856, 1.4325 },
				{ 125.38, 83.847, 1.4387 },
				{ 125.51, 84.839, 1.4448 },
				{ 125.63, 85.831, 1.4507 },
				{ 125.75, 86.824, 1.4564 },
				{ 125.86, 87.818, 1.462 },
				{ 125.97, 88.812, 1.4675 },
				{ 126.07, 89.807, 1.4729 },
				{ 126.16, 90.803, 1.4781 },
				{ 126.25, 91.799, 1.4831 },
				{ 126.34, 92.795, 1.488 },
				{ 126.42, 93.792, 1.4928 },
				{ 126.49, 94.789, 1.4974 },
				{ 126.56, 95.786, 1.5019 },
				{ 126.63, 96.784, 1.5062 },
				{ 126.69, 97.782, 1.5104 },
				{ 126.75, 98.78, 1.5145 },
				{ 126.8, 99.779, 1.5184 },
				{ 126.86, 100.78, 1.5222 },
				{ 126.9, 101.78, 1.5258 },
				{ 126.95, 102.78, 1.5293 },
				{ 126.98, 103.77, 1.5327 },
				{ 127.02, 104.77, 1.5359 },
				{ 127.05, 105.77, 1.539 },
				{ 127.08, 106.77, 1.5419 },
				{ 127.11, 107.77, 1.5447 },
				{ 127.14, 108.77, 1.5473 },
				{ 127.16, 109.77, 1.5499 },
				{ 127.18, 110.77, 1.5522 },
				{ 127.2, 111.77, 1.5544 },
				{ 127.21, 112.77, 1.5565 },
				{ 127.22, 113.77, 1.5585 },
				{ 127.24, 114.77, 1.5603 },
				{ 127.25, 115.77, 1.5619 },
				{ 127.25, 116.77, 1.5634 },
				{ 127.26, 117.77, 1.5648 },
				{ 127.27, 118.77, 1.566 },
				{ 127.27, 119.77, 1.5671 },
				{ 127.27, 120.77, 1.5681 },
				{ 127.28, 121.77, 1.5689 },
				{ 127.28, 122.77, 1.5695 },
				{ 127.28, 123.77, 1.5701 },
				{ 127.28, 124.77, 1.5705 },
				{ 127.28, 125.77, 1.5707 },
				{ 127.28, 126.77, 1.5708 },
				{ 127.2792, 127.2792, 1.5708 }, };
		static const float data_45_s_45[428 + 1][3] = {
				{ 0, 0, 0 },
				{ 1, 0, 0 },
				{ 2, 0, 0 },
				{ 3.0038, 1.7181e-06, 7.6929e-06 },
				{ 4.0038, 2.7341e-05, 4.9116e-05 },
				{ 5.0038, 0.0001125, 0.0001264 },
				{ 6.0038, 0.00029306, 0.00023956 },
				{ 7.0038, 0.00060488, 0.00038857 },
				{ 8.0038, 0.0010838, 0.00057345 },
				{ 9.0038, 0.0017658, 0.0007942 },
				{ 10.004, 0.0026866, 0.0010508 },
				{ 11.004, 0.0038821, 0.0013433 },
				{ 12.004, 0.0053882, 0.0016716 },
				{ 13.004, 0.0072408, 0.0020358 },
				{ 14.004, 0.0094756, 0.0024359 },
				{ 15.004, 0.012129, 0.0028718 },
				{ 16.004, 0.015236, 0.0033436 },
				{ 17.004, 0.018833, 0.0038513 },
				{ 18.004, 0.022956, 0.0043948 },
				{ 19.004, 0.02764, 0.0049742 },
				{ 20.004, 0.032922, 0.0055895 },
				{ 21.004, 0.038837, 0.0062406 },
				{ 22.004, 0.045422, 0.0069276 },
				{ 23.004, 0.052711, 0.0076504 },
				{ 24.004, 0.060742, 0.0084091 },
				{ 25.004, 0.069549, 0.0092037 },
				{ 26.004, 0.079169, 0.010034 },
				{ 27.004, 0.089637, 0.0109 },
				{ 28.003, 0.10099, 0.011803 },
				{ 29.003, 0.11326, 0.012741 },
				{ 30.003, 0.12649, 0.013715 },
				{ 31.003, 0.14071, 0.014724 },
				{ 32.003, 0.15596, 0.01577 },
				{ 33.003, 0.17227, 0.016851 },
				{ 34.003, 0.18969, 0.017969 },
				{ 35.003, 0.20823, 0.019122 },
				{ 36.002, 0.22795, 0.020311 },
				{ 37.002, 0.24888, 0.021536 },
				{ 38.002, 0.27104, 0.022797 },
				{ 39.002, 0.29449, 0.024094 },
				{ 40.001, 0.31925, 0.025426 },
				{ 41.001, 0.34536, 0.026795 },
				{ 42.001, 0.37286, 0.028199 },
				{ 43, 0.40178, 0.029639 },
				{ 44, 0.43216, 0.031115 },
				{ 44.999, 0.46403, 0.032627 },
				{ 45.999, 0.49743, 0.034175 },
				{ 46.998, 0.53239, 0.035758 },
				{ 47.997, 0.56895, 0.037378 },
				{ 48.997, 0.60716, 0.039033 },
				{ 49.996, 0.64703, 0.040724 },
				{ 50.995, 0.68861, 0.042451 },
				{ 51.994, 0.73194, 0.044214 },
				{ 52.993, 0.77704, 0.046013 },
				{ 53.992, 0.82396, 0.047847 },
				{ 54.991, 0.87273, 0.049718 },
				{ 55.99, 0.92338, 0.051624 },
				{ 56.988, 0.97596, 0.053567 },
				{ 57.987, 1.0305, 0.055545 },
				{ 58.985, 1.087, 0.057559 },
				{ 59.983, 1.1456, 0.059609 },
				{ 60.981, 1.2062, 0.061694 },
				{ 61.98, 1.2689, 0.063816 },
				{ 62.977, 1.3338, 0.065973 },
				{ 63.975, 1.4008, 0.068167 },
				{ 64.973, 1.47, 0.070396 },
				{ 65.97, 1.5415, 0.072661 },
				{ 66.967, 1.6153, 0.074962 },
				{ 67.965, 1.6913, 0.077298 },
				{ 68.962, 1.7698, 0.079671 },
				{ 69.958, 1.8505, 0.082079 },
				{ 70.955, 1.9338, 0.084524 },
				{ 71.951, 2.0194, 0.087004 },
				{ 72.947, 2.1076, 0.08952 },
				{ 73.943, 2.1983, 0.092072 },
				{ 74.939, 2.2915, 0.09466 },
				{ 75.934, 2.3873, 0.097283 },
				{ 76.929, 2.4858, 0.099943 },
				{ 77.924, 2.5869, 0.10264 },
				{ 78.919, 2.6908, 0.10537 },
				{ 79.913, 2.7973, 0.10814 },
				{ 80.907, 2.9067, 0.11094 },
				{ 81.901, 3.0188, 0.11378 },
				{ 82.894, 3.1338, 0.11665 },
				{ 83.887, 3.2516, 0.11956 },
				{ 84.88, 3.3724, 0.12251 },
				{ 85.872, 3.4961, 0.12549 },
				{ 86.864, 3.6227, 0.12851 },
				{ 87.856, 3.7524, 0.13156 },
				{ 88.847, 3.8851, 0.13465 },
				{ 89.838, 4.0209, 0.13778 },
				{ 90.828, 4.1599, 0.14094 },
				{ 91.818, 4.3019, 0.14414 },
				{ 92.807, 4.4472, 0.14737 },
				{ 93.796, 4.5957, 0.15064 },
				{ 94.784, 4.7474, 0.15395 },
				{ 95.772, 4.9024, 0.15729 },
				{ 96.76, 5.0607, 0.16067 },
				{ 97.747, 5.2224, 0.16408 },
				{ 98.733, 5.3874, 0.16753 },
				{ 99.719, 5.5559, 0.17101 },
				{ 100.7, 5.7278, 0.17453 },
				{ 101.69, 5.9033, 0.17809 },
				{ 102.67, 6.0822, 0.18168 },
				{ 103.66, 6.2647, 0.18531 },
				{ 104.64, 6.4507, 0.18897 },
				{ 105.62, 6.6404, 0.19267 },
				{ 106.6, 6.8337, 0.19641 },
				{ 107.58, 7.0307, 0.20018 },
				{ 108.56, 7.2315, 0.20398 },
				{ 109.54, 7.4359, 0.20783 },
				{ 110.52, 7.6442, 0.21171 },
				{ 111.49, 7.8562, 0.21562 },
				{ 112.47, 8.0721, 0.21957 },
				{ 113.45, 8.2919, 0.22356 },
				{ 114.42, 8.5156, 0.22758 },
				{ 115.4, 8.7432, 0.23164 },
				{ 116.37, 8.9748, 0.23573 },
				{ 117.34, 9.2104, 0.23986 },
				{ 118.31, 9.45, 0.24403 },
				{ 119.28, 9.6937, 0.24823 },
				{ 120.25, 9.9414, 0.25247 },
				{ 121.22, 10.193, 0.25674 },
				{ 122.18, 10.449, 0.26105 },
				{ 123.15, 10.71, 0.2654 },
				{ 124.11, 10.974, 0.26978 },
				{ 125.08, 11.243, 0.27419 },
				{ 126.04, 11.516, 0.27865 },
				{ 127, 11.793, 0.28314 },
				{ 127.96, 12.074, 0.28766 },
				{ 128.92, 12.36, 0.29222 },
				{ 129.87, 12.651, 0.29682 },
				{ 130.83, 12.945, 0.30145 },
				{ 131.78, 13.244, 0.30612 },
				{ 132.74, 13.548, 0.31082 },
				{ 133.69, 13.856, 0.31556 },
				{ 134.64, 14.169, 0.32034 },
				{ 135.59, 14.486, 0.32515 },
				{ 136.53, 14.808, 0.32999 },
				{ 137.48, 15.134, 0.33488 },
				{ 138.42, 15.465, 0.3398 },
				{ 139.36, 15.801, 0.34475 },
				{ 140.3, 16.141, 0.34974 },
				{ 141.24, 16.486, 0.35477 },
				{ 142.18, 16.836, 0.35983 },
				{ 143.12, 17.19, 0.36493 },
				{ 144.05, 17.55, 0.37006 },
				{ 144.98, 17.914, 0.37523 },
				{ 145.91, 18.283, 0.38044 },
				{ 146.84, 18.657, 0.38568 },
				{ 147.76, 19.035, 0.39096 },
				{ 148.69, 19.419, 0.39627 },
				{ 149.61, 19.807, 0.40162 },
				{ 150.53, 20.201, 0.40701 },
				{ 151.44, 20.599, 0.41243 },
				{ 152.36, 21.002, 0.41788 },
				{ 153.27, 21.411, 0.42338 },
				{ 154.18, 21.824, 0.42891 },
				{ 155.09, 22.242, 0.43447 },
				{ 156, 22.666, 0.44007 },
				{ 156.9, 23.095, 0.44571 },
				{ 157.8, 23.528, 0.45138 },
				{ 158.7, 23.967, 0.45709 },
				{ 159.6, 24.411, 0.46283 },
				{ 160.49, 24.86, 0.46861 },
				{ 161.38, 25.314, 0.47443 },
				{ 162.27, 25.774, 0.48028 },
				{ 163.15, 26.238, 0.48617 },
				{ 164.04, 26.708, 0.49209 },
				{ 164.92, 27.183, 0.49805 },
				{ 165.79, 27.664, 0.50404 },
				{ 166.67, 28.149, 0.51007 },
				{ 167.54, 28.64, 0.51614 },
				{ 168.41, 29.137, 0.52224 },
				{ 169.27, 29.638, 0.52838 },
				{ 170.13, 30.145, 0.53456 },
				{ 170.99, 30.657, 0.54077 },
				{ 171.85, 31.175, 0.54701 },
				{ 172.7, 31.697, 0.55329 },
				{ 173.55, 32.226, 0.55961 },
				{ 174.4, 32.759, 0.56596 },
				{ 175.24, 33.298, 0.57235 },
				{ 176.08, 33.842, 0.57878 },
				{ 176.91, 34.392, 0.58524 },
				{ 177.74, 34.947, 0.59173 },
				{ 178.57, 35.508, 0.59823 },
				{ 179.4, 36.074, 0.60473 },
				{ 180.22, 36.645, 0.61123 },
				{ 181.03, 37.221, 0.61773 },
				{ 181.85, 37.803, 0.62423 },
				{ 182.66, 38.39, 0.63073 },
				{ 183.46, 38.983, 0.63723 },
				{ 184.27, 39.58, 0.64373 },
				{ 185.06, 40.183, 0.65023 },
				{ 185.86, 40.791, 0.65673 },
				{ 186.65, 41.404, 0.66323 },
				{ 187.43, 42.023, 0.66973 },
				{ 188.21, 42.646, 0.67623 },
				{ 188.99, 43.274, 0.68273 },
				{ 189.77, 43.908, 0.68923 },
				{ 190.54, 44.546, 0.69573 },
				{ 191.3, 45.19, 0.70223 },
				{ 192.06, 45.838, 0.70873 },
				{ 192.82, 46.492, 0.71523 },
				{ 193.57, 47.15, 0.72173 },
				{ 194.32, 47.813, 0.72823 },
				{ 195.07, 48.481, 0.73473 },
				{ 195.81, 49.154, 0.74123 },
				{ 196.54, 49.831, 0.74773 },
				{ 197.27, 50.514, 0.75423 },
				{ 198, 51.201, 0.76073 },
				{ 198.72, 51.893, 0.76723 },
				{ 199.44, 52.589, 0.77373 },
				{ 200.15, 53.29, 0.78023 },
				{ 200.86, 53.996, 0.78673 },
				{ 201.56, 54.707, 0.79323 },
				{ 202.26, 55.421, 0.79973 },
				{ 202.96, 56.141, 0.80623 },
				{ 203.65, 56.865, 0.81273 },
				{ 204.33, 57.593, 0.81923 },
				{ 205.01, 58.326, 0.82573 },
				{ 205.69, 59.063, 0.83223 },
				{ 206.36, 59.805, 0.83873 },
				{ 207.02, 60.551, 0.84523 },
				{ 207.69, 61.301, 0.85173 },
				{ 208.34, 62.056, 0.85823 },
				{ 208.99, 62.815, 0.86473 },
				{ 209.64, 63.578, 0.87123 },
				{ 210.28, 64.345, 0.87773 },
				{ 210.92, 65.116, 0.88423 },
				{ 211.55, 65.892, 0.89073 },
				{ 212.17, 66.671, 0.89723 },
				{ 212.8, 67.455, 0.90373 },
				{ 213.41, 68.243, 0.91023 },
				{ 214.02, 69.034, 0.91673 },
				{ 214.63, 69.83, 0.92323 },
				{ 215.23, 70.63, 0.92973 },
				{ 215.83, 71.433, 0.93623 },
				{ 216.42, 72.24, 0.94273 },
				{ 217, 73.051, 0.94923 },
				{ 217.58, 73.866, 0.95573 },
				{ 218.15, 74.685, 0.96223 },
				{ 218.72, 75.507, 0.96873 },
				{ 219.29, 76.333, 0.97523 },
				{ 219.85, 77.163, 0.98173 },
				{ 220.4, 77.996, 0.98821 },
				{ 220.95, 78.833, 0.99466 },
				{ 221.49, 79.673, 1.0011 },
				{ 222.02, 80.517, 1.0074 },
				{ 222.56, 81.364, 1.0138 },
				{ 223.08, 82.215, 1.0201 },
				{ 223.6, 83.069, 1.0263 },
				{ 224.12, 83.926, 1.0326 },
				{ 224.63, 84.786, 1.0388 },
				{ 225.13, 85.649, 1.0449 },
				{ 225.63, 86.516, 1.0511 },
				{ 226.12, 87.385, 1.0571 },
				{ 226.61, 88.257, 1.0632 },
				{ 227.1, 89.133, 1.0692 },
				{ 227.58, 90.011, 1.0752 },
				{ 228.05, 90.892, 1.0811 },
				{ 228.52, 91.776, 1.087 },
				{ 228.98, 92.663, 1.0929 },
				{ 229.44, 93.552, 1.0988 },
				{ 229.89, 94.444, 1.1046 },
				{ 230.33, 95.339, 1.1103 },
				{ 230.78, 96.236, 1.1161 },
				{ 231.21, 97.135, 1.1217 },
				{ 231.64, 98.038, 1.1274 },
				{ 232.07, 98.942, 1.133 },
				{ 232.49, 99.849, 1.1386 },
				{ 232.91, 100.76, 1.1442 },
				{ 233.32, 101.67, 1.1497 },
				{ 233.73, 102.58, 1.1552 },
				{ 234.13, 103.5, 1.1606 },
				{ 234.52, 104.42, 1.166 },
				{ 234.92, 105.34, 1.1714 },
				{ 235.3, 106.26, 1.1767 },
				{ 235.68, 107.18, 1.182 },
				{ 236.06, 108.11, 1.1873 },
				{ 236.43, 109.04, 1.1925 },
				{ 236.8, 109.97, 1.1977 },
				{ 237.16, 110.9, 1.2028 },
				{ 237.52, 111.84, 1.208 },
				{ 237.87, 112.77, 1.213 },
				{ 238.22, 113.71, 1.2181 },
				{ 238.56, 114.65, 1.2231 },
				{ 238.9, 115.59, 1.2281 },
				{ 239.23, 116.53, 1.233 },
				{ 239.56, 117.48, 1.2379 },
				{ 239.89, 118.42, 1.2428 },
				{ 240.21, 119.37, 1.2476 },
				{ 240.52, 120.32, 1.2524 },
				{ 240.83, 121.27, 1.2572 },
				{ 241.14, 122.22, 1.2619 },
				{ 241.44, 123.17, 1.2666 },
				{ 241.74, 124.13, 1.2713 },
				{ 242.03, 125.09, 1.2759 },
				{ 242.32, 126.04, 1.2805 },
				{ 242.6, 127, 1.285 },
				{ 242.88, 127.96, 1.2895 },
				{ 243.16, 128.92, 1.294 },
				{ 243.43, 129.89, 1.2984 },
				{ 243.7, 130.85, 1.3028 },
				{ 243.96, 131.81, 1.3072 },
				{ 244.22, 132.78, 1.3115 },
				{ 244.47, 133.75, 1.3158 },
				{ 244.72, 134.72, 1.3201 },
				{ 244.97, 135.68, 1.3243 },
				{ 245.21, 136.66, 1.3285 },
				{ 245.45, 137.63, 1.3326 },
				{ 245.68, 138.6, 1.3367 },
				{ 245.91, 139.57, 1.3408 },
				{ 246.14, 140.55, 1.3449 },
				{ 246.36, 141.52, 1.3489 },
				{ 246.58, 142.5, 1.3528 },
				{ 246.79, 143.47, 1.3568 },
				{ 247, 144.45, 1.3607 },
				{ 247.21, 145.43, 1.3645 },
				{ 247.41, 146.41, 1.3684 },
				{ 247.61, 147.39, 1.3722 },
				{ 247.81, 148.37, 1.3759 },
				{ 248, 149.35, 1.3796 },
				{ 248.19, 150.33, 1.3833 },
				{ 248.37, 151.32, 1.387 },
				{ 248.55, 152.3, 1.3906 },
				{ 248.73, 153.28, 1.3942 },
				{ 248.9, 154.27, 1.3977 },
				{ 249.07, 155.25, 1.4012 },
				{ 249.24, 156.24, 1.4047 },
				{ 249.4, 157.23, 1.4081 },
				{ 249.56, 158.21, 1.4115 },
				{ 249.72, 159.2, 1.4149 },
				{ 249.88, 160.19, 1.4182 },
				{ 250.03, 161.18, 1.4215 },
				{ 250.17, 162.17, 1.4248 },
				{ 250.32, 163.16, 1.428 },
				{ 250.46, 164.15, 1.4312 },
				{ 250.59, 165.14, 1.4343 },
				{ 250.73, 166.13, 1.4374 },
				{ 250.86, 167.12, 1.4405 },
				{ 250.99, 168.11, 1.4435 },
				{ 251.11, 169.1, 1.4465 },
				{ 251.24, 170.1, 1.4495 },
				{ 251.36, 171.09, 1.4524 },
				{ 251.47, 172.08, 1.4553 },
				{ 251.59, 173.08, 1.4582 },
				{ 251.7, 174.07, 1.461 },
				{ 251.81, 175.06, 1.4638 },
				{ 251.91, 176.06, 1.4666 },
				{ 252.01, 177.05, 1.4693 },
				{ 252.11, 178.05, 1.4719 },
				{ 252.21, 179.04, 1.4746 },
				{ 252.31, 180.04, 1.4772 },
				{ 252.4, 181.03, 1.4798 },
				{ 252.49, 182.03, 1.4823 },
				{ 252.58, 183.03, 1.4848 },
				{ 252.66, 184.02, 1.4873 },
				{ 252.74, 185.02, 1.4897 },
				{ 252.82, 186.02, 1.4921 },
				{ 252.9, 187.01, 1.4945 },
				{ 252.97, 188.01, 1.4968 },
				{ 253.05, 189.01, 1.4991 },
				{ 253.12, 190, 1.5013 },
				{ 253.19, 191, 1.5035 },
				{ 253.25, 192, 1.5057 },
				{ 253.32, 193, 1.5079 },
				{ 253.38, 194, 1.51 },
				{ 253.44, 194.99, 1.512 },
				{ 253.5, 195.99, 1.5141 },
				{ 253.55, 196.99, 1.5161 },
				{ 253.6, 197.99, 1.518 },
				{ 253.66, 198.99, 1.52 },
				{ 253.71, 199.99, 1.5218 },
				{ 253.75, 200.99, 1.5237 },
				{ 253.8, 201.98, 1.5255 },
				{ 253.84, 202.98, 1.5273 },
				{ 253.89, 203.98, 1.5291 },
				{ 253.93, 204.98, 1.5308 },
				{ 253.97, 205.98, 1.5324 },
				{ 254.01, 206.98, 1.5341 },
				{ 254.04, 207.98, 1.5357 },
				{ 254.08, 208.98, 1.5373 },
				{ 254.11, 209.98, 1.5388 },
				{ 254.14, 210.98, 1.5403 },
				{ 254.17, 211.98, 1.5418 },
				{ 254.2, 212.98, 1.5432 },
				{ 254.22, 213.98, 1.5446 },
				{ 254.25, 214.98, 1.5459 },
				{ 254.27, 215.98, 1.5472 },
				{ 254.3, 216.98, 1.5485 },
				{ 254.32, 217.98, 1.5498 },
				{ 254.34, 218.98, 1.551 },
				{ 254.36, 219.98, 1.5522 },
				{ 254.38, 220.98, 1.5533 },
				{ 254.39, 221.98, 1.5544 },
				{ 254.41, 222.98, 1.5555 },
				{ 254.42, 223.98, 1.5565 },
				{ 254.44, 224.98, 1.5575 },
				{ 254.45, 225.98, 1.5584 },
				{ 254.46, 226.97, 1.5594 },
				{ 254.47, 227.97, 1.5603 },
				{ 254.48, 228.97, 1.5611 },
				{ 254.49, 229.97, 1.5619 },
				{ 254.5, 230.97, 1.5627 },
				{ 254.51, 231.97, 1.5634 },
				{ 254.52, 232.97, 1.5642 },
				{ 254.52, 233.97, 1.5648 },
				{ 254.53, 234.97, 1.5655 },
				{ 254.53, 235.97, 1.5661 },
				{ 254.54, 236.97, 1.5666 },
				{ 254.54, 237.97, 1.5672 },
				{ 254.54, 238.97, 1.5677 },
				{ 254.55, 239.97, 1.5681 },
				{ 254.55, 240.97, 1.5685 },
				{ 254.55, 241.97, 1.5689 },
				{ 254.55, 242.97, 1.5693 },
				{ 254.56, 243.97, 1.5696 },
				{ 254.56, 244.97, 1.5699 },
				{ 254.56, 245.97, 1.5701 },
				{ 254.56, 246.97, 1.5703 },
				{ 254.56, 247.97, 1.5705 },
				{ 254.56, 248.97, 1.5706 },
				{ 254.56, 249.97, 1.5707 },
				{ 254.56, 250.97, 1.5708 },
				{ 254.56, 251.97, 1.5708 },
				{ 254.56, 252.96, 1.5708 },
				{ 254.56, 253.96, 1.5708 },
				{ 254.5584, 254.5584, 1.5708 }, };
		static const float data_90[151 + 1][3] = {
				{ 0, 0, 0 },
				{ 1.0019, 9.2426e-06, 4.6996e-05 },
				{ 2.0019, 0.00018689, 0.00035263 },
				{ 3.0019, 0.00081375, 0.00094257 },
				{ 4.0019, 0.0021741, 0.0018168 },
				{ 5.0019, 0.0045523, 0.0029754 },
				{ 6.0019, 0.0082327, 0.0044183 },
				{ 7.0019, 0.013499, 0.0061454 },
				{ 8.0019, 0.020637, 0.0081569 },
				{ 9.0018, 0.029929, 0.010453 },
				{ 10.002, 0.041661, 0.013033 },
				{ 11.002, 0.056116, 0.015897 },
				{ 12.001, 0.073579, 0.019046 },
				{ 13.001, 0.094334, 0.022479 },
				{ 14.001, 0.11866, 0.026196 },
				{ 15.001, 0.14685, 0.030198 },
				{ 16, 0.17919, 0.034484 },
				{ 16.999, 0.21595, 0.039054 },
				{ 17.999, 0.25742, 0.043909 },
				{ 18.997, 0.30388, 0.049048 },
				{ 19.996, 0.35562, 0.054471 },
				{ 20.994, 0.41292, 0.060178 },
				{ 21.992, 0.47606, 0.06617 },
				{ 22.99, 0.54532, 0.072446 },
				{ 23.987, 0.62098, 0.079007 },
				{ 24.984, 0.70333, 0.085852 },
				{ 25.98, 0.79264, 0.092981 },
				{ 26.975, 0.88919, 0.10039 },
				{ 27.97, 0.99325, 0.10809 },
				{ 28.963, 1.1051, 0.11607 },
				{ 29.956, 1.2251, 0.12434 },
				{ 30.948, 1.3533, 0.13289 },
				{ 31.939, 1.4902, 0.14173 },
				{ 32.928, 1.636, 0.15084 },
				{ 33.916, 1.791, 0.16025 },
				{ 34.902, 1.9553, 0.16994 },
				{ 35.887, 2.1294, 0.17991 },
				{ 36.87, 2.3134, 0.19016 },
				{ 37.851, 2.5076, 0.20071 },
				{ 38.83, 2.7123, 0.21153 },
				{ 39.806, 2.9277, 0.22264 },
				{ 40.78, 3.1541, 0.23403 },
				{ 41.751, 3.3917, 0.24571 },
				{ 42.72, 3.6408, 0.25767 },
				{ 43.685, 3.9016, 0.26992 },
				{ 44.647, 4.1743, 0.28245 },
				{ 45.606, 4.4592, 0.29527 },
				{ 46.561, 4.7565, 0.30837 },
				{ 47.512, 5.0664, 0.32175 },
				{ 48.458, 5.3891, 0.33542 },
				{ 49.4, 5.7249, 0.34937 },
				{ 50.337, 6.074, 0.36361 },
				{ 51.269, 6.4364, 0.37813 },
				{ 52.196, 6.8125, 0.39293 },
				{ 53.116, 7.2024, 0.40802 },
				{ 54.031, 7.6063, 0.4234 },
				{ 54.94, 8.0243, 0.43906 },
				{ 55.841, 8.4567, 0.455 },
				{ 56.736, 8.9035, 0.47123 },
				{ 57.623, 9.3648, 0.48774 },
				{ 58.503, 9.8409, 0.50453 },
				{ 59.374, 10.332, 0.52161 },
				{ 60.236, 10.838, 0.53898 },
				{ 61.09, 11.359, 0.55663 },
				{ 61.934, 11.894, 0.57456 },
				{ 62.769, 12.446, 0.59277 },
				{ 63.593, 13.012, 0.61107 },
				{ 64.406, 13.593, 0.62937 },
				{ 65.209, 14.189, 0.64768 },
				{ 66.001, 14.8, 0.66598 },
				{ 66.782, 15.425, 0.68428 },
				{ 67.551, 16.064, 0.70258 },
				{ 68.308, 16.717, 0.72088 },
				{ 69.053, 17.384, 0.73919 },
				{ 69.786, 18.065, 0.75749 },
				{ 70.506, 18.759, 0.77579 },
				{ 71.213, 19.465, 0.79409 },
				{ 71.908, 20.185, 0.81239 },
				{ 72.589, 20.917, 0.8307 },
				{ 73.256, 21.662, 0.849 },
				{ 73.91, 22.419, 0.8673 },
				{ 74.55, 23.187, 0.8856 },
				{ 75.175, 23.967, 0.9039 },
				{ 75.787, 24.759, 0.92221 },
				{ 76.383, 25.561, 0.94051 },
				{ 76.965, 26.374, 0.95881 },
				{ 77.532, 27.198, 0.97711 },
				{ 78.084, 28.032, 0.99533 },
				{ 78.62, 28.876, 1.0133 },
				{ 79.142, 29.729, 1.0309 },
				{ 79.648, 30.592, 1.0483 },
				{ 80.14, 31.462, 1.0654 },
				{ 80.616, 32.342, 1.0822 },
				{ 81.078, 33.228, 1.0988 },
				{ 81.526, 34.123, 1.115 },
				{ 81.959, 35.024, 1.1309 },
				{ 82.377, 35.932, 1.1466 },
				{ 82.782, 36.847, 1.162 },
				{ 83.172, 37.767, 1.1771 },
				{ 83.549, 38.694, 1.1919 },
				{ 83.912, 39.626, 1.2065 },
				{ 84.261, 40.563, 1.2207 },
				{ 84.598, 41.504, 1.2347 },
				{ 84.921, 42.451, 1.2484 },
				{ 85.231, 43.401, 1.2618 },
				{ 85.529, 44.356, 1.2749 },
				{ 85.815, 45.314, 1.2877 },
				{ 86.088, 46.276, 1.3003 },
				{ 86.349, 47.241, 1.3125 },
				{ 86.599, 48.21, 1.3245 },
				{ 86.837, 49.181, 1.3362 },
				{ 87.063, 50.155, 1.3476 },
				{ 87.279, 51.131, 1.3587 },
				{ 87.484, 52.11, 1.3696 },
				{ 87.679, 53.091, 1.3801 },
				{ 87.863, 54.074, 1.3904 },
				{ 88.038, 55.058, 1.4004 },
				{ 88.203, 56.045, 1.4101 },
				{ 88.358, 57.033, 1.4195 },
				{ 88.504, 58.022, 1.4286 },
				{ 88.641, 59.012, 1.4375 },
				{ 88.77, 60.004, 1.446 },
				{ 88.89, 60.997, 1.4543 },
				{ 89.002, 61.991, 1.4623 },
				{ 89.107, 62.985, 1.47 },
				{ 89.204, 63.98, 1.4775 },
				{ 89.293, 64.976, 1.4846 },
				{ 89.376, 65.973, 1.4915 },
				{ 89.452, 66.97, 1.498 },
				{ 89.521, 67.968, 1.5043 },
				{ 89.585, 68.966, 1.5103 },
				{ 89.642, 69.964, 1.516 },
				{ 89.694, 70.963, 1.5215 },
				{ 89.741, 71.962, 1.5266 },
				{ 89.782, 72.961, 1.5315 },
				{ 89.819, 73.96, 1.5361 },
				{ 89.852, 74.959, 1.5404 },
				{ 89.88, 75.959, 1.5444 },
				{ 89.905, 76.959, 1.5481 },
				{ 89.926, 77.959, 1.5516 },
				{ 89.943, 78.958, 1.5547 },
				{ 89.958, 79.958, 1.5576 },
				{ 89.97, 80.958, 1.5602 },
				{ 89.979, 81.958, 1.5625 },
				{ 89.986, 82.958, 1.5646 },
				{ 89.992, 83.958, 1.5663 },
				{ 89.995, 84.958, 1.5678 },
				{ 89.998, 85.958, 1.5689 },
				{ 89.999, 86.958, 1.5698 },
				{ 90, 87.958, 1.5704 },
				{ 90, 88.958, 1.5707 },
				{ 90, 90, 1.5708 }, };
		static const float data_135[278 + 1][3] = {
				{ 0, 0, 0 },
				{ 1.0093, 8.4074e-06, 4.275e-05 },
				{ 2.0093, 0.00017001, 0.00032076 },
				{ 3.0093, 0.00074022, 0.0008574 },
				{ 4.0093, 0.0019777, 0.0016526 },
				{ 5.0093, 0.004141, 0.0027065 },
				{ 6.0092, 0.0074887, 0.004019 },
				{ 7.0092, 0.01228, 0.0055901 },
				{ 8.0092, 0.018772, 0.0074198 },
				{ 9.0092, 0.027225, 0.0095082 },
				{ 10.009, 0.037897, 0.011855 },
				{ 11.009, 0.051046, 0.014461 },
				{ 12.009, 0.06693, 0.017325 },
				{ 13.009, 0.08581, 0.020448 },
				{ 14.008, 0.10794, 0.023829 },
				{ 15.008, 0.13358, 0.027469 },
				{ 16.008, 0.163, 0.031368 },
				{ 17.007, 0.19644, 0.035525 },
				{ 18.006, 0.23416, 0.039941 },
				{ 19.006, 0.27643, 0.044616 },
				{ 20.004, 0.3235, 0.049549 },
				{ 21.003, 0.37562, 0.054741 },
				{ 22.001, 0.43306, 0.060191 },
				{ 22.999, 0.49607, 0.0659 },
				{ 23.997, 0.56491, 0.071868 },
				{ 24.994, 0.63983, 0.078094 },
				{ 25.991, 0.72109, 0.084579 },
				{ 26.987, 0.80894, 0.091322 },
				{ 27.983, 0.90363, 0.098324 },
				{ 28.977, 1.0054, 0.10558 },
				{ 29.971, 1.1146, 0.1131 },
				{ 30.965, 1.2313, 0.12088 },
				{ 31.957, 1.3559, 0.12892 },
				{ 32.948, 1.4886, 0.13721 },
				{ 33.938, 1.6296, 0.14577 },
				{ 34.927, 1.7793, 0.15458 },
				{ 35.914, 1.9377, 0.16365 },
				{ 36.9, 2.1053, 0.17298 },
				{ 37.884, 2.2821, 0.18257 },
				{ 38.867, 2.4686, 0.19242 },
				{ 39.847, 2.6648, 0.20252 },
				{ 40.826, 2.871, 0.21289 },
				{ 41.802, 3.0875, 0.22351 },
				{ 42.776, 3.3145, 0.23439 },
				{ 43.747, 3.5522, 0.24553 },
				{ 44.716, 3.8008, 0.25693 },
				{ 45.681, 4.0606, 0.26859 },
				{ 46.644, 4.3318, 0.2805 },
				{ 47.603, 4.6145, 0.29268 },
				{ 48.559, 4.909, 0.30511 },
				{ 49.511, 5.2155, 0.3178 },
				{ 50.459, 5.5341, 0.33075 },
				{ 51.402, 5.8651, 0.34396 },
				{ 52.341, 6.2087, 0.35743 },
				{ 53.276, 6.5651, 0.37115 },
				{ 54.205, 6.9343, 0.38514 },
				{ 55.129, 7.3166, 0.39938 },
				{ 56.047, 7.7122, 0.41388 },
				{ 56.96, 8.1211, 0.42864 },
				{ 57.866, 8.5436, 0.44366 },
				{ 58.766, 8.9798, 0.45894 },
				{ 59.659, 9.4298, 0.47448 },
				{ 60.545, 9.8938, 0.49027 },
				{ 61.423, 10.372, 0.50633 },
				{ 62.294, 10.864, 0.52264 },
				{ 63.156, 11.37, 0.53921 },
				{ 64.01, 11.891, 0.55604 },
				{ 64.855, 12.426, 0.57313 },
				{ 65.69, 12.976, 0.59047 },
				{ 66.516, 13.54, 0.60793 },
				{ 67.332, 14.118, 0.62538 },
				{ 68.137, 14.711, 0.64284 },
				{ 68.932, 15.317, 0.66029 },
				{ 69.717, 15.937, 0.67775 },
				{ 70.49, 16.571, 0.6952 },
				{ 71.252, 17.219, 0.71266 },
				{ 72.003, 17.879, 0.73011 },
				{ 72.742, 18.552, 0.74757 },
				{ 73.469, 19.239, 0.76502 },
				{ 74.185, 19.938, 0.78248 },
				{ 74.888, 20.649, 0.79993 },
				{ 75.578, 21.372, 0.81739 },
				{ 76.256, 22.108, 0.83484 },
				{ 76.92, 22.855, 0.8523 },
				{ 77.572, 23.613, 0.86975 },
				{ 78.21, 24.383, 0.88721 },
				{ 78.835, 25.164, 0.90466 },
				{ 79.446, 25.956, 0.92212 },
				{ 80.043, 26.758, 0.93957 },
				{ 80.626, 27.57, 0.95703 },
				{ 81.195, 28.393, 0.97448 },
				{ 81.749, 29.225, 0.99194 },
				{ 82.289, 30.067, 1.0094 },
				{ 82.814, 30.918, 1.0268 },
				{ 83.323, 31.778, 1.0443 },
				{ 83.818, 32.647, 1.0618 },
				{ 84.298, 33.525, 1.0792 },
				{ 84.762, 34.41, 1.0967 },
				{ 85.211, 35.304, 1.1141 },
				{ 85.644, 36.205, 1.1316 },
				{ 86.061, 37.114, 1.149 },
				{ 86.462, 38.03, 1.1665 },
				{ 86.848, 38.953, 1.1839 },
				{ 87.217, 39.882, 1.2014 },
				{ 87.57, 40.818, 1.2189 },
				{ 87.906, 41.76, 1.2363 },
				{ 88.226, 42.707, 1.2538 },
				{ 88.529, 43.66, 1.2712 },
				{ 88.816, 44.618, 1.2887 },
				{ 89.086, 45.581, 1.3061 },
				{ 89.339, 46.548, 1.3236 },
				{ 89.575, 47.52, 1.341 },
				{ 89.794, 48.496, 1.3585 },
				{ 89.996, 49.475, 1.3759 },
				{ 90.181, 50.458, 1.3934 },
				{ 90.349, 51.444, 1.4109 },
				{ 90.5, 52.432, 1.4283 },
				{ 90.633, 53.423, 1.4458 },
				{ 90.749, 54.417, 1.4632 },
				{ 90.847, 55.412, 1.4807 },
				{ 90.929, 56.408, 1.4981 },
				{ 90.992, 57.406, 1.5156 },
				{ 91.039, 58.405, 1.533 },
				{ 91.068, 59.405, 1.5505 },
				{ 91.079, 60.405, 1.568 },
				{ 91.073, 61.405, 1.5854 },
				{ 91.05, 62.404, 1.6029 },
				{ 91.009, 63.403, 1.6203 },
				{ 90.951, 64.402, 1.6378 },
				{ 90.875, 65.399, 1.6552 },
				{ 90.782, 66.395, 1.6727 },
				{ 90.671, 67.388, 1.6901 },
				{ 90.544, 68.38, 1.7076 },
				{ 90.398, 69.37, 1.7251 },
				{ 90.236, 70.356, 1.7425 },
				{ 90.057, 71.34, 1.76 },
				{ 89.86, 72.321, 1.7774 },
				{ 89.646, 73.297, 1.7945 },
				{ 89.416, 74.271, 1.8115 },
				{ 89.17, 75.24, 1.8281 },
				{ 88.907, 76.205, 1.8445 },
				{ 88.629, 77.165, 1.8607 },
				{ 88.335, 78.121, 1.8765 },
				{ 88.027, 79.072, 1.8922 },
				{ 87.704, 80.019, 1.9075 },
				{ 87.366, 80.96, 1.9226 },
				{ 87.014, 81.896, 1.9375 },
				{ 86.649, 82.827, 1.9521 },
				{ 86.27, 83.752, 1.9664 },
				{ 85.878, 84.672, 1.9805 },
				{ 85.474, 85.587, 1.9943 },
				{ 85.056, 86.496, 2.0078 },
				{ 84.627, 87.399, 2.0211 },
				{ 84.186, 88.296, 2.0341 },
				{ 83.733, 89.188, 2.0469 },
				{ 83.269, 90.074, 2.0594 },
				{ 82.794, 90.954, 2.0717 },
				{ 82.309, 91.828, 2.0837 },
				{ 81.813, 92.696, 2.0954 },
				{ 81.307, 93.559, 2.1069 },
				{ 80.791, 94.415, 2.1182 },
				{ 80.266, 95.266, 2.1291 },
				{ 79.732, 96.112, 2.1398 },
				{ 79.188, 96.951, 2.1503 },
				{ 78.636, 97.785, 2.1605 },
				{ 78.076, 98.613, 2.1704 },
				{ 77.508, 99.436, 2.1801 },
				{ 76.932, 100.25, 2.1895 },
				{ 76.348, 101.07, 2.1986 },
				{ 75.757, 101.87, 2.2075 },
				{ 75.159, 102.67, 2.2162 },
				{ 74.554, 103.47, 2.2246 },
				{ 73.942, 104.26, 2.2327 },
				{ 73.325, 105.05, 2.2406 },
				{ 72.701, 105.83, 2.2482 },
				{ 72.071, 106.61, 2.2555 },
				{ 71.436, 107.38, 2.2626 },
				{ 70.795, 108.15, 2.2694 },
				{ 70.15, 108.91, 2.276 },
				{ 69.499, 109.67, 2.2823 },
				{ 68.844, 110.42, 2.2884 },
				{ 68.184, 111.18, 2.2941 },
				{ 67.52, 111.92, 2.2997 },
				{ 66.852, 112.67, 2.305 },
				{ 66.18, 113.41, 2.31 },
				{ 65.505, 114.15, 2.3147 },
				{ 64.826, 114.88, 2.3192 },
				{ 64.144, 115.61, 2.3235 },
				{ 63.459, 116.34, 2.3275 },
				{ 62.771, 117.07, 2.3312 },
				{ 62.08, 117.79, 2.3347 },
				{ 61.387, 118.51, 2.3379 },
				{ 60.692, 119.23, 2.3408 },
				{ 59.995, 119.95, 2.3435 },
				{ 59.296, 120.66, 2.3459 },
				{ 58.595, 121.37, 2.3481 },
				{ 57.893, 122.09, 2.35 },
				{ 57.19, 122.8, 2.3517 },
				{ 56.486, 123.51, 2.3531 },
				{ 55.78, 124.22, 2.3542 },
				{ 55.074, 124.92, 2.3551 },
				{ 54.368, 125.63, 2.3557 },
				{ 53.661, 126.34, 2.3561 },
				{ 52.961, 127.04, 2.3562 },
				{ 52.254, 127.75, 2.3562 },
				{ 51.546, 128.45, 2.3562 },
				{ 50.839, 129.16, 2.3562 },
				{ 50.132, 129.87, 2.3562 },
				{ 49.425, 130.57, 2.3562 },
				{ 48.718, 131.28, 2.3562 },
				{ 48.011, 131.99, 2.3562 },
				{ 47.304, 132.7, 2.3562 },
				{ 46.597, 133.4, 2.3562 },
				{ 45.89, 134.11, 2.3562 },
				{ 45.182, 134.82, 2.3562 },
				{ 44.475, 135.52, 2.3562 },
				{ 43.768, 136.23, 2.3562 },
				{ 43.061, 136.94, 2.3562 },
				{ 42.354, 137.65, 2.3562 },
				{ 41.647, 138.35, 2.3562 },
				{ 40.94, 139.06, 2.3562 },
				{ 40.233, 139.77, 2.3562 },
				{ 39.526, 140.47, 2.3562 },
				{ 38.819, 141.18, 2.3562 },
				{ 38.111, 141.89, 2.3562 },
				{ 37.404, 142.6, 2.3562 },
				{ 36.697, 143.3, 2.3562 },
				{ 35.99, 144.01, 2.3562 },
				{ 35.283, 144.72, 2.3562 },
				{ 34.576, 145.42, 2.3562 },
				{ 33.869, 146.13, 2.3562 },
				{ 33.162, 146.84, 2.3562 },
				{ 32.455, 147.55, 2.3562 },
				{ 31.747, 148.25, 2.3562 },
				{ 31.04, 148.96, 2.3562 },
				{ 30.333, 149.67, 2.3562 },
				{ 29.626, 150.37, 2.3562 },
				{ 28.919, 151.08, 2.3562 },
				{ 28.212, 151.79, 2.3562 },
				{ 27.505, 152.5, 2.3562 },
				{ 26.798, 153.2, 2.3562 },
				{ 26.091, 153.91, 2.3562 },
				{ 25.384, 154.62, 2.3562 },
				{ 24.676, 155.32, 2.3562 },
				{ 23.969, 156.03, 2.3562 },
				{ 23.262, 156.74, 2.3562 },
				{ 22.555, 157.44, 2.3562 },
				{ 21.848, 158.15, 2.3562 },
				{ 21.141, 158.86, 2.3562 },
				{ 20.434, 159.57, 2.3562 },
				{ 19.727, 160.27, 2.3562 },
				{ 19.02, 160.98, 2.3562 },
				{ 18.312, 161.69, 2.3562 },
				{ 17.605, 162.39, 2.3562 },
				{ 16.898, 163.1, 2.3562 },
				{ 16.191, 163.81, 2.3562 },
				{ 15.484, 164.52, 2.3562 },
				{ 14.777, 165.22, 2.3562 },
				{ 14.07, 165.93, 2.3562 },
				{ 13.363, 166.64, 2.3562 },
				{ 12.656, 167.34, 2.3562 },
				{ 11.948, 168.05, 2.3562 },
				{ 11.241, 168.76, 2.3562 },
				{ 10.534, 169.47, 2.3562 },
				{ 9.8272, 170.17, 2.3562 },
				{ 9.1201, 170.88, 2.3562 },
				{ 8.4129, 171.59, 2.3562 },
				{ 7.7058, 172.29, 2.3562 },
				{ 6.9987, 173, 2.3562 },
				{ 6.2916, 173.71, 2.3562 },
				{ 5.5845, 174.42, 2.3562 },
				{ 4.8774, 175.12, 2.3562 },
				{ 4.1703, 175.83, 2.3562 },
				{ 3.4632, 176.54, 2.3562 },
				{ 2.7561, 177.24, 2.3562 },
				{ 2.049, 177.95, 2.3562 },
				{ 1.3419, 178.66, 2.3562 },
				{ 0.63477, 179.37, 2.3562 },
				{ 0, 180, 2.3562 }, };
		static const float data_135_r[278 + 1][3] = {
				{ 0, 0, 0 },
				{ 1, 0, 0 },
				{ 2, 0, 0 },
				{ 3, 0, 0 },
				{ 4, 0, 0 },
				{ 5, 0, 0 },
				{ 6, 0, 0 },
				{ 7, 0, 0 },
				{ 8, 0, 0 },
				{ 9, 0, 0 },
				{ 10, 0, 0 },
				{ 11, 0, 0 },
				{ 12, 0, 0 },
				{ 13, 0, 0 },
				{ 14, 0, 0 },
				{ 15, 0, 0 },
				{ 16, 0, 0 },
				{ 17, 0, 0 },
				{ 18, 0, 0 },
				{ 19, 0, 0 },
				{ 20, 0, 0 },
				{ 21, 0, 0 },
				{ 22, 0, 0 },
				{ 23, 0, 0 },
				{ 24, 0, 0 },
				{ 25, 0, 0 },
				{ 26, 0, 0 },
				{ 27, 0, 0 },
				{ 28, 0, 0 },
				{ 29, 0, 0 },
				{ 30, 0, 0 },
				{ 31, 0, 0 },
				{ 32, 0, 0 },
				{ 33, 0, 0 },
				{ 34, 0, 0 },
				{ 35, 0, 0 },
				{ 36, 0, 0 },
				{ 37, 0, 0 },
				{ 38, 0, 0 },
				{ 39, 0, 0 },
				{ 40, 0, 0 },
				{ 41, 0, 0 },
				{ 42, 0, 0 },
				{ 43, 0, 0 },
				{ 44, 0, 0 },
				{ 45, 0, 0 },
				{ 46, 0, 0 },
				{ 47, 0, 0 },
				{ 48, 0, 0 },
				{ 49, 0, 0 },
				{ 50, 0, 0 },
				{ 51, 0, 0 },
				{ 52, 0, 0 },
				{ 53, 0, 0 },
				{ 54, 0, 0 },
				{ 55, 0, 0 },
				{ 56, 0, 0 },
				{ 57, 0, 0 },
				{ 58, 0, 0 },
				{ 59, 0, 0 },
				{ 60, 0, 0 },
				{ 61, 0, 0 },
				{ 62, 0, 0 },
				{ 63, 0, 0 },
				{ 64, 0, 0 },
				{ 65, 0, 0 },
				{ 66, 0, 0 },
				{ 67, 0, 0 },
				{ 68, 0, 0 },
				{ 69, 0, 0 },
				{ 70, 0, 0 },
				{ 71, 0, 0 },
				{ 72, 0, 0 },
				{ 73, 0, 0 },
				{ 74, 0, 0 },
				{ 75.008, 2.5862e-10, 2.5862e-08 },
				{ 76.008, 4.5737e-05, 0.00013321 },
				{ 77.008, 0.00035526, 0.00052502 },
				{ 78.008, 0.0011872, 0.0011754 },
				{ 79.008, 0.0028002, 0.0020845 },
				{ 80.008, 0.0054528, 0.0032522 },
				{ 81.008, 0.0094036, 0.0046784 },
				{ 82.008, 0.014911, 0.0063633 },
				{ 83.008, 0.022235, 0.0083068 },
				{ 84.008, 0.031632, 0.010509 },
				{ 85.008, 0.043362, 0.01297 },
				{ 86.007, 0.057683, 0.015689 },
				{ 87.007, 0.074853, 0.018667 },
				{ 88.007, 0.095132, 0.021904 },
				{ 89.007, 0.11878, 0.025399 },
				{ 90.006, 0.14605, 0.029153 },
				{ 91.006, 0.1772, 0.033165 },
				{ 92.005, 0.21249, 0.037436 },
				{ 93.005, 0.25218, 0.041966 },
				{ 94.004, 0.29653, 0.046754 },
				{ 95.002, 0.34579, 0.051801 },
				{ 96.001, 0.40023, 0.057107 },
				{ 96.999, 0.46008, 0.062671 },
				{ 97.997, 0.52563, 0.068494 },
				{ 98.994, 0.59711, 0.074575 },
				{ 99.991, 0.67479, 0.080915 },
				{ 100.99, 0.75891, 0.087514 },
				{ 101.98, 0.84974, 0.094371 },
				{ 102.98, 0.94753, 0.10149 },
				{ 103.97, 1.0525, 0.10886 },
				{ 104.97, 1.165, 0.11649 },
				{ 105.96, 1.2851, 0.12439 },
				{ 106.95, 1.4133, 0.13254 },
				{ 107.94, 1.5496, 0.14095 },
				{ 108.93, 1.6944, 0.14961 },
				{ 109.92, 1.8479, 0.15854 },
				{ 110.91, 2.0103, 0.16772 },
				{ 111.89, 2.1819, 0.17717 },
				{ 112.88, 2.363, 0.18687 },
				{ 113.86, 2.5537, 0.19683 },
				{ 114.84, 2.7543, 0.20705 },
				{ 115.81, 2.965, 0.21753 },
				{ 116.79, 3.1861, 0.22826 },
				{ 117.76, 3.4178, 0.23926 },
				{ 118.73, 3.6602, 0.25051 },
				{ 119.7, 3.9138, 0.26203 },
				{ 120.66, 4.1785, 0.2738 },
				{ 121.62, 4.4547, 0.28583 },
				{ 122.58, 4.7426, 0.29811 },
				{ 123.54, 5.0423, 0.31066 },
				{ 124.49, 5.3542, 0.32347 },
				{ 125.43, 5.6782, 0.33653 },
				{ 126.37, 6.0148, 0.34985 },
				{ 127.31, 6.3639, 0.36344 },
				{ 128.24, 6.7259, 0.37728 },
				{ 129.17, 7.1009, 0.39137 },
				{ 130.09, 7.489, 0.40573 },
				{ 131.01, 7.8905, 0.42035 },
				{ 131.92, 8.3054, 0.43522 },
				{ 132.82, 8.7339, 0.45035 },
				{ 133.72, 9.1761, 0.46575 },
				{ 134.61, 9.6322, 0.4814 },
				{ 135.49, 10.102, 0.4973 },
				{ 136.37, 10.587, 0.51347 },
				{ 137.23, 11.085, 0.5299 },
				{ 138.09, 11.598, 0.54658 },
				{ 138.94, 12.125, 0.56353 },
				{ 139.78, 12.666, 0.58073 },
				{ 140.61, 13.222, 0.59815 },
				{ 141.43, 13.792, 0.61561 },
				{ 142.25, 14.377, 0.63306 },
				{ 143.05, 14.976, 0.65052 },
				{ 143.84, 15.588, 0.66797 },
				{ 144.62, 16.215, 0.68543 },
				{ 145.39, 16.854, 0.70288 },
				{ 146.14, 17.508, 0.72034 },
				{ 146.89, 18.174, 0.73779 },
				{ 147.62, 18.853, 0.75525 },
				{ 148.34, 19.545, 0.7727 },
				{ 149.05, 20.249, 0.79016 },
				{ 149.75, 20.966, 0.80761 },
				{ 150.44, 21.694, 0.82507 },
				{ 151.11, 22.435, 0.84252 },
				{ 151.77, 23.187, 0.85998 },
				{ 152.41, 23.951, 0.87743 },
				{ 153.05, 24.725, 0.89489 },
				{ 153.66, 25.511, 0.91234 },
				{ 154.27, 26.307, 0.9298 },
				{ 154.86, 27.114, 0.94725 },
				{ 155.44, 27.931, 0.96471 },
				{ 156, 28.758, 0.98216 },
				{ 156.55, 29.594, 0.99962 },
				{ 157.08, 30.44, 1.0171 },
				{ 157.6, 31.295, 1.0345 },
				{ 158.1, 32.16, 1.052 },
				{ 158.59, 33.032, 1.0694 },
				{ 159.06, 33.913, 1.0869 },
				{ 159.52, 34.803, 1.1043 },
				{ 159.96, 35.7, 1.1218 },
				{ 160.39, 36.604, 1.1393 },
				{ 160.8, 37.516, 1.1567 },
				{ 161.19, 38.435, 1.1742 },
				{ 161.57, 39.361, 1.1916 },
				{ 161.93, 40.293, 1.2091 },
				{ 162.28, 41.232, 1.2265 },
				{ 162.61, 42.176, 1.244 },
				{ 162.92, 43.126, 1.2614 },
				{ 163.22, 44.081, 1.2789 },
				{ 163.5, 45.041, 1.2964 },
				{ 163.76, 46.006, 1.3138 },
				{ 164, 46.975, 1.3313 },
				{ 164.23, 47.949, 1.3487 },
				{ 164.44, 48.926, 1.3662 },
				{ 164.64, 49.907, 1.3836 },
				{ 164.82, 50.891, 1.4011 },
				{ 164.98, 51.878, 1.4185 },
				{ 165.12, 52.868, 1.436 },
				{ 165.24, 53.86, 1.4535 },
				{ 165.35, 54.854, 1.4709 },
				{ 165.44, 55.85, 1.4884 },
				{ 165.52, 56.847, 1.5058 },
				{ 165.57, 57.846, 1.5233 },
				{ 165.61, 58.845, 1.5407 },
				{ 165.63, 59.845, 1.5582 },
				{ 165.64, 60.845, 1.5756 },
				{ 165.62, 61.845, 1.5931 },
				{ 165.59, 62.844, 1.6105 },
				{ 165.54, 63.843, 1.628 },
				{ 165.48, 64.841, 1.6455 },
				{ 165.39, 65.837, 1.6629 },
				{ 165.29, 66.832, 1.6804 },
				{ 165.18, 67.825, 1.6978 },
				{ 165.04, 68.816, 1.7153 },
				{ 164.89, 69.804, 1.7327 },
				{ 164.72, 70.79, 1.7502 },
				{ 164.53, 71.772, 1.7676 },
				{ 164.33, 72.751, 1.785 },
				{ 164.11, 73.726, 1.802 },
				{ 163.87, 74.697, 1.8188 },
				{ 163.61, 75.665, 1.8354 },
				{ 163.35, 76.628, 1.8516 },
				{ 163.06, 77.586, 1.8677 },
				{ 162.76, 78.54, 1.8834 },
				{ 162.44, 79.489, 1.8989 },
				{ 162.12, 80.433, 1.9142 },
				{ 161.77, 81.372, 1.9292 },
				{ 161.41, 82.306, 1.9439 },
				{ 161.04, 83.235, 1.9584 },
				{ 160.66, 84.158, 1.9726 },
				{ 160.26, 85.075, 1.9866 },
				{ 159.85, 85.987, 2.0003 },
				{ 159.43, 86.894, 2.0137 },
				{ 158.99, 87.794, 2.0269 },
				{ 158.55, 88.689, 2.0398 },
				{ 158.09, 89.578, 2.0525 },
				{ 157.62, 90.461, 2.0649 },
				{ 157.14, 91.339, 2.077 },
				{ 156.65, 92.211, 2.0889 },
				{ 156.15, 93.076, 2.1005 },
				{ 155.64, 93.936, 2.1119 },
				{ 155.12, 94.791, 2.123 },
				{ 154.59, 95.639, 2.1339 },
				{ 154.05, 96.482, 2.1445 },
				{ 153.51, 97.319, 2.1548 },
				{ 152.95, 98.15, 2.1649 },
				{ 152.39, 98.976, 2.1747 },
				{ 151.81, 99.797, 2.1843 },
				{ 151.23, 100.61, 2.1936 },
				{ 150.65, 101.42, 2.2026 },
				{ 150.05, 102.23, 2.2114 },
				{ 149.45, 103.02, 2.2199 },
				{ 148.84, 103.82, 2.2282 },
				{ 148.23, 104.61, 2.2362 },
				{ 147.61, 105.39, 2.2439 },
				{ 146.98, 106.17, 2.2514 },
				{ 146.35, 106.95, 2.2587 },
				{ 145.71, 107.72, 2.2656 },
				{ 145.07, 108.48, 2.2723 },
				{ 144.42, 109.24, 2.2788 },
				{ 143.77, 110, 2.285 },
				{ 143.11, 110.76, 2.2909 },
				{ 142.45, 111.51, 2.2966 },
				{ 141.78, 112.25, 2.302 },
				{ 141.12, 112.99, 2.3072 },
				{ 140.44, 113.73, 2.3121 },
				{ 139.76, 114.47, 2.3168 },
				{ 139.08, 115.2, 2.3211 },
				{ 138.4, 115.93, 2.3253 },
				{ 137.71, 116.66, 2.3291 },
				{ 137.03, 117.38, 2.3327 },
				{ 136.33, 118.11, 2.3361 },
				{ 135.64, 118.83, 2.3392 },
				{ 134.94, 119.54, 2.342 },
				{ 134.25, 120.26, 2.3446 },
				{ 133.55, 120.98, 2.3469 },
				{ 132.85, 121.69, 2.349 },
				{ 132.14, 122.4, 2.3508 },
				{ 131.44, 123.11, 2.3523 },
				{ 130.73, 123.82, 2.3536 },
				{ 130.03, 124.53, 2.3546 },
				{ 129.32, 125.24, 2.3554 },
				{ 128.62, 125.94, 2.3559 },
				{ 127.91, 126.65, 2.3562 },
				{ 127.2792, 127.2792, 2.3562 }, };
		static const float data_180[459 + 1][3] = {
				{ 0, 0, 0 },
				{ 1, 0, 0 },
				{ 2, 0, 0 },
				{ 3, 0, 0 },
				{ 4, 0, 0 },
				{ 5, 0, 0 },
				{ 6, 0, 0 },
				{ 7, 0, 0 },
				{ 8, 0, 0 },
				{ 9, 0, 0 },
				{ 10, 0, 0 },
				{ 11, 0, 0 },
				{ 12, 0, 0 },
				{ 13, 0, 0 },
				{ 14, 0, 0 },
				{ 15, 0, 0 },
				{ 16, 0, 0 },
				{ 17, 0, 0 },
				{ 18, 0, 0 },
				{ 19, 0, 0 },
				{ 20, 0, 0 },
				{ 21, 0, 0 },
				{ 22, 0, 0 },
				{ 23, 0, 0 },
				{ 24, 0, 0 },
				{ 25, 0, 0 },
				{ 26, 0, 0 },
				{ 27, 0, 0 },
				{ 28, 0, 0 },
				{ 29, 0, 0 },
				{ 30, 0, 0 },
				{ 31, 0, 0 },
				{ 32, 0, 0 },
				{ 33, 0, 0 },
				{ 34, 0, 0 },
				{ 35, 0, 0 },
				{ 36, 0, 0 },
				{ 37, 0, 0 },
				{ 38, 0, 0 },
				{ 39, 0, 0 },
				{ 40, 0, 0 },
				{ 41, 0, 0 },
				{ 42, 0, 0 },
				{ 43, 0, 0 },
				{ 44, 0, 0 },
				{ 45.005, 2.3522e-07, 2.9402e-06 },
				{ 46.005, 3.6041e-05, 8.7196e-05 },
				{ 47.005, 0.00021479, 0.00028767 },
				{ 48.005, 0.0006527, 0.00060435 },
				{ 49.005, 0.001466, 0.0010373 },
				{ 50.005, 0.0027709, 0.0015864 },
				{ 51.005, 0.0046835, 0.0022517 },
				{ 52.005, 0.0073202, 0.0030333 },
				{ 53.005, 0.010797, 0.003931 },
				{ 54.005, 0.015231, 0.004945 },
				{ 55.005, 0.020737, 0.0060752 },
				{ 56.005, 0.027431, 0.0073216 },
				{ 57.005, 0.035431, 0.0086842 },
				{ 58.005, 0.044853, 0.010163 },
				{ 59.005, 0.055811, 0.011758 },
				{ 60.005, 0.068424, 0.013469 },
				{ 61.005, 0.082806, 0.015297 },
				{ 62.004, 0.099074, 0.017241 },
				{ 63.004, 0.11734, 0.0193 },
				{ 64.004, 0.13773, 0.021477 },
				{ 65.004, 0.16035, 0.023769 },
				{ 66.003, 0.18533, 0.026178 },
				{ 67.003, 0.21277, 0.028702 },
				{ 68.003, 0.24279, 0.031343 },
				{ 69.002, 0.27551, 0.0341 },
				{ 70.001, 0.31104, 0.036974 },
				{ 71.001, 0.34951, 0.039964 },
				{ 72, 0.39102, 0.043069 },
				{ 72.999, 0.43569, 0.046291 },
				{ 73.998, 0.48364, 0.04963 },
				{ 74.996, 0.53498, 0.053084 },
				{ 75.995, 0.58983, 0.056655 },
				{ 76.993, 0.64831, 0.060342 },
				{ 77.991, 0.71052, 0.064145 },
				{ 78.989, 0.77658, 0.068064 },
				{ 79.987, 0.84662, 0.0721 },
				{ 80.984, 0.92074, 0.076252 },
				{ 81.981, 0.99906, 0.08052 },
				{ 82.977, 1.0817, 0.084904 },
				{ 83.974, 1.1687, 0.089404 },
				{ 84.969, 1.2603, 0.094021 },
				{ 85.965, 1.3566, 0.098754 },
				{ 86.96, 1.4576, 0.1036 },
				{ 87.954, 1.5635, 0.10857 },
				{ 88.948, 1.6744, 0.11365 },
				{ 89.941, 1.7904, 0.11885 },
				{ 90.934, 1.9116, 0.12416 },
				{ 91.926, 2.0382, 0.12959 },
				{ 92.917, 2.1702, 0.13514 },
				{ 93.907, 2.3077, 0.1408 },
				{ 94.897, 2.451, 0.14658 },
				{ 95.886, 2.5999, 0.15247 },
				{ 96.874, 2.7548, 0.15849 },
				{ 97.861, 2.9157, 0.16461 },
				{ 98.847, 3.0827, 0.17086 },
				{ 99.832, 3.2558, 0.17722 },
				{ 100.82, 3.4353, 0.18369 },
				{ 101.8, 3.6213, 0.19029 },
				{ 102.78, 3.8137, 0.19699 },
				{ 103.76, 4.0128, 0.20382 },
				{ 104.74, 4.2186, 0.21076 },
				{ 105.71, 4.4313, 0.21782 },
				{ 106.69, 4.6509, 0.22499 },
				{ 107.66, 4.8776, 0.23228 },
				{ 108.64, 5.1114, 0.23969 },
				{ 109.61, 5.3525, 0.24721 },
				{ 110.58, 5.6009, 0.25485 },
				{ 111.54, 5.8568, 0.2626 },
				{ 112.51, 6.1202, 0.27047 },
				{ 113.47, 6.3913, 0.27846 },
				{ 114.43, 6.6701, 0.28656 },
				{ 115.39, 6.9567, 0.29478 },
				{ 116.34, 7.2512, 0.30312 },
				{ 117.3, 7.5538, 0.31157 },
				{ 118.25, 7.8645, 0.32014 },
				{ 119.2, 8.1833, 0.32882 },
				{ 120.14, 8.5104, 0.33762 },
				{ 121.08, 8.8459, 0.34654 },
				{ 122.02, 9.1898, 0.35557 },
				{ 122.96, 9.5423, 0.36472 },
				{ 123.89, 9.9033, 0.37398 },
				{ 124.82, 10.273, 0.38337 },
				{ 125.74, 10.652, 0.39286 },
				{ 126.67, 11.039, 0.40248 },
				{ 127.58, 11.435, 0.41221 },
				{ 128.5, 11.84, 0.42205 },
				{ 129.41, 12.254, 0.43202 },
				{ 130.32, 12.678, 0.44209 },
				{ 131.22, 13.11, 0.45229 },
				{ 132.11, 13.552, 0.4626 },
				{ 133.01, 14.003, 0.47303 },
				{ 133.89, 14.463, 0.48357 },
				{ 134.78, 14.933, 0.49423 },
				{ 135.65, 15.412, 0.50501 },
				{ 136.53, 15.901, 0.5159 },
				{ 137.39, 16.399, 0.52691 },
				{ 138.26, 16.906, 0.53803 },
				{ 139.11, 17.424, 0.54927 },
				{ 139.96, 17.951, 0.56063 },
				{ 140.81, 18.487, 0.5721 },
				{ 141.64, 19.034, 0.58369 },
				{ 142.47, 19.59, 0.59538 },
				{ 143.3, 20.155, 0.60709 },
				{ 144.12, 20.731, 0.61879 },
				{ 144.93, 21.315, 0.63049 },
				{ 145.73, 21.91, 0.64219 },
				{ 146.53, 22.513, 0.65389 },
				{ 147.32, 23.126, 0.66559 },
				{ 148.1, 23.749, 0.6773 },
				{ 148.88, 24.38, 0.689 },
				{ 149.65, 25.02, 0.7007 },
				{ 150.41, 25.669, 0.7124 },
				{ 151.16, 26.327, 0.7241 },
				{ 151.9, 26.994, 0.73581 },
				{ 152.64, 27.67, 0.74751 },
				{ 153.37, 28.354, 0.75921 },
				{ 154.09, 29.047, 0.77091 },
				{ 154.81, 29.748, 0.78261 },
				{ 155.51, 30.457, 0.79432 },
				{ 156.21, 31.175, 0.80602 },
				{ 156.9, 31.9, 0.81772 },
				{ 157.57, 32.634, 0.82942 },
				{ 158.25, 33.375, 0.84112 },
				{ 158.91, 34.125, 0.85283 },
				{ 159.56, 34.882, 0.86453 },
				{ 160.21, 35.646, 0.87623 },
				{ 160.84, 36.418, 0.88793 },
				{ 161.47, 37.198, 0.89963 },
				{ 162.08, 37.985, 0.91133 },
				{ 162.69, 38.778, 0.92304 },
				{ 163.29, 39.579, 0.93474 },
				{ 163.88, 40.387, 0.94644 },
				{ 164.46, 41.202, 0.95814 },
				{ 165.03, 42.024, 0.96984 },
				{ 165.59, 42.852, 0.98155 },
				{ 166.14, 43.686, 0.99325 },
				{ 166.68, 44.527, 1.005 },
				{ 167.21, 45.375, 1.0167 },
				{ 167.74, 46.228, 1.0284 },
				{ 168.25, 47.088, 1.0401 },
				{ 168.75, 47.953, 1.0518 },
				{ 169.24, 48.824, 1.0635 },
				{ 169.72, 49.701, 1.0752 },
				{ 170.19, 50.584, 1.0869 },
				{ 170.65, 51.471, 1.0986 },
				{ 171.1, 52.365, 1.1103 },
				{ 171.54, 53.263, 1.122 },
				{ 171.97, 54.167, 1.1337 },
				{ 172.38, 55.075, 1.1454 },
				{ 172.79, 55.988, 1.1571 },
				{ 173.19, 56.906, 1.1688 },
				{ 173.57, 57.829, 1.1805 },
				{ 173.95, 58.756, 1.1922 },
				{ 174.31, 59.687, 1.2039 },
				{ 174.67, 60.623, 1.2156 },
				{ 175.01, 61.562, 1.2273 },
				{ 175.34, 62.506, 1.239 },
				{ 175.66, 63.453, 1.2507 },
				{ 175.97, 64.404, 1.2624 },
				{ 176.27, 65.359, 1.2741 },
				{ 176.55, 66.317, 1.2858 },
				{ 176.83, 67.278, 1.2975 },
				{ 177.09, 68.243, 1.3092 },
				{ 177.35, 69.21, 1.3209 },
				{ 177.59, 70.181, 1.3326 },
				{ 177.82, 71.154, 1.3443 },
				{ 178.04, 72.129, 1.356 },
				{ 178.24, 73.108, 1.3677 },
				{ 178.44, 74.088, 1.3794 },
				{ 178.63, 75.071, 1.3911 },
				{ 178.8, 76.056, 1.4028 },
				{ 178.96, 77.043, 1.4145 },
				{ 179.11, 78.032, 1.4262 },
				{ 179.25, 79.022, 1.4379 },
				{ 179.37, 80.014, 1.4496 },
				{ 179.49, 81.007, 1.4613 },
				{ 179.59, 82.002, 1.473 },
				{ 179.68, 82.998, 1.4847 },
				{ 179.76, 83.995, 1.4964 },
				{ 179.83, 84.992, 1.5081 },
				{ 179.89, 85.991, 1.5198 },
				{ 179.93, 86.99, 1.5315 },
				{ 179.97, 87.989, 1.5432 },
				{ 179.99, 88.989, 1.5549 },
				{ 180, 89.989, 1.5666 },
				{ 180, 90.281, 1.5781 },
				{ 179.98, 91.281, 1.5898 },
				{ 179.96, 92.281, 1.6015 },
				{ 179.92, 93.28, 1.6132 },
				{ 179.88, 94.279, 1.6249 },
				{ 179.82, 95.277, 1.6366 },
				{ 179.74, 96.275, 1.6483 },
				{ 179.66, 97.271, 1.66 },
				{ 179.57, 98.267, 1.6717 },
				{ 179.46, 99.261, 1.6834 },
				{ 179.34, 100.25, 1.6951 },
				{ 179.21, 101.25, 1.7068 },
				{ 179.07, 102.24, 1.7185 },
				{ 178.92, 103.22, 1.7302 },
				{ 178.75, 104.21, 1.7419 },
				{ 178.58, 105.19, 1.7536 },
				{ 178.39, 106.18, 1.7653 },
				{ 178.19, 107.16, 1.777 },
				{ 177.98, 108.13, 1.7887 },
				{ 177.76, 109.11, 1.8004 },
				{ 177.52, 110.08, 1.8121 },
				{ 177.28, 111.05, 1.8239 },
				{ 177.02, 112.02, 1.8356 },
				{ 176.76, 112.98, 1.8473 },
				{ 176.48, 113.94, 1.859 },
				{ 176.19, 114.9, 1.8707 },
				{ 175.89, 115.85, 1.8824 },
				{ 175.58, 116.8, 1.8941 },
				{ 175.25, 117.75, 1.9058 },
				{ 174.92, 118.69, 1.9175 },
				{ 174.57, 119.63, 1.9292 },
				{ 174.22, 120.56, 1.9409 },
				{ 173.85, 121.49, 1.9526 },
				{ 173.47, 122.42, 1.9643 },
				{ 173.08, 123.34, 1.976 },
				{ 172.68, 124.26, 1.9877 },
				{ 172.27, 125.17, 1.9994 },
				{ 171.85, 126.08, 2.0111 },
				{ 171.42, 126.98, 2.0228 },
				{ 170.98, 127.88, 2.0345 },
				{ 170.53, 128.77, 2.0462 },
				{ 170.06, 129.66, 2.0579 },
				{ 169.59, 130.54, 2.0696 },
				{ 169.11, 131.41, 2.0813 },
				{ 168.61, 132.28, 2.093 },
				{ 168.11, 133.15, 2.1047 },
				{ 167.6, 134, 2.1164 },
				{ 167.07, 134.85, 2.1281 },
				{ 166.54, 135.7, 2.1398 },
				{ 165.99, 136.54, 2.1515 },
				{ 165.44, 137.37, 2.1632 },
				{ 164.88, 138.2, 2.1749 },
				{ 164.3, 139.02, 2.1866 },
				{ 163.72, 139.83, 2.1983 },
				{ 163.13, 140.64, 2.21 },
				{ 162.53, 141.44, 2.2217 },
				{ 161.92, 142.23, 2.2334 },
				{ 161.3, 143.01, 2.2451 },
				{ 160.67, 143.79, 2.2568 },
				{ 160.03, 144.56, 2.2685 },
				{ 159.39, 145.32, 2.2802 },
				{ 158.73, 146.08, 2.2919 },
				{ 158.07, 146.83, 2.3036 },
				{ 157.39, 147.57, 2.3153 },
				{ 156.71, 148.3, 2.327 },
				{ 156.02, 149.02, 2.3387 },
				{ 155.32, 149.74, 2.3504 },
				{ 154.61, 150.44, 2.3621 },
				{ 153.9, 151.14, 2.3738 },
				{ 153.17, 151.83, 2.3855 },
				{ 152.44, 152.51, 2.3972 },
				{ 151.7, 153.19, 2.4089 },
				{ 150.96, 153.85, 2.4206 },
				{ 150.2, 154.51, 2.4323 },
				{ 149.44, 155.15, 2.4441 },
				{ 148.67, 155.79, 2.4558 },
				{ 147.89, 156.42, 2.4675 },
				{ 147.11, 157.04, 2.4792 },
				{ 146.31, 157.65, 2.4909 },
				{ 145.52, 158.25, 2.5026 },
				{ 144.71, 158.84, 2.5143 },
				{ 143.9, 159.43, 2.526 },
				{ 143.08, 160, 2.5377 },
				{ 142.25, 160.56, 2.5494 },
				{ 141.42, 161.11, 2.561 },
				{ 140.58, 161.66, 2.5726 },
				{ 139.73, 162.19, 2.584 },
				{ 138.88, 162.72, 2.5954 },
				{ 138.02, 163.23, 2.6066 },
				{ 137.16, 163.74, 2.6177 },
				{ 136.29, 164.23, 2.6286 },
				{ 135.42, 164.72, 2.6395 },
				{ 134.54, 165.19, 2.6503 },
				{ 133.65, 165.66, 2.6609 },
				{ 132.77, 166.12, 2.6714 },
				{ 131.87, 166.57, 2.6818 },
				{ 130.97, 167.01, 2.6921 },
				{ 130.07, 167.44, 2.7022 },
				{ 129.16, 167.86, 2.7123 },
				{ 128.25, 168.27, 2.7222 },
				{ 127.34, 168.67, 2.732 },
				{ 126.42, 169.07, 2.7417 },
				{ 125.49, 169.45, 2.7513 },
				{ 124.57, 169.83, 2.7608 },
				{ 123.64, 170.2, 2.7701 },
				{ 122.7, 170.55, 2.7794 },
				{ 121.77, 170.9, 2.7885 },
				{ 120.83, 171.25, 2.7975 },
				{ 119.89, 171.58, 2.8064 },
				{ 118.94, 171.9, 2.8151 },
				{ 117.99, 172.22, 2.8238 },
				{ 117.04, 172.53, 2.8323 },
				{ 116.09, 172.83, 2.8407 },
				{ 115.13, 173.12, 2.849 },
				{ 114.17, 173.41, 2.8572 },
				{ 113.21, 173.68, 2.8653 },
				{ 112.25, 173.95, 2.8733 },
				{ 111.28, 174.21, 2.8811 },
				{ 110.31, 174.47, 2.8888 },
				{ 109.35, 174.71, 2.8964 },
				{ 108.37, 174.95, 2.9039 },
				{ 107.4, 175.18, 2.9113 },
				{ 106.43, 175.41, 2.9186 },
				{ 105.45, 175.63, 2.9257 },
				{ 104.47, 175.84, 2.9327 },
				{ 103.49, 176.04, 2.9396 },
				{ 102.51, 176.24, 2.9464 },
				{ 101.53, 176.43, 2.9531 },
				{ 100.55, 176.61, 2.9597 },
				{ 99.566, 176.79, 2.9661 },
				{ 98.581, 176.96, 2.9724 },
				{ 97.594, 177.13, 2.9786 },
				{ 96.607, 177.29, 2.9847 },
				{ 95.619, 177.44, 2.9907 },
				{ 94.63, 177.59, 2.9966 },
				{ 93.64, 177.73, 3.0023 },
				{ 92.649, 177.87, 3.008 },
				{ 91.658, 178, 3.0135 },
				{ 90.666, 178.12, 3.0189 },
				{ 89.673, 178.24, 3.0242 },
				{ 88.68, 178.36, 3.0293 },
				{ 87.686, 178.47, 3.0344 },
				{ 86.691, 178.57, 3.0393 },
				{ 85.696, 178.67, 3.0441 },
				{ 84.701, 178.76, 3.0488 },
				{ 83.705, 178.86, 3.0534 },
				{ 82.708, 178.94, 3.0579 },
				{ 81.712, 179.02, 3.0622 },
				{ 80.715, 179.1, 3.0665 },
				{ 79.717, 179.17, 3.0706 },
				{ 78.72, 179.24, 3.0746 },
				{ 77.722, 179.31, 3.0785 },
				{ 76.724, 179.37, 3.0823 },
				{ 75.725, 179.43, 3.0859 },
				{ 74.727, 179.48, 3.0895 },
				{ 73.728, 179.53, 3.0929 },
				{ 72.729, 179.58, 3.0962 },
				{ 71.73, 179.62, 3.0994 },
				{ 70.731, 179.66, 3.1024 },
				{ 69.732, 179.7, 3.1054 },
				{ 68.732, 179.73, 3.1082 },
				{ 67.733, 179.77, 3.111 },
				{ 66.733, 179.79, 3.1136 },
				{ 65.734, 179.82, 3.1161 },
				{ 64.734, 179.85, 3.1185 },
				{ 63.734, 179.87, 3.1207 },
				{ 62.734, 179.89, 3.1229 },
				{ 61.734, 179.91, 3.1249 },
				{ 60.735, 179.92, 3.1268 },
				{ 59.735, 179.94, 3.1286 },
				{ 58.735, 179.95, 3.1303 },
				{ 57.735, 179.96, 3.1318 },
				{ 56.735, 179.97, 3.1333 },
				{ 55.735, 179.97, 3.1346 },
				{ 54.735, 179.98, 3.1358 },
				{ 53.735, 179.99, 3.1369 },
				{ 52.735, 179.99, 3.1379 },
				{ 51.735, 179.99, 3.1388 },
				{ 50.735, 180, 3.1395 },
				{ 49.735, 180, 3.1402 },
				{ 48.735, 180, 3.1407 },
				{ 47.735, 180, 3.1411 },
				{ 46.735, 180, 3.1414 },
				{ 45.735, 180, 3.1415 },
				{ 44.73, 180, 3.1416 },
				{ 43.73, 180, 3.1416 },
				{ 42.73, 180, 3.1416 },
				{ 41.73, 180, 3.1416 },
				{ 40.73, 180, 3.1416 },
				{ 39.73, 180, 3.1416 },
				{ 38.73, 180, 3.1416 },
				{ 37.73, 180, 3.1416 },
				{ 36.73, 180, 3.1416 },
				{ 35.73, 180, 3.1416 },
				{ 34.73, 180, 3.1416 },
				{ 33.73, 180, 3.1416 },
				{ 32.73, 180, 3.1416 },
				{ 31.73, 180, 3.1416 },
				{ 30.73, 180, 3.1416 },
				{ 29.73, 180, 3.1416 },
				{ 28.73, 180, 3.1416 },
				{ 27.73, 180, 3.1416 },
				{ 26.73, 180, 3.1416 },
				{ 25.73, 180, 3.1416 },
				{ 24.73, 180, 3.1416 },
				{ 23.73, 180, 3.1416 },
				{ 22.73, 180, 3.1416 },
				{ 21.73, 180, 3.1416 },
				{ 20.73, 180, 3.1416 },
				{ 19.73, 180, 3.1416 },
				{ 18.73, 180, 3.1416 },
				{ 17.73, 180, 3.1416 },
				{ 16.73, 180, 3.1416 },
				{ 15.73, 180, 3.1416 },
				{ 14.73, 180, 3.1416 },
				{ 13.73, 180, 3.1416 },
				{ 12.73, 180, 3.1416 },
				{ 11.73, 180, 3.1416 },
				{ 10.73, 180, 3.1416 },
				{ 9.73, 180, 3.1416 },
				{ 8.73, 180, 3.1416 },
				{ 7.73, 180, 3.1416 },
				{ 6.73, 180, 3.1416 },
				{ 5.73, 180, 3.1416 },
				{ 4.73, 180, 3.1416 },
				{ 3.73, 180, 3.1416 },
				{ 2.73, 180, 3.1416 },
				{ 1.73, 180, 3.1416 },
				{ 0.73, 180, 3.1416 },
				{ 0, 180, 3.1416 }, };

		switch (action) {
		case FAST_TURN_LEFT_45:
			return Position(data_45[index][0], data_45[index][1], data_45[index][2]);
		case FAST_TURN_RIGHT_45:
			return Position(data_45[index][0], -data_45[index][1], -data_45[index][2]);
		case FAST_TURN_LEFT_45R:
			return Position(data_45_r[index][0], data_45_r[index][1], data_45_r[index][2]);
		case FAST_TURN_RIGHT_45R:
			return Position(data_45_r[index][0], -data_45_r[index][1], -data_45_r[index][2]);

		case FAST_TURN_LEFT_45_45:
			return Position(data_45_45[index][0], data_45_45[index][1], data_45_45[index][2]);
		case FAST_TURN_RIGHT_45_45:
			return Position(data_45_45[index][0], -data_45_45[index][1], -data_45_45[index][2]);

		case FAST_TURN_LEFT_45_S_45:
			return Position(data_45_s_45[index][0], data_45_s_45[index][1], data_45_s_45[index][2]);
		case FAST_TURN_RIGHT_45_S_45:
			return Position(data_45_s_45[index][0], -data_45_s_45[index][1], -data_45_s_45[index][2]);

		case FAST_TURN_LEFT_90:
			return Position(data_90[index][0], data_90[index][1], data_90[index][2]);
		case FAST_TURN_RIGHT_90:
			return Position(data_90[index][0], -data_90[index][1], -data_90[index][2]);

		case FAST_TURN_LEFT_135:
			return Position(data_135[index][0], data_135[index][1], data_135[index][2]);
		case FAST_TURN_RIGHT_135:
			return Position(data_135[index][0], -data_135[index][1], -data_135[index][2]);
		case FAST_TURN_LEFT_135R:
			return Position(data_135_r[index][0], data_135_r[index][1], data_135_r[index][2]);
		case FAST_TURN_RIGHT_135R:
			return Position(data_135_r[index][0], -data_135_r[index][1], -data_135_r[index][2]);

		case FAST_TURN_LEFT_180:
			return Position(data_180[index][0], data_180[index][1], data_180[index][2]);
		case FAST_TURN_RIGHT_180:
			return Position(data_180[index][0], -data_180[index][1], -data_180[index][2]);

		case FAST_GO_STRAIGHT:
		case FAST_GO_HALF:
		case FAST_GO_DIAGONAL:
		default:
			return Position(interval * index);
		}
	}
};

class Curve90: public Trajectory {
public:
	Curve90(bool mirror = false) :
			Trajectory(), mirror(mirror) {
	}
private:
	bool mirror;
	virtual int size() const {
		return 158;
	}
	virtual Position position(int index) const {
		static const float data[158 + 1][3] = {
				{ 0, 0, 0 },
				{ 1, 0, 0 },
				{ 2, 0, 0 },
				{ 3, 0, 0 },
				{ 4, 0, 0 },
				{ 5, 0, 0 },
				{ 6, 0, 0 },
				{ 7, 0, 0 },
				{ 8, 0, 0 },
				{ 9, 0, 0 },
				{ 10, 0, 0 },
				{ 11, 0, 0 },
				{ 12, 0, 0 },
				{ 13, 0, 0 },
				{ 14, 0, 0 },
				{ 15, 0, 0 },
				{ 16, 0, 0 },
				{ 17, 0, 0 },
				{ 18, 0, 0 },
				{ 19, 0, 0 },
				{ 20, 0, 0 },
				{ 21.002, 1.4543e-05, 7.5223e-05 },
				{ 22.002, 0.00030398, 0.00057718 },
				{ 23.002, 0.0013334, 0.0015505 },
				{ 24.002, 0.0035741, 0.0029951 },
				{ 25.002, 0.0074974, 0.004911 },
				{ 26.001, 0.013575, 0.0072982 },
				{ 27.001, 0.022277, 0.010157 },
				{ 28.001, 0.034076, 0.013487 },
				{ 29.001, 0.049442, 0.017288 },
				{ 30.001, 0.068847, 0.02156 },
				{ 31.001, 0.092762, 0.026304 },
				{ 32, 0.12166, 0.031519 },
				{ 33, 0.156, 0.037206 },
				{ 33.999, 0.19627, 0.043364 },
				{ 34.998, 0.24292, 0.049993 },
				{ 35.996, 0.29644, 0.057093 },
				{ 36.995, 0.35728, 0.064665 },
				{ 37.992, 0.42591, 0.072708 },
				{ 38.989, 0.5028, 0.081223 },
				{ 39.986, 0.58842, 0.090208 },
				{ 40.981, 0.68322, 0.099665 },
				{ 41.976, 0.78767, 0.10959 },
				{ 42.969, 0.90222, 0.11999 },
				{ 43.961, 1.0273, 0.13086 },
				{ 44.952, 1.1635, 0.14221 },
				{ 45.941, 1.3111, 0.15402 },
				{ 46.928, 1.4706, 0.16631 },
				{ 47.913, 1.6424, 0.17906 },
				{ 48.896, 1.827, 0.19229 },
				{ 49.876, 2.0249, 0.20599 },
				{ 50.854, 2.2364, 0.22016 },
				{ 51.828, 2.4619, 0.2348 },
				{ 52.799, 2.702, 0.24991 },
				{ 53.766, 2.9569, 0.2655 },
				{ 54.728, 3.227, 0.28155 },
				{ 55.687, 3.5128, 0.29808 },
				{ 56.64, 3.8147, 0.31508 },
				{ 57.588, 4.1329, 0.33255 },
				{ 58.53, 4.4679, 0.35049 },
				{ 59.466, 4.8199, 0.3689 },
				{ 60.395, 5.1893, 0.38778 },
				{ 61.317, 5.5764, 0.40714 },
				{ 62.232, 5.9816, 0.42696 },
				{ 63.138, 6.4049, 0.44726 },
				{ 64.035, 6.8468, 0.46803 },
				{ 64.922, 7.3075, 0.48927 },
				{ 65.8, 7.787, 0.51098 },
				{ 66.666, 8.2858, 0.53317 },
				{ 67.522, 8.8038, 0.55582 },
				{ 68.365, 9.3413, 0.57894 },
				{ 69.195, 9.8983, 0.60247 },
				{ 70.013, 10.475, 0.62604 },
				{ 70.816, 11.07, 0.64962 },
				{ 71.605, 11.685, 0.67319 },
				{ 72.379, 12.317, 0.69676 },
				{ 73.138, 12.968, 0.72034 },
				{ 73.882, 13.637, 0.74391 },
				{ 74.61, 14.323, 0.76748 },
				{ 75.321, 15.025, 0.79106 },
				{ 76.016, 15.745, 0.81463 },
				{ 76.693, 16.48, 0.8382 },
				{ 77.353, 17.232, 0.86178 },
				{ 77.995, 17.998, 0.88535 },
				{ 78.619, 18.78, 0.90892 },
				{ 79.224, 19.576, 0.93249 },
				{ 79.81, 20.386, 0.95607 },
				{ 80.377, 21.21, 0.97964 },
				{ 80.925, 22.047, 1.003 },
				{ 81.452, 22.896, 1.0259 },
				{ 81.961, 23.757, 1.0483 },
				{ 82.45, 24.629, 1.0703 },
				{ 82.921, 25.511, 1.0918 },
				{ 83.372, 26.404, 1.1128 },
				{ 83.805, 27.305, 1.1333 },
				{ 84.219, 28.215, 1.1534 },
				{ 84.615, 29.133, 1.173 },
				{ 84.994, 30.059, 1.1921 },
				{ 85.355, 30.992, 1.2108 },
				{ 85.698, 31.931, 1.229 },
				{ 86.025, 32.876, 1.2467 },
				{ 86.335, 33.827, 1.2639 },
				{ 86.629, 34.782, 1.2807 },
				{ 86.907, 35.743, 1.297 },
				{ 87.17, 36.708, 1.3128 },
				{ 87.417, 37.677, 1.3282 },
				{ 87.65, 38.649, 1.3431 },
				{ 87.869, 39.625, 1.3575 },
				{ 88.074, 40.604, 1.3714 },
				{ 88.265, 41.585, 1.3849 },
				{ 88.443, 42.569, 1.3979 },
				{ 88.609, 43.555, 1.4104 },
				{ 88.763, 44.544, 1.4225 },
				{ 88.905, 45.533, 1.4341 },
				{ 89.035, 46.525, 1.4452 },
				{ 89.155, 47.518, 1.4559 },
				{ 89.265, 48.512, 1.466 },
				{ 89.364, 49.507, 1.4757 },
				{ 89.455, 50.503, 1.485 },
				{ 89.536, 51.499, 1.4937 },
				{ 89.609, 52.497, 1.502 },
				{ 89.673, 53.494, 1.5098 },
				{ 89.731, 54.493, 1.5172 },
				{ 89.781, 55.492, 1.524 },
				{ 89.824, 56.491, 1.5304 },
				{ 89.862, 57.49, 1.5364 },
				{ 89.893, 58.489, 1.5418 },
				{ 89.92, 59.489, 1.5468 },
				{ 89.941, 60.489, 1.5513 },
				{ 89.959, 61.489, 1.5554 },
				{ 89.972, 62.489, 1.559 },
				{ 89.982, 63.489, 1.5621 },
				{ 89.99, 64.489, 1.5647 },
				{ 89.995, 65.488, 1.5669 },
				{ 89.998, 66.488, 1.5686 },
				{ 89.999, 67.488, 1.5698 },
				{ 90, 68.488, 1.5705 },
				{ 90, 69.488, 1.5708 },
				{ 90, 70.478, 1.5708 },
				{ 90, 71.478, 1.5708 },
				{ 90, 72.478, 1.5708 },
				{ 90, 73.478, 1.5708 },
				{ 90, 74.478, 1.5708 },
				{ 90, 75.478, 1.5708 },
				{ 90, 76.478, 1.5708 },
				{ 90, 77.478, 1.5708 },
				{ 90, 78.478, 1.5708 },
				{ 90, 79.478, 1.5708 },
				{ 90, 80.478, 1.5708 },
				{ 90, 81.478, 1.5708 },
				{ 90, 82.478, 1.5708 },
				{ 90, 83.478, 1.5708 },
				{ 90, 84.478, 1.5708 },
				{ 90, 85.478, 1.5708 },
				{ 90, 86.478, 1.5708 },
				{ 90, 87.478, 1.5708 },
				{ 90, 88.478, 1.5708 },
				{ 90, 89.478, 1.5708 },
				{ 90, 90, 1.5708 }, };
		Position ret;
		if (index < 0) {
			ret = Position(0 + interval * index, 0, 0);
		} else if (index > size() - 1) {
			Position end(data[size()][0], data[size()][1], data[size()][2]);
			ret = end
					+ Position((index - size()) * interval * cos(end.theta),
							(index - size()) * interval * sin(end.theta), 0);
		} else {
			ret = Position(data[index][0], data[index][1], data[index][2]);
		}
		if (mirror)
			return ret.mirror_x();
		return ret;
	}
};

class MoveAction {
public:
	MoveAction(Buzzer *bz, Motor *mt, Encoders *enc, MPU6500 *mpu, Reflector *rfl, WallDetector *wd,
			SpeedController *sc) :
			bz(bz), mt(mt), enc(enc), mpu(mpu), rfl(rfl), wd(wd), sc(sc), thread(
			PRIORITY_MOVE_ACTION, STACK_SIZE_MOVE_ACTION) {
		set_params(600);
		ticker.attach_us(this, &MoveAction::isr, MOVE_ACTION_PERIOD);
	}
	enum ACTION {
		START_STEP, START_INIT, GO_STRAIGHT, TURN_LEFT_90, TURN_RIGHT_90, RETURN, STOP,
	};
	struct Operation {
		enum ACTION action;
		int num;
	};
	const char*
	action_string(enum ACTION action) {
		static const char name[][32] = {
				"start_step",
				"start_init",
				"go_straight",
				"turn_left_90",
				"turn_right_90",
				"return",
				"stop", };
		return name[action];
	}
	void enable() {
		rfl->enable();
		sc->enable();
		if (path.size() > 0) {
			thread.start(this, &MoveAction::fastRun);
		} else {
			thread.start(this, &MoveAction::searchRun);
		}
	}
	void disable() {
		thread.terminate();
		sc->disable();
		rfl->disable();
		while (q.size()) {
			q.pop();
		}
		path.clear();
	}
	void set_action(FastTrajectory::FAST_ACTION action) {
		path.push_back(action);
	}
	void set_action(std::vector<FastTrajectory::FAST_ACTION> actions) {
		path = actions;
	}
	void set_action(enum ACTION action, int num = 1) {
		struct Operation operation;
		operation.action = action;
		operation.num = num;
		q.push(operation);
	}
	void set_params(float fast_speed) {
		this->fast_speed = fast_speed;
	}
	void set_params_relative(float add) {
		this->fast_speed += add;
	}
	int actions() const {
		return q.size();
	}
	void printPosition(const char* name) {
		printf("%s\t", name);
//		printf("Ori:(%06.1f, %06.1f, %06.3f)\t", origin.x, origin.y, origin.theta);
//		printf("Abs:(%06.1f, %06.1f, %06.3f)\t", sc->getPosition().x, sc->getPosition().y,
//				sc->getPosition().theta);
		printf("Rel:(%06.1f, %06.1f, %06.3f)\t", getRelativePosition().x, getRelativePosition().y,
				getRelativePosition().theta);
		printf("\n");
	}
	Position getRelativePosition() {
		return (sc->getPosition() - origin).rotate(-origin.theta);
	}
	void updateOrigin(Position passed) {
		origin += passed.rotate(origin.theta);
	}
	void setPosition(Position pos = Position(90, 6 + 24, M_PI / 2)) {
		origin = pos;
		sc->getPosition() = pos;
	}
	void fixPosition(Position pos) {
		sc->getPosition() -= pos;
	}
private:
	Buzzer *bz;
	Motor *mt;
	Encoders *enc;
	MPU6500 *mpu;
	Reflector *rfl;
	WallDetector *wd;
	SpeedController *sc;
	Thread thread;
	Ticker ticker;
	Timer timer;
	float fast_speed;
	Position origin;
	std::queue<struct Operation> q;
	std::vector<FastTrajectory::FAST_ACTION> path;

	void isr() {
		thread.signal_set(0x01);
	}
	void wall_avoid() {
#if WALL_AVOID_ENABLED
		void wall_attach()
		{
			if (wd->wall().side[0])
			{
				sc->position.y -= wd->wall_difference().side[0] * 0.00001 * sc->actual().trans;
			}
			if (wd->wall().side[1])
			{
				sc->position.y += wd->wall_difference().side[1] * 0.00001 * sc->actual().trans;
			}
		}
#endif
	}
	void wall_attach() {
#if WALL_ATTACH_ENABLED
		if (wd->wall().flont[0] && wd->wall().flont[1])
		{
			while (1)
			{
				float trans = wd->wall_difference().flont[0] + wd->wall_difference().flont[1];
				float rot = wd->wall_difference().flont[1] - wd->wall_difference().flont[0];
				sc->set_target(trans * 100, rot * 10);
				if (fabs(trans) < 0.1f && fabs(rot) < 0.1f) break;
				Thread::wait(1);
			}
			sc->set_target(0, 0);
			fixPosition(Position(getRelativePosition().x, 0, 0).rotate(origin.theta));
		}
#endif
	}
	void turn(float target_angle, float speed) {
		const float accel = 64 * M_PI;
		timer.reset();
		timer.start();
		while (1) {
			Thread::signal_wait(0x01);
			if (fabs(sc->actual.rot) > speed)
				break;
			if (target_angle > 0) {
				sc->set_target(0, timer.read() * accel);
			} else {
				sc->set_target(0, -timer.read() * accel);
			}
		}
		while (1) {
			Thread::signal_wait(0x01);
			if (fabs(sc->actual.rot) < 0.2)
				break;
			float extra = target_angle - getRelativePosition().theta;
			float target_speed = sqrt(2 * accel * fabs(extra));
			target_speed = (target_speed > speed) ? speed : target_speed;
			if (extra > 0) {
				sc->set_target(0, target_speed);
			} else {
				sc->set_target(0, -target_speed);
			}
		}
		updateOrigin(Position(0, 0, target_angle));
	}
	void straight_x(const float distance, const float v_max, const float v_end) {
		const float accel = 6000;
		const float decel = 3000;
		Trajectory st;
		timer.reset();
		timer.start();
		float v_start = sc->actual.trans;
		bool isAccel = true;
		while (1) {
			if (getRelativePosition().x > distance - 10.0f)
				break;
			if (v_end < 1.0f && sc->actual.trans < 1.0f)
				break;
			Thread::signal_wait(0x01);
			float extra = distance - getRelativePosition().x;
			float velocity = sqrt(2 * decel * fabs(extra) + v_end * v_end);
			if (extra < 0)
				velocity = -velocity;
			if (velocity < sc->actual.trans)
				isAccel = false;
			if (isAccel)
				velocity = v_start + timer.read() * accel;
			if (velocity > v_max)
				velocity = v_max;
			Position dir = st.getNextDir(getRelativePosition(), velocity);
			sc->set_target(dir.x, dir.theta * TRAJECTORY_PROP_GAIN);
			wall_avoid();
		}
		sc->set_target(v_end, 0);
//		printPosition("Straight");
		updateOrigin(Position(distance, 0, 0));
	}
	template<class C>
	void trace(C tr, const float velocity) {
//		const float accel = 9000;
		int cnt = 0;
		float integral = 0;
		while (1) {
			if (tr.getRemain() < 5.0f)
				break;
			Thread::signal_wait(0x01);
			Position dir = tr.getNextDir(getRelativePosition(), velocity);
			integral += dir.theta * TRAJECTORY_INT_GAIN * MOVE_ACTION_PERIOD / 1000000;
//			if (dir.x > sc->actual.trans + accel * MOVE_ACTION_PERIOD / 1000000)
//				dir.x = sc->actual.trans + accel * MOVE_ACTION_PERIOD / 1000000;
			sc->set_target(dir.x, (dir.theta + integral) * TRAJECTORY_PROP_GAIN);
			if (cnt++ % 20 == 0) {
//				printf("%.1f\t%.3f\n", dir.x, dir.theta);
			}
		}
		sc->set_target(velocity, 0);
		updateOrigin(tr.getEndPosition());
	}
	void searchRun() {
		const float velocity = 400;
		const float omega = 4 * M_PI;
		while (1) {
			float integral = 0;
			while (q.empty()) {
				Thread::signal_wait(0x01);
				Position cur = getRelativePosition();
				int look_ahead = 30;
				Position dir = (Position(cur.x + look_ahead) - cur).rotate(-cur.theta);
				dir.theta = atan2f(dir.y, dir.x);
				dir *= velocity / look_ahead;
				integral += dir.theta * TRAJECTORY_INT_GAIN * MOVE_ACTION_PERIOD / 1000000;
				sc->set_target(dir.x, (dir.theta + integral) * TRAJECTORY_PROP_GAIN);
			}
			struct Operation operation = q.front();
			enum ACTION action = operation.action;
			int num = operation.num;
			printf("%s: %d\n", action_string(action), num);
			printPosition("Start");
			switch (action) {
			case START_STEP:
				setPosition();
				straight_x(180 - 24 - 6, velocity, velocity);
				break;
			case START_INIT:
				straight_x(90, velocity, 0);
				wall_attach();
				turn(M_PI / 2, omega);
				wall_attach();
				turn(M_PI / 2, omega);
				for (int i = 0; i < 100; i++) {
					sc->set_target(-i, 0);
					Thread::wait(1);
				}
				Thread::wait(200);
				sc->disable();
				mt->drive(-60, -60);
				Thread::wait(400);
				mt->drive(0, 0);
				disable();
				break;
			case GO_STRAIGHT:
				straight_x(180 * num, velocity, velocity);
				break;
			case TURN_LEFT_90:
				for (int i = 0; i < num; i++) {
					Curve90 tr(false);
					trace(tr, velocity);
				}
				break;
			case TURN_RIGHT_90:
				for (int i = 0; i < num; i++) {
					Curve90 tr(true);
					trace(tr, velocity);
				}
				break;
			case RETURN:
				straight_x(90, velocity, 0);
				if (mpu->angle.z > 0) {
					wall_attach();
					turn(-M_PI / 2, omega);
					wall_attach();
					turn(-M_PI / 2, omega);
				} else {
					wall_attach();
					turn(M_PI / 2, omega);
					wall_attach();
					turn(M_PI / 2, omega);
				}
				straight_x(90, velocity, velocity);
				break;
			case STOP:
				straight_x(90, velocity, 0);
				wall_attach();
				disable();
				break;
			}
			q.pop();
			printPosition("End");
		}
	}
	void fastRun() {
		const float velocity = 600;
		setPosition();
		straight_x(180 - 24 - 6, velocity, velocity);
		printPosition("S");
		FastTrajectory tr(path);
		trace(tr, velocity);
		printPosition("E");
		straight_x(90, velocity, 0);
		wall_attach();
		sc->set_target(0, 0);
		Thread::wait(100);
		disable();
	}
};

#endif /* MOVEACTION_H_ */
